{"id":"0406db8ad9ed9156611774d1580b43e1","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.4;\n\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../VRFConsumerBaseV2.sol\";\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n  uint16 public immutable MAX_CONSUMERS = 100;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n  error TooManyConsumers();\n  error InvalidConsumer();\n  error InvalidRandomWords();\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n  event ConsumerAdded(uint64 indexed subId, address consumer);\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\n\n  uint64 s_currentSubId;\n  uint256 s_nextRequestId = 1;\n  uint256 s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\n  mapping(uint64 => address[]) s_consumers; /* subId */ /* consumers */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n  }\n\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\n    address[] memory consumers = s_consumers[_subId];\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == _consumer) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\n    if (!consumerIsAdded(_subId, _consumer)) {\n      revert InvalidConsumer();\n    }\n    _;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\n  }\n\n  /**\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   * @param _words user-provided random words\n   */\n  function fulfillRandomWordsWithOverride(\n    uint256 _requestId,\n    address _consumer,\n    uint256[] memory _words\n  ) public {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    if (_words.length == 0) {\n      _words = new uint256[](req.numWords);\n      for (uint256 i = 0; i < req.numWords; i++) {\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n      }\n    } else if (_words.length != req.numWords) {\n      revert InvalidRandomWords();\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override onlyValidConsumer(_subId, msg.sender) returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(uint64 _subId)\n    external\n    view\n    override\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    )\n  {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig()\n    external\n    pure\n    override\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    )\n  {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n\n    if (consumerIsAdded(_subId, _consumer)) {\n      return;\n    }\n\n    s_consumers[_subId].push(_consumer);\n    emit ConsumerAdded(_subId, _consumer);\n  }\n\n  function removeConsumer(uint64 _subId, address _consumer)\n    external\n    override\n    onlySubOwner(_subId)\n    onlyValidConsumer(_subId, _consumer)\n  {\n    address[] storage consumers = s_consumers[_subId];\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == _consumer) {\n        address last = consumers[consumers.length - 1];\n        consumers[i] = last;\n        consumers.pop();\n        break;\n      }\n    }\n\n    emit ConsumerRemoved(_subId, _consumer);\n  }\n\n  function getConfig()\n    external\n    view\n    returns (\n      uint16 minimumRequestConfirmations,\n      uint32 maxGasLimit,\n      uint32 stalenessSeconds,\n      uint32 gasAfterPaymentCalculation\n    )\n  {\n    return (4, 2_500_000, 2_700, 33285);\n  }\n\n  function getFeeConfig()\n    external\n    view\n    returns (\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\n      uint24 reqsForTier2,\n      uint24 reqsForTier3,\n      uint24 reqsForTier4,\n      uint24 reqsForTier5\n    )\n  {\n    return (\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      0,\n      0,\n      0,\n      0\n    );\n  }\n\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\n    return 4000000000000000; // 0.004 Ether\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/RandomIpfsNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage{\n\n    error Ipfs_NotEnoughToMint();\n    error ipfs_Not_Owner();\n    error ipfs_RangeOutOfBound();\n    error ipfs_TransferFailed();\n\n    event requestedNft(uint256 indexed requestId, address requester);\n    event NftMinted(breed dogBreed, address minter);\n\n\n    enum breed{\n        pug,\n        shibaInu,\n        St_bernard\n    }\n\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinatorv2;\n    uint64 private immutable i_subscriptionId;\n    bytes32 private immutable i_gasLane;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    mapping(uint=> address) private s_requestIdToOwner;\n\n    uint256 public s_tokenCounter;\n    address private immutable i_owner;\n    uint256 private immutable i_mintFee;\n\n\n\n    uint256[] public requestIds;\n    uint internal constant MAX_CHANCE_VALUE = 100;\n    string[] internal s_dogTokenUris;\n\n\n    constructor(address vrfCoordinatorV2, uint64 subscriptionId, bytes32 gasLane, uint32 callbackGasLimit,    \n    string[3] memory dogTokenUris, uint256 mintFee) VRFConsumerBaseV2(vrfCoordinatorV2) \n    ERC721(\"RandomIpfsNft\", \"RIN\") {\n        i_vrfCoordinatorv2 = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_subscriptionId = subscriptionId;\n        i_gasLane = gasLane;\n        i_callbackGasLimit = callbackGasLimit;\n        s_dogTokenUris = dogTokenUris;\n        i_mintFee = mintFee;\n        i_owner = msg.sender;\n\n    }\n\n    function requestNft() payable public returns(uint256 requestId){\n        if(msg.value < i_mintFee){\n            revert Ipfs_NotEnoughToMint();\n        }\n        requestId = i_vrfCoordinatorv2.requestRandomWords(i_gasLane,\n        i_subscriptionId,\n        REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS);\n\n            s_requestIdToOwner[requestId] = msg.sender;\n\n            emit requestedNft(requestId, msg.sender );\n\n    }\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override{\n\n        address dogOwner = s_requestIdToOwner[requestId];\n        uint tokenId = s_tokenCounter;\n\n        \n\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\n\n        breed dogBreed = getBreedByModdedRng(moddedRng);\n        _safeMint(dogOwner, tokenId);\n        _setTokenURI(tokenId, s_dogTokenUris[uint256(dogBreed)]);\n\n        emit NftMinted(dogBreed, dogOwner);\n\n    }\n    \n    function getBreedByModdedRng(uint256 moddedRng) public pure returns(breed){\n        uint cumilativeSum = 0;\n        uint[3] memory chanceArray = getArrayChance();\n        for(uint i = 0 ; i < chanceArray.length ; i++ ){\n            if(moddedRng > cumilativeSum && moddedRng < cumilativeSum + chanceArray[i]){\n                return breed(i);\n            }\n            cumilativeSum += chanceArray[i];\n        }\n        revert ipfs_RangeOutOfBound();\n    }\n\n\n\n    function getArrayChance() public pure returns(uint[3] memory){\n        return [10, 30, MAX_CHANCE_VALUE];\n    }\n     modifier onlyOwner(){\n        if(msg.sender != i_owner) revert ipfs_Not_Owner();\n        _;\n    }\n\n    function withdraw() onlyOwner payable public {\n        uint256 amount = address(this).balance;\n        (bool success,) = payable(msg.sender).call{value: amount}(\"\");\n        if(!success){\n            revert ipfs_TransferFailed();\n        }\n    }\n\n        function getMintFee() public view returns(uint256){\n            return i_mintFee;\n        }\n        function getDogTokenUris(uint index) public view returns(string memory){\n            return s_dogTokenUris[index];\n        }\n        function getTokenCounter() public view returns(uint256){\n            return s_tokenCounter;\n        }\n        \n\n   \n\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:306:45:\n    |\n306 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                             ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9040,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9027},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:306:60:\n    |\n306 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                                            ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9059,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9042},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:310:44:\n    |\n310 |   function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    |                                            ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9178,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9165},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:314:33:\n    |\n314 |   function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    |                                 ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9285,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9273},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:261:3:\n    |\n261 |   function getConfig()\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":8266,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":8016},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:274:3:\n    |\n274 |   function getFeeConfig()\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":8860,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":8270},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:302:3:\n    |\n302 |   function getFallbackWeiPerUnitLink() external view returns (int256) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":8981,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":8864},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:314:3:\n    |\n314 |   function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":9359,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9243},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[152]},"id":153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":152,"linearizedBaseContracts":[152],"name":"LinkTokenInterface","nameLocation":"67:18:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":68,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:1","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"mutability":"mutable","name":"owner","nameLocation":"117:5:1","nodeType":"VariableDeclaration","scope":68,"src":"109:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"spender","nameLocation":"132:7:1","nodeType":"VariableDeclaration","scope":68,"src":"124:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:1"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"remaining","nameLocation":"172:9:1","nodeType":"VariableDeclaration","scope":68,"src":"164:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:1"},"scope":152,"src":"90:93:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":77,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:1","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"spender","nameLocation":"212:7:1","nodeType":"VariableDeclaration","scope":77,"src":"204:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"value","nameLocation":"229:5:1","nodeType":"VariableDeclaration","scope":77,"src":"221:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:1"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"success","nameLocation":"259:7:1","nodeType":"VariableDeclaration","scope":77,"src":"254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":74,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:1"},"scope":152,"src":"187:81:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:1","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"owner","nameLocation":"299:5:1","nodeType":"VariableDeclaration","scope":84,"src":"291:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:1"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"balance","nameLocation":"337:7:1","nodeType":"VariableDeclaration","scope":84,"src":"329:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:1"},"scope":152,"src":"272:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:1","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"367:2:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:1","nodeType":"VariableDeclaration","scope":89,"src":"393:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":86,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:1"},"scope":152,"src":"350:64:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:1","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"spender","nameLocation":"452:7:1","nodeType":"VariableDeclaration","scope":98,"src":"444:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:1","nodeType":"VariableDeclaration","scope":98,"src":"461:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"success","nameLocation":"504:7:1","nodeType":"VariableDeclaration","scope":98,"src":"499:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:1"},"scope":152,"src":"418:95:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":105,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:1","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"spender","nameLocation":"551:7:1","nodeType":"VariableDeclaration","scope":105,"src":"543:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:1","nodeType":"VariableDeclaration","scope":105,"src":"560:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:1"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"593:0:1"},"scope":152,"src":"517:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:1","nodeType":"FunctionDefinition","parameters":{"id":106,"nodeType":"ParameterList","parameters":[],"src":"611:2:1"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":108,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:1","nodeType":"VariableDeclaration","scope":110,"src":"637:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":107,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:1"},"scope":152,"src":"598:64:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:1","nodeType":"FunctionDefinition","parameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"681:2:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:1","nodeType":"VariableDeclaration","scope":115,"src":"707:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":112,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:1"},"scope":152,"src":"666:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"758:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:1","nodeType":"VariableDeclaration","scope":120,"src":"784:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:1"},"scope":152,"src":"738:73:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"to","nameLocation":"841:2:1","nodeType":"VariableDeclaration","scope":129,"src":"833:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":124,"mutability":"mutable","name":"value","nameLocation":"853:5:1","nodeType":"VariableDeclaration","scope":129,"src":"845:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"success","nameLocation":"883:7:1","nodeType":"VariableDeclaration","scope":129,"src":"878:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":126,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:1"},"scope":152,"src":"815:77:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":140,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:1","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"to","nameLocation":"934:2:1","nodeType":"VariableDeclaration","scope":140,"src":"926:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"value","nameLocation":"950:5:1","nodeType":"VariableDeclaration","scope":140,"src":"942:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"data","nameLocation":"976:4:1","nodeType":"VariableDeclaration","scope":140,"src":"961:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":134,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:1"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"success","nameLocation":"1008:7:1","nodeType":"VariableDeclaration","scope":140,"src":"1003:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":137,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:1"},"scope":152,"src":"896:121:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"from","nameLocation":"1056:4:1","nodeType":"VariableDeclaration","scope":151,"src":"1048:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"to","nameLocation":"1074:2:1","nodeType":"VariableDeclaration","scope":151,"src":"1066:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"value","nameLocation":"1090:5:1","nodeType":"VariableDeclaration","scope":151,"src":"1082:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"success","nameLocation":"1123:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1118:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":148,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:1"},"scope":152,"src":"1021:111:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":153,"src":"57:1077:1","usedErrors":[]}],"src":"32:1103:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[248]},"id":249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":154,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":248,"linearizedBaseContracts":[248],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"97:267:2","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":165,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:2","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[],"src":"392:2:2"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"437:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":157,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"451:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":159,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":165,"src":"465:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":162,"nodeType":"ArrayTypeName","src":"465:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:2"},"scope":248,"src":"367:121:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"492:1511:2","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":181,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:2","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:2","nodeType":"VariableDeclaration","scope":181,"src":"2039:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"subId","nameLocation":"2067:5:2","nodeType":"VariableDeclaration","scope":181,"src":"2060:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":169,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:2","nodeType":"VariableDeclaration","scope":181,"src":"2078:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":171,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:2","nodeType":"VariableDeclaration","scope":181,"src":"2118:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":173,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:2","nodeType":"VariableDeclaration","scope":181,"src":"2147:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":175,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:2"},"returnParameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:2","nodeType":"VariableDeclaration","scope":181,"src":"2185:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:2"},"scope":248,"src":"2006:198:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2208:384:2","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":187,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:2","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"2622:2:2"},"returnParameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"subId","nameLocation":"2650:5:2","nodeType":"VariableDeclaration","scope":187,"src":"2643:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":184,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:2"},"scope":248,"src":"2595:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2661:381:2","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:2","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"subId","nameLocation":"3077:5:2","nodeType":"VariableDeclaration","scope":202,"src":"3070:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":189,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:2"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"balance","nameLocation":"3133:7:2","nodeType":"VariableDeclaration","scope":202,"src":"3126:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":192,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:2","nodeType":"VariableDeclaration","scope":202,"src":"3148:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":194,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"owner","nameLocation":"3179:5:2","nodeType":"VariableDeclaration","scope":202,"src":"3171:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:2","nodeType":"VariableDeclaration","scope":202,"src":"3192:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":199,"nodeType":"ArrayTypeName","src":"3192:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:2"},"scope":248,"src":"3045:180:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"3229:164:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":210,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:2","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"subId","nameLocation":"3445:5:2","nodeType":"VariableDeclaration","scope":210,"src":"3438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":204,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:2","nodeType":"VariableDeclaration","scope":210,"src":"3452:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:2"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"3478:0:2"},"scope":248,"src":"3396:83:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"3483:212:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"subId","nameLocation":"3746:5:2","nodeType":"VariableDeclaration","scope":216,"src":"3739:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":212,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:2"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"3761:0:2"},"scope":248,"src":"3698:64:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3766:170:2","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:2","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"subId","nameLocation":"3967:5:2","nodeType":"VariableDeclaration","scope":224,"src":"3960:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":218,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:2","nodeType":"VariableDeclaration","scope":224,"src":"3974:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:2"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"4000:0:2"},"scope":248,"src":"3939:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"4005:172:2","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:2","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"subId","nameLocation":"4211:5:2","nodeType":"VariableDeclaration","scope":232,"src":"4204:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":226,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:2","nodeType":"VariableDeclaration","scope":232,"src":"4218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"4244:0:2"},"scope":248,"src":"4180:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"4249:140:2","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":240,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"subId","nameLocation":"4427:5:2","nodeType":"VariableDeclaration","scope":240,"src":"4420:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"to","nameLocation":"4442:2:2","nodeType":"VariableDeclaration","scope":240,"src":"4434:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:2"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[],"src":"4454:0:2"},"scope":248,"src":"4392:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:2","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"subId","nameLocation":"4788:5:2","nodeType":"VariableDeclaration","scope":247,"src":"4781:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":241,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:2"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"4818:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:2"},"scope":248,"src":"4751:73:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":249,"src":"57:4769:2","usedErrors":[]}],"src":"32:4795:2"},"id":2},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[152],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[248],"VRFCoordinatorV2Mock":[1111]},"id":1112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"92:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"../interfaces/LinkTokenInterface.sol","id":251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1112,"sourceUnit":153,"src":"117:46:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1112,"sourceUnit":249,"src":"164:53:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1112,"sourceUnit":58,"src":"218:34:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":254,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"287:25:3"},"id":255,"nodeType":"InheritanceSpecifier","src":"287:25:3"}],"canonicalName":"VRFCoordinatorV2Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1111,"linearizedBaseContracts":[1111,248],"name":"VRFCoordinatorV2Mock","nameLocation":"263:20:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":257,"mutability":"immutable","name":"BASE_FEE","nameLocation":"341:8:3","nodeType":"VariableDeclaration","scope":1111,"src":"317:32:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":256,"name":"uint96","nodeType":"ElementaryTypeName","src":"317:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":259,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"377:14:3","nodeType":"VariableDeclaration","scope":1111,"src":"353:38:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":258,"name":"uint96","nodeType":"ElementaryTypeName","src":"353:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"64d51a2a","id":262,"mutability":"immutable","name":"MAX_CONSUMERS","nameLocation":"419:13:3","nodeType":"VariableDeclaration","scope":1111,"src":"395:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":260,"name":"uint16","nodeType":"ElementaryTypeName","src":"395:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"435:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"id":264,"name":"InvalidSubscription","nameLocation":"449:19:3","nodeType":"ErrorDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"468:2:3"},"src":"443:28:3"},{"id":266,"name":"InsufficientBalance","nameLocation":"480:19:3","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"499:2:3"},"src":"474:28:3"},{"id":270,"name":"MustBeSubOwner","nameLocation":"511:14:3","nodeType":"ErrorDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"owner","nameLocation":"534:5:3","nodeType":"VariableDeclaration","scope":270,"src":"526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:15:3"},"src":"505:36:3"},{"id":272,"name":"TooManyConsumers","nameLocation":"550:16:3","nodeType":"ErrorDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"566:2:3"},"src":"544:25:3"},{"id":274,"name":"InvalidConsumer","nameLocation":"578:15:3","nodeType":"ErrorDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"593:2:3"},"src":"572:24:3"},{"id":276,"name":"InvalidRandomWords","nameLocation":"605:18:3","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"623:2:3"},"src":"599:27:3"},{"anonymous":false,"id":294,"name":"RandomWordsRequested","nameLocation":"636:20:3","nodeType":"EventDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":294,"src":"662:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"662:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"699:9:3","nodeType":"VariableDeclaration","scope":294,"src":"691:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"722:7:3","nodeType":"VariableDeclaration","scope":294,"src":"714:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"750:5:3","nodeType":"VariableDeclaration","scope":294,"src":"735:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":283,"name":"uint64","nodeType":"ElementaryTypeName","src":"735:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"768:27:3","nodeType":"VariableDeclaration","scope":294,"src":"761:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":285,"name":"uint16","nodeType":"ElementaryTypeName","src":"761:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":288,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"808:16:3","nodeType":"VariableDeclaration","scope":294,"src":"801:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":287,"name":"uint32","nodeType":"ElementaryTypeName","src":"801:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":290,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"837:8:3","nodeType":"VariableDeclaration","scope":294,"src":"830:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":289,"name":"uint32","nodeType":"ElementaryTypeName","src":"830:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":292,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"867:6:3","nodeType":"VariableDeclaration","scope":294,"src":"851:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"656:221:3"},"src":"630:248:3"},{"anonymous":false,"id":304,"name":"RandomWordsFulfilled","nameLocation":"887:20:3","nodeType":"EventDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"924:9:3","nodeType":"VariableDeclaration","scope":304,"src":"908:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":298,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"943:10:3","nodeType":"VariableDeclaration","scope":304,"src":"935:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"962:7:3","nodeType":"VariableDeclaration","scope":304,"src":"955:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":299,"name":"uint96","nodeType":"ElementaryTypeName","src":"955:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":302,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"976:7:3","nodeType":"VariableDeclaration","scope":304,"src":"971:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":301,"name":"bool","nodeType":"ElementaryTypeName","src":"971:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"907:77:3"},"src":"881:104:3"},{"anonymous":false,"id":310,"name":"SubscriptionCreated","nameLocation":"994:19:3","nodeType":"EventDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1029:5:3","nodeType":"VariableDeclaration","scope":310,"src":"1014:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":305,"name":"uint64","nodeType":"ElementaryTypeName","src":"1014:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":308,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1044:5:3","nodeType":"VariableDeclaration","scope":310,"src":"1036:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1013:37:3"},"src":"988:63:3"},{"anonymous":false,"id":318,"name":"SubscriptionFunded","nameLocation":"1060:18:3","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1094:5:3","nodeType":"VariableDeclaration","scope":318,"src":"1079:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":311,"name":"uint64","nodeType":"ElementaryTypeName","src":"1079:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"1109:10:3","nodeType":"VariableDeclaration","scope":318,"src":"1101:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"1129:10:3","nodeType":"VariableDeclaration","scope":318,"src":"1121:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:62:3"},"src":"1054:87:3"},{"anonymous":false,"id":326,"name":"SubscriptionCanceled","nameLocation":"1150:20:3","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1186:5:3","nodeType":"VariableDeclaration","scope":326,"src":"1171:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":319,"name":"uint64","nodeType":"ElementaryTypeName","src":"1171:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1201:2:3","nodeType":"VariableDeclaration","scope":326,"src":"1193:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1213:6:3","nodeType":"VariableDeclaration","scope":326,"src":"1205:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1170:50:3"},"src":"1144:77:3"},{"anonymous":false,"id":332,"name":"ConsumerAdded","nameLocation":"1230:13:3","nodeType":"EventDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1259:5:3","nodeType":"VariableDeclaration","scope":332,"src":"1244:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":327,"name":"uint64","nodeType":"ElementaryTypeName","src":"1244:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":330,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"1274:8:3","nodeType":"VariableDeclaration","scope":332,"src":"1266:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1266:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:40:3"},"src":"1224:60:3"},{"anonymous":false,"id":338,"name":"ConsumerRemoved","nameLocation":"1293:15:3","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1324:5:3","nodeType":"VariableDeclaration","scope":338,"src":"1309:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":333,"name":"uint64","nodeType":"ElementaryTypeName","src":"1309:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"1339:8:3","nodeType":"VariableDeclaration","scope":338,"src":"1331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"1331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1308:40:3"},"src":"1287:62:3"},{"constant":false,"id":340,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1360:14:3","nodeType":"VariableDeclaration","scope":1111,"src":"1353:21:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":339,"name":"uint64","nodeType":"ElementaryTypeName","src":"1353:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":343,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1386:15:3","nodeType":"VariableDeclaration","scope":1111,"src":"1378:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1417:13:3","nodeType":"VariableDeclaration","scope":1111,"src":"1409:27:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:3:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":351,"members":[{"constant":false,"id":348,"mutability":"mutable","name":"owner","nameLocation":"1474:5:3","nodeType":"VariableDeclaration","scope":351,"src":"1466:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"balance","nameLocation":"1492:7:3","nodeType":"VariableDeclaration","scope":351,"src":"1485:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":349,"name":"uint96","nodeType":"ElementaryTypeName","src":"1485:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1447:12:3","nodeType":"StructDefinition","scope":1111,"src":"1440:64:3","visibility":"public"},{"constant":false,"id":356,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1539:15:3","nodeType":"VariableDeclaration","scope":1111,"src":"1507:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":355,"keyType":{"id":352,"name":"uint64","nodeType":"ElementaryTypeName","src":"1515:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1507:31:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueType":{"id":354,"nodeType":"UserDefinedTypeName","pathNode":{"id":353,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":351,"src":"1525:12:3"},"referencedDeclaration":351,"src":"1525:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"s_consumers","nameLocation":"1618:11:3","nodeType":"VariableDeclaration","scope":1111,"src":"1589:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[])"},"typeName":{"id":360,"keyType":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"1597:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1589:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[])"},"valueType":{"baseType":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":359,"nodeType":"ArrayTypeName","src":"1607:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":368,"members":[{"constant":false,"id":363,"mutability":"mutable","name":"subId","nameLocation":"1690:5:3","nodeType":"VariableDeclaration","scope":368,"src":"1683:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":362,"name":"uint64","nodeType":"ElementaryTypeName","src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1708:16:3","nodeType":"VariableDeclaration","scope":368,"src":"1701:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":364,"name":"uint32","nodeType":"ElementaryTypeName","src":"1701:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"numWords","nameLocation":"1737:8:3","nodeType":"VariableDeclaration","scope":368,"src":"1730:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":366,"name":"uint32","nodeType":"ElementaryTypeName","src":"1730:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"1669:7:3","nodeType":"StructDefinition","scope":1111,"src":"1662:88:3","visibility":"public"},{"constant":false,"id":373,"mutability":"mutable","name":"s_requests","nameLocation":"1781:10:3","nodeType":"VariableDeclaration","scope":1111,"src":"1753:38:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$368_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":372,"keyType":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1753:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$368_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueType":{"id":371,"nodeType":"UserDefinedTypeName","pathNode":{"id":370,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":368,"src":"1772:7:3"},"referencedDeclaration":368,"src":"1772:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"1877:66:3","statements":[{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":380,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1883:8:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":381,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1894:8:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1883:19:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":383,"nodeType":"ExpressionStatement","src":"1883:19:3"},{"expression":{"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":384,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"1908:14:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":385,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"1925:13:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1908:30:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":387,"nodeType":"ExpressionStatement","src":"1908:30:3"}]},"id":389,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"_baseFee","nameLocation":"1845:8:3","nodeType":"VariableDeclaration","scope":389,"src":"1838:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":374,"name":"uint96","nodeType":"ElementaryTypeName","src":"1838:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"1862:13:3","nodeType":"VariableDeclaration","scope":389,"src":"1855:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":376,"name":"uint96","nodeType":"ElementaryTypeName","src":"1855:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1837:39:3"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"1877:0:3"},"scope":1111,"src":"1826:117:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":431,"nodeType":"Block","src":"2033:204:3","statements":[{"assignments":[402],"declarations":[{"constant":false,"id":402,"mutability":"mutable","name":"consumers","nameLocation":"2056:9:3","nodeType":"VariableDeclaration","scope":431,"src":"2039:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":401,"nodeType":"ArrayTypeName","src":"2039:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":406,"initialValue":{"baseExpression":{"id":403,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"2068:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":405,"indexExpression":{"id":404,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2080:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2068:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2039:48:3"},{"body":{"id":427,"nodeType":"Block","src":"2140:75:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":418,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2152:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":420,"indexExpression":{"id":419,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2162:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2152:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":421,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2168:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2152:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":426,"nodeType":"IfStatement","src":"2148:61:3","trueBody":{"id":425,"nodeType":"Block","src":"2179:30:3","statements":[{"expression":{"hexValue":"74727565","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2196:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":397,"id":424,"nodeType":"Return","src":"2189:11:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2113:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":412,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2117:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2117:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":428,"initializationExpression":{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"i","nameLocation":"2106:1:3","nodeType":"VariableDeclaration","scope":428,"src":"2098:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":410,"initialValue":{"hexValue":"30","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2098:13:3"},"loopExpression":{"expression":{"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2135:3:3","subExpression":{"id":415,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2135:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":417,"nodeType":"ExpressionStatement","src":"2135:3:3"},"nodeType":"ForStatement","src":"2093:122:3"},{"expression":{"hexValue":"66616c7365","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2227:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":397,"id":430,"nodeType":"Return","src":"2220:12:3"}]},"functionSelector":"ed5eb06d","id":432,"implemented":true,"kind":"function","modifiers":[],"name":"consumerIsAdded","nameLocation":"1956:15:3","nodeType":"FunctionDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"_subId","nameLocation":"1979:6:3","nodeType":"VariableDeclaration","scope":432,"src":"1972:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"1972:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"_consumer","nameLocation":"1995:9:3","nodeType":"VariableDeclaration","scope":432,"src":"1987:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1987:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1971:34:3"},"returnParameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"2027:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":395,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:3"},"scope":1111,"src":"1947:290:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":449,"nodeType":"Block","src":"2302:97:3","statements":[{"condition":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2312:35:3","subExpression":{"arguments":[{"id":439,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2329:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":440,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2337:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":438,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"2313:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,address) view returns (bool)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":447,"nodeType":"IfStatement","src":"2308:80:3","trueBody":{"id":446,"nodeType":"Block","src":"2349:39:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"2364:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2364:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"RevertStatement","src":"2357:24:3"}]}},{"id":448,"nodeType":"PlaceholderStatement","src":"2393:1:3"}]},"id":450,"name":"onlyValidConsumer","nameLocation":"2250:17:3","nodeType":"ModifierDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"_subId","nameLocation":"2275:6:3","nodeType":"VariableDeclaration","scope":450,"src":"2268:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":433,"name":"uint64","nodeType":"ElementaryTypeName","src":"2268:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"_consumer","nameLocation":"2291:9:3","nodeType":"VariableDeclaration","scope":450,"src":"2283:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"2283:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:34:3"},"src":"2241:158:3","virtual":false,"visibility":"internal"},{"body":{"id":468,"nodeType":"Block","src":"3029:82:3","statements":[{"expression":{"arguments":[{"id":459,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"3066:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":460,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"3078:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3103:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3089:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":462,"nodeType":"ArrayTypeName","src":"3093:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3089:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":458,"name":"fulfillRandomWordsWithOverride","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3035:30:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[] memory)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3035:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"3035:71:3"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"2403:547:3","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2962:18:3","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"_requestId","nameLocation":"2989:10:3","nodeType":"VariableDeclaration","scope":469,"src":"2981:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"_consumer","nameLocation":"3009:9:3","nodeType":"VariableDeclaration","scope":469,"src":"3001:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"3001:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2980:39:3"},"returnParameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"3029:0:3"},"scope":1111,"src":"2953:158:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":631,"nodeType":"Block","src":"3518:1015:3","statements":[{"assignments":[481],"declarations":[{"constant":false,"id":481,"mutability":"mutable","name":"startGas","nameLocation":"3532:8:3","nodeType":"VariableDeclaration","scope":631,"src":"3524:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3524:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":484,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":482,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3543:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3524:28:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":485,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3562:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$368_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":487,"indexExpression":{"id":486,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3573:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3562:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":363,"src":"3562:28:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3562:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":496,"nodeType":"IfStatement","src":"3558:83:3","trueBody":{"id":495,"nodeType":"Block","src":"3597:44:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3612:21:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":491,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3605:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3605:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"3605:29:3"}]}},{"assignments":[499],"declarations":[{"constant":false,"id":499,"mutability":"mutable","name":"req","nameLocation":"3661:3:3","nodeType":"VariableDeclaration","scope":631,"src":"3646:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":498,"nodeType":"UserDefinedTypeName","pathNode":{"id":497,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":368,"src":"3646:7:3"},"referencedDeclaration":368,"src":"3646:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":503,"initialValue":{"baseExpression":{"id":500,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3667:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$368_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":502,"indexExpression":{"id":501,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3678:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3667:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3646:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":504,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3700:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3700:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3717:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3700:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":546,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3907:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3907:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":548,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3924:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":367,"src":"3924:12:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3907:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":555,"nodeType":"IfStatement","src":"3903:77:3","trueBody":{"id":554,"nodeType":"Block","src":"3938:42:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":551,"name":"InvalidRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3953:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3953:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"RevertStatement","src":"3946:27:3"}]}},"id":556,"nodeType":"IfStatement","src":"3696:284:3","trueBody":{"id":545,"nodeType":"Block","src":"3720:177:3","statements":[{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":508,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3728:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":512,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3751:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":367,"src":"3751:12:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3737:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":510,"nodeType":"ArrayTypeName","src":"3741:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3737:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3728:36:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":516,"nodeType":"ExpressionStatement","src":"3728:36:3"},{"body":{"id":543,"nodeType":"Block","src":"3815:76:3","statements":[{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":528,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3825:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":530,"indexExpression":{"id":529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3832:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3825:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":536,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"3866:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":537,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3878:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":534,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3855:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3855:10:3","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3855:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":533,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3845:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3845:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3837:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3837:7:3","typeDescriptions":{}}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3825:57:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":542,"nodeType":"ExpressionStatement","src":"3825:57:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3792:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":522,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3796:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":367,"src":"3796:12:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3792:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":544,"initializationExpression":{"assignments":[518],"declarations":[{"constant":false,"id":518,"mutability":"mutable","name":"i","nameLocation":"3785:1:3","nodeType":"VariableDeclaration","scope":544,"src":"3777:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"3777:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":520,"initialValue":{"hexValue":"30","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3789:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3777:13:3"},"loopExpression":{"expression":{"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3810:3:3","subExpression":{"id":525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3810:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":527,"nodeType":"ExpressionStatement","src":"3810:3:3"},"nodeType":"ForStatement","src":"3772:119:3"}]}},{"assignments":[559],"declarations":[{"constant":false,"id":559,"mutability":"mutable","name":"v","nameLocation":"4004:1:3","nodeType":"VariableDeclaration","scope":631,"src":"3986:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":558,"nodeType":"UserDefinedTypeName","pathNode":{"id":557,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"3986:17:3"},"referencedDeclaration":57,"src":"3986:17:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":560,"nodeType":"VariableDeclarationStatement","src":"3986:19:3"},{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"callReq","nameLocation":"4024:7:3","nodeType":"VariableDeclaration","scope":631,"src":"4011:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"4011:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[{"expression":{"expression":{"id":565,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4057:1:3","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":56,"src":"4057:23:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4057:32:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":568,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4091:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":569,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4103:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":563,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4034:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4034:22:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4034:76:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4011:99:3"},{"assignments":[573,null],"declarations":[{"constant":false,"id":573,"mutability":"mutable","name":"success","nameLocation":"4122:7:3","nodeType":"VariableDeclaration","scope":631,"src":"4117:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":572,"name":"bool","nodeType":"ElementaryTypeName","src":"4117:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":581,"initialValue":{"arguments":[{"id":579,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4177:7:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":574,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4135:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4135:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":576,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"4155:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":365,"src":"4155:20:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"4135:41:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4135:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4116:69:3"},{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"payment","nameLocation":"4199:7:3","nodeType":"VariableDeclaration","scope":631,"src":"4192:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":582,"name":"uint96","nodeType":"ElementaryTypeName","src":"4192:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":597,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":586,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4216:8:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4229:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":588,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4240:7:3","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4240:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4229:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4228:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":592,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4253:14:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4228:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4227:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4216:52:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4209:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":584,"name":"uint96","nodeType":"ElementaryTypeName","src":"4209:6:3","typeDescriptions":{}}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4209:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4192:77:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":598,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4279:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":601,"indexExpression":{"expression":{"id":599,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"4295:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":363,"src":"4295:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4279:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":350,"src":"4279:34:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":603,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4316:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4279:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"4275:93:3","trueBody":{"id":608,"nodeType":"Block","src":"4325:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":605,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4340:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4340:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"4333:28:3"}]}},{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":610,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4373:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":613,"indexExpression":{"expression":{"id":611,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"4389:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":363,"src":"4389:9:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4373:26:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":350,"src":"4373:34:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":615,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4411:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4373:45:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":617,"nodeType":"ExpressionStatement","src":"4373:45:3"},{"expression":{"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4424:31:3","subExpression":{"components":[{"baseExpression":{"id":618,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"4432:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$368_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":620,"indexExpression":{"id":619,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4443:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4432:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":621,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4431:24:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"4424:31:3"},{"eventCall":{"arguments":[{"id":625,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4487:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":626,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"4499:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":627,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4511:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":628,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"4520:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":624,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4466:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4466:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"EmitStatement","src":"4461:67:3"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"3115:273:3","text":" @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"},"functionSelector":"08e3898e","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWordsWithOverride","nameLocation":"3400:30:3","nodeType":"FunctionDefinition","parameters":{"id":478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"_requestId","nameLocation":"3444:10:3","nodeType":"VariableDeclaration","scope":632,"src":"3436:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"_consumer","nameLocation":"3468:9:3","nodeType":"VariableDeclaration","scope":632,"src":"3460:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"_words","nameLocation":"3500:6:3","nodeType":"VariableDeclaration","scope":632,"src":"3483:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":476,"nodeType":"ArrayTypeName","src":"3483:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3430:80:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[],"src":"3518:0:3"},"scope":1111,"src":"3391:1142:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":676,"nodeType":"Block","src":"4799:278:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":640,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4809:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":642,"indexExpression":{"id":641,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4825:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4809:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"4809:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4850:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4842:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:3","typeDescriptions":{}}},"id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4842:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4809:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":653,"nodeType":"IfStatement","src":"4805:92:3","trueBody":{"id":652,"nodeType":"Block","src":"4854:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":649,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"4869:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4869:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"RevertStatement","src":"4862:28:3"}]}},{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"oldBalance","nameLocation":"4909:10:3","nodeType":"VariableDeclaration","scope":676,"src":"4902:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":654,"name":"uint96","nodeType":"ElementaryTypeName","src":"4902:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":660,"initialValue":{"expression":{"baseExpression":{"id":656,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4922:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":658,"indexExpression":{"id":657,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4938:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4922:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":350,"src":"4922:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4902:51:3"},{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":661,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"4959:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":663,"indexExpression":{"id":662,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4975:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4959:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":350,"src":"4959:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":665,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4994:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4959:42:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":667,"nodeType":"ExpressionStatement","src":"4959:42:3"},{"eventCall":{"arguments":[{"id":669,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"5031:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":670,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5039:10:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"5051:10:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":672,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"5064:7:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5051:20:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":668,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5012:18:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"EmitStatement","src":"5007:65:3"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"4537:195:3","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":677,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"4744:16:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"_subId","nameLocation":"4768:6:3","nodeType":"VariableDeclaration","scope":677,"src":"4761:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":634,"name":"uint64","nodeType":"ElementaryTypeName","src":"4761:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"_amount","nameLocation":"4783:7:3","nodeType":"VariableDeclaration","scope":677,"src":"4776:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":636,"name":"uint96","nodeType":"ElementaryTypeName","src":"4776:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4760:31:3"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"4799:0:3"},"scope":1111,"src":"4735:342:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[181],"body":{"id":746,"nodeType":"Block","src":"5321:516:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":698,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5331:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":700,"indexExpression":{"id":699,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5347:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5331:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"5331:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5372:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5364:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:3","typeDescriptions":{}}},"id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5364:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5331:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"nodeType":"IfStatement","src":"5327:92:3","trueBody":{"id":710,"nodeType":"Block","src":"5376:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"5391:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5391:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"RevertStatement","src":"5384:28:3"}]}},{"assignments":[713],"declarations":[{"constant":false,"id":713,"mutability":"mutable","name":"requestId","nameLocation":"5433:9:3","nodeType":"VariableDeclaration","scope":746,"src":"5425:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"5425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":716,"initialValue":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5445:17:3","subExpression":{"id":714,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"5445:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5425:37:3"},{"assignments":[718],"declarations":[{"constant":false,"id":718,"mutability":"mutable","name":"preSeed","nameLocation":"5476:7:3","nodeType":"VariableDeclaration","scope":746,"src":"5468:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":721,"initialValue":{"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5486:15:3","subExpression":{"id":719,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"5486:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5468:33:3"},{"expression":{"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":722,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5508:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$368_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":724,"indexExpression":{"id":723,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5519:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5508:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":726,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5548:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":727,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5574:17:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":728,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5603:9:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":725,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5532:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$368_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"5532:82:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"5508:106:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$368_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":731,"nodeType":"ExpressionStatement","src":"5508:106:3"},{"eventCall":{"arguments":[{"id":733,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5654:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":734,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5670:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"5687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":736,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5702:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":737,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5716:28:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":738,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5752:17:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":739,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5777:9:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5794:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5794:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":732,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5626:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5626:184:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"EmitStatement","src":"5621:189:3"},{"expression":{"id":744,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5823:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":697,"id":745,"nodeType":"Return","src":"5816:16:3"}]},"functionSelector":"5d3b1d30","id":747,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":691,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5283:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5291:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5291:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":694,"kind":"modifierInvocation","modifierName":{"id":690,"name":"onlyValidConsumer","nodeType":"IdentifierPath","referencedDeclaration":450,"src":"5265:17:3"},"nodeType":"ModifierInvocation","src":"5265:37:3"}],"name":"requestRandomWords","nameLocation":"5090:18:3","nodeType":"FunctionDefinition","overrides":{"id":689,"nodeType":"OverrideSpecifier","overrides":[],"src":"5256:8:3"},"parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"_keyHash","nameLocation":"5122:8:3","nodeType":"VariableDeclaration","scope":747,"src":"5114:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5114:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"_subId","nameLocation":"5143:6:3","nodeType":"VariableDeclaration","scope":747,"src":"5136:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":680,"name":"uint64","nodeType":"ElementaryTypeName","src":"5136:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"5162:28:3","nodeType":"VariableDeclaration","scope":747,"src":"5155:35:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":682,"name":"uint16","nodeType":"ElementaryTypeName","src":"5155:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":685,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"5203:17:3","nodeType":"VariableDeclaration","scope":747,"src":"5196:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":684,"name":"uint32","nodeType":"ElementaryTypeName","src":"5196:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"_numWords","nameLocation":"5233:9:3","nodeType":"VariableDeclaration","scope":747,"src":"5226:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":686,"name":"uint32","nodeType":"ElementaryTypeName","src":"5226:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5108:138:3"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"5312:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"5312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5311:9:3"},"scope":1111,"src":"5081:756:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[187],"body":{"id":774,"nodeType":"Block","src":"5913:197:3","statements":[{"expression":{"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5919:16:3","subExpression":{"id":753,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5919:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":755,"nodeType":"ExpressionStatement","src":"5919:16:3"},{"expression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5941:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":758,"indexExpression":{"id":757,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5957:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5941:31:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":760,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5996:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5996:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":759,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"5975:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$351_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","balance"],"nodeType":"FunctionCall","src":"5975:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"5941:79:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":765,"nodeType":"ExpressionStatement","src":"5941:79:3"},{"eventCall":{"arguments":[{"id":767,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6051:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":768,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6067:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6067:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":766,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6031:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6031:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"EmitStatement","src":"6026:52:3"},{"expression":{"id":772,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"6091:14:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":752,"id":773,"nodeType":"Return","src":"6084:21:3"}]},"functionSelector":"a21a23e4","id":775,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"5850:18:3","nodeType":"FunctionDefinition","overrides":{"id":749,"nodeType":"OverrideSpecifier","overrides":[],"src":"5880:8:3"},"parameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"5868:2:3"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"_subId","nameLocation":"5905:6:3","nodeType":"VariableDeclaration","scope":775,"src":"5898:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":750,"name":"uint64","nodeType":"ElementaryTypeName","src":"5898:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5897:15:3"},"scope":1111,"src":"5841:269:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[202],"body":{"id":818,"nodeType":"Block","src":"6310:203:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":790,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6320:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":792,"indexExpression":{"id":791,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"6336:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6320:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6361:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6353:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"6353:7:3","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6353:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6320:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":803,"nodeType":"IfStatement","src":"6316:92:3","trueBody":{"id":802,"nodeType":"Block","src":"6365:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":799,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"6380:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6380:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"RevertStatement","src":"6373:28:3"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":804,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6421:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":806,"indexExpression":{"id":805,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"6437:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6421:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":350,"src":"6421:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6454:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":809,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6457:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":811,"indexExpression":{"id":810,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"6473:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6457:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6457:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":813,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"6488:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":815,"indexExpression":{"id":814,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"6500:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6488:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6420:88:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,int_const 0,address,address[] storage ref)"}},"functionReturnParameters":789,"id":817,"nodeType":"Return","src":"6413:95:3"}]},"functionSelector":"a47c7696","id":819,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"6123:15:3","nodeType":"FunctionDefinition","overrides":{"id":779,"nodeType":"OverrideSpecifier","overrides":[],"src":"6180:8:3"},"parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"_subId","nameLocation":"6146:6:3","nodeType":"VariableDeclaration","scope":819,"src":"6139:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":776,"name":"uint64","nodeType":"ElementaryTypeName","src":"6139:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6138:15:3"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"balance","nameLocation":"6216:7:3","nodeType":"VariableDeclaration","scope":819,"src":"6209:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":780,"name":"uint96","nodeType":"ElementaryTypeName","src":"6209:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"reqCount","nameLocation":"6238:8:3","nodeType":"VariableDeclaration","scope":819,"src":"6231:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":782,"name":"uint64","nodeType":"ElementaryTypeName","src":"6231:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"owner","nameLocation":"6262:5:3","nodeType":"VariableDeclaration","scope":819,"src":"6254:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"6254:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"consumers","nameLocation":"6292:9:3","nodeType":"VariableDeclaration","scope":819,"src":"6275:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":787,"nodeType":"ArrayTypeName","src":"6275:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6201:106:3"},"scope":1111,"src":"6114:399:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[240],"body":{"id":845,"nodeType":"Block","src":"6612:120:3","statements":[{"eventCall":{"arguments":[{"id":831,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6644:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":832,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6652:3:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":833,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6657:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":835,"indexExpression":{"id":834,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6673:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6657:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":350,"src":"6657:31:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":830,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6623:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6623:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"EmitStatement","src":"6618:71:3"},{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6695:32:3","subExpression":{"components":[{"baseExpression":{"id":839,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6703:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":841,"indexExpression":{"id":840,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6719:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6703:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":842,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"6702:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"6695:32:3"}]},"functionSelector":"d7ae1d30","id":846,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":827,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"6604:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":828,"kind":"modifierInvocation","modifierName":{"id":826,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":880,"src":"6591:12:3"},"nodeType":"ModifierInvocation","src":"6591:20:3"}],"name":"cancelSubscription","nameLocation":"6526:18:3","nodeType":"FunctionDefinition","overrides":{"id":825,"nodeType":"OverrideSpecifier","overrides":[],"src":"6582:8:3"},"parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"_subId","nameLocation":"6552:6:3","nodeType":"VariableDeclaration","scope":846,"src":"6545:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":820,"name":"uint64","nodeType":"ElementaryTypeName","src":"6545:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"_to","nameLocation":"6568:3:3","nodeType":"VariableDeclaration","scope":846,"src":"6560:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"6560:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6544:28:3"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"6612:0:3"},"scope":1111,"src":"6517:215:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":879,"nodeType":"Block","src":"6773:209:3","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"owner","nameLocation":"6787:5:3","nodeType":"VariableDeclaration","scope":879,"src":"6779:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"6779:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":856,"initialValue":{"expression":{"baseExpression":{"id":852,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6795:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$351_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":854,"indexExpression":{"id":853,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"6811:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$351_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":348,"src":"6795:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6779:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6834:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6851:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6843:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"6843:7:3","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6843:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6834:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":867,"nodeType":"IfStatement","src":"6830:68:3","trueBody":{"id":866,"nodeType":"Block","src":"6855:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"6870:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6870:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"RevertStatement","src":"6863:28:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6907:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6907:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6921:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6907:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"IfStatement","src":"6903:68:3","trueBody":{"id":876,"nodeType":"Block","src":"6928:43:3","statements":[{"errorCall":{"arguments":[{"id":873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"6958:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":872,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"6943:14:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6943:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"RevertStatement","src":"6936:28:3"}]}},{"id":878,"nodeType":"PlaceholderStatement","src":"6976:1:3"}]},"id":880,"name":"onlySubOwner","nameLocation":"6745:12:3","nodeType":"ModifierDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"_subId","nameLocation":"6765:6:3","nodeType":"VariableDeclaration","scope":880,"src":"6758:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":847,"name":"uint64","nodeType":"ElementaryTypeName","src":"6758:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6757:15:3"},"src":"6736:246:3","virtual":false,"visibility":"internal"},{"baseFunctions":[165],"body":{"id":900,"nodeType":"Block","src":"7122:48:3","statements":[{"expression":{"components":[{"hexValue":"33","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7136:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7139:7:3","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7162:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7148:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":894,"nodeType":"ArrayTypeName","src":"7152:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7148:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7135:30:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":890,"id":899,"nodeType":"Return","src":"7128:37:3"}]},"functionSelector":"00012291","id":901,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"6995:16:3","nodeType":"FunctionDefinition","overrides":{"id":882,"nodeType":"OverrideSpecifier","overrides":[],"src":"7040:8:3"},"parameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"7011:2:3"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"7069:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":883,"name":"uint16","nodeType":"ElementaryTypeName","src":"7069:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"7083:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":885,"name":"uint32","nodeType":"ElementaryTypeName","src":"7083:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"7097:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7097:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":888,"nodeType":"ArrayTypeName","src":"7097:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7061:58:3"},"scope":1111,"src":"6986:184:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[224],"body":{"id":942,"nodeType":"Block","src":"7268:251:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":912,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7278:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":914,"indexExpression":{"id":913,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7290:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7278:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7278:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":916,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"7308:13:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"7278:43:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":922,"nodeType":"IfStatement","src":"7274:89:3","trueBody":{"id":921,"nodeType":"Block","src":"7323:40:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":918,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"7338:16:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7338:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"RevertStatement","src":"7331:25:3"}]}},{"condition":{"arguments":[{"id":924,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7389:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":925,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"7397:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"7373:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,address) view returns (bool)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7373:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":929,"nodeType":"IfStatement","src":"7369:61:3","trueBody":{"id":928,"nodeType":"Block","src":"7409:21:3","statements":[{"functionReturnParameters":911,"id":927,"nodeType":"Return","src":"7417:7:3"}]}},{"expression":{"arguments":[{"id":934,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"7461:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":930,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7436:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":932,"indexExpression":{"id":931,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7448:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7436:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"7436:24:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7436:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"7436:35:3"},{"eventCall":{"arguments":[{"id":938,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7496:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":939,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"7504:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":937,"name":"ConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"7482:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7482:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"EmitStatement","src":"7477:37:3"}]},"functionSelector":"7341c10c","id":943,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":909,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"7260:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":910,"kind":"modifierInvocation","modifierName":{"id":908,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":880,"src":"7247:12:3"},"nodeType":"ModifierInvocation","src":"7247:20:3"}],"name":"addConsumer","nameLocation":"7183:11:3","nodeType":"FunctionDefinition","overrides":{"id":907,"nodeType":"OverrideSpecifier","overrides":[],"src":"7238:8:3"},"parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"_subId","nameLocation":"7202:6:3","nodeType":"VariableDeclaration","scope":943,"src":"7195:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":902,"name":"uint64","nodeType":"ElementaryTypeName","src":"7195:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"_consumer","nameLocation":"7218:9:3","nodeType":"VariableDeclaration","scope":943,"src":"7210:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"7210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7194:34:3"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"7268:0:3"},"scope":1111,"src":"7174:345:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[232],"body":{"id":1013,"nodeType":"Block","src":"7675:337:3","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"consumers","nameLocation":"7699:9:3","nodeType":"VariableDeclaration","scope":1013,"src":"7681:27:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"7681:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":961,"nodeType":"ArrayTypeName","src":"7681:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":966,"initialValue":{"baseExpression":{"id":963,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"7711:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":965,"indexExpression":{"id":964,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7723:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7711:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7681:49:3"},{"body":{"id":1006,"nodeType":"Block","src":"7783:179:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":978,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7795:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":980,"indexExpression":{"id":979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"7805:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7795:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":981,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7811:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7795:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"7791:165:3","trueBody":{"id":1004,"nodeType":"Block","src":"7822:134:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"last","nameLocation":"7840:4:3","nodeType":"VariableDeclaration","scope":1004,"src":"7832:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"7832:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":991,"initialValue":{"baseExpression":{"id":985,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7847:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":990,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":986,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7857:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7857:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7857:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7847:31:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7832:46:3"},{"expression":{"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":992,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7888:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":994,"indexExpression":{"id":993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"7898:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7888:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":995,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7903:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7888:19:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":997,"nodeType":"ExpressionStatement","src":"7888:19:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":998,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7917:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7917:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7917:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"7917:15:3"},{"id":1003,"nodeType":"Break","src":"7942:5:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":971,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"7756:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":972,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7760:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7760:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7756:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1007,"initializationExpression":{"assignments":[968],"declarations":[{"constant":false,"id":968,"mutability":"mutable","name":"i","nameLocation":"7749:1:3","nodeType":"VariableDeclaration","scope":1007,"src":"7741:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"7741:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":970,"initialValue":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7753:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7741:13:3"},"loopExpression":{"expression":{"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7778:3:3","subExpression":{"id":975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"7778:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":977,"nodeType":"ExpressionStatement","src":"7778:3:3"},"nodeType":"ForStatement","src":"7736:226:3"},{"eventCall":{"arguments":[{"id":1009,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7989:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1010,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7997:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1008,"name":"ConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"7973:15:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7973:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"EmitStatement","src":"7968:39:3"}]},"functionSelector":"9f87fad7","id":1014,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":951,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7624:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":952,"kind":"modifierInvocation","modifierName":{"id":950,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":880,"src":"7611:12:3"},"nodeType":"ModifierInvocation","src":"7611:20:3"},{"arguments":[{"id":954,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"7654:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":955,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"7662:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":956,"kind":"modifierInvocation","modifierName":{"id":953,"name":"onlyValidConsumer","nodeType":"IdentifierPath","referencedDeclaration":450,"src":"7636:17:3"},"nodeType":"ModifierInvocation","src":"7636:36:3"}],"name":"removeConsumer","nameLocation":"7532:14:3","nodeType":"FunctionDefinition","overrides":{"id":949,"nodeType":"OverrideSpecifier","overrides":[],"src":"7598:8:3"},"parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"_subId","nameLocation":"7554:6:3","nodeType":"VariableDeclaration","scope":1014,"src":"7547:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":944,"name":"uint64","nodeType":"ElementaryTypeName","src":"7547:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"_consumer","nameLocation":"7570:9:3","nodeType":"VariableDeclaration","scope":1014,"src":"7562:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"7562:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7546:34:3"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"7675:0:3"},"scope":1111,"src":"7523:489:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1031,"nodeType":"Block","src":"8220:46:3","statements":[{"expression":{"components":[{"hexValue":"34","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8234:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},{"hexValue":"325f3530305f303030","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8237:9:3","typeDescriptions":{"typeIdentifier":"t_rational_2500000_by_1","typeString":"int_const 2500000"},"value":"2_500_000"},{"hexValue":"325f373030","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8248:5:3","typeDescriptions":{"typeIdentifier":"t_rational_2700_by_1","typeString":"int_const 2700"},"value":"2_700"},{"hexValue":"3333323835","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8255:5:3","typeDescriptions":{"typeIdentifier":"t_rational_33285_by_1","typeString":"int_const 33285"},"value":"33285"}],"id":1029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8233:28:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_4_by_1_$_t_rational_2500000_by_1_$_t_rational_2700_by_1_$_t_rational_33285_by_1_$","typeString":"tuple(int_const 4,int_const 2500000,int_const 2700,int_const 33285)"}},"functionReturnParameters":1024,"id":1030,"nodeType":"Return","src":"8226:35:3"}]},"functionSelector":"c3f909d4","id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"8025:9:3","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"8034:2:3"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"8086:27:3","nodeType":"VariableDeclaration","scope":1032,"src":"8079:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1016,"name":"uint16","nodeType":"ElementaryTypeName","src":"8079:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"maxGasLimit","nameLocation":"8128:11:3","nodeType":"VariableDeclaration","scope":1032,"src":"8121:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1018,"name":"uint32","nodeType":"ElementaryTypeName","src":"8121:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"8154:16:3","nodeType":"VariableDeclaration","scope":1032,"src":"8147:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1020,"name":"uint32","nodeType":"ElementaryTypeName","src":"8147:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"8185:26:3","nodeType":"VariableDeclaration","scope":1032,"src":"8178:33:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1022,"name":"uint32","nodeType":"ElementaryTypeName","src":"8178:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8071:146:3"},"scope":1111,"src":"8016:250:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1064,"nodeType":"Block","src":"8670:190:3","statements":[{"expression":{"components":[{"hexValue":"313030303030","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8691:6:3","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8717:6:3","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8743:6:3","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:6:3","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:6:3","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8821:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8830:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8839:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8683:172:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 0,int_const 0,int_const 0,int_const 0)"}},"functionReturnParameters":1052,"id":1063,"nodeType":"Return","src":"8676:179:3"}]},"functionSelector":"5fbbc0d2","id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeConfig","nameLocation":"8279:12:3","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[],"src":"8291:2:3"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"8343:30:3","nodeType":"VariableDeclaration","scope":1065,"src":"8336:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1034,"name":"uint32","nodeType":"ElementaryTypeName","src":"8336:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"8388:30:3","nodeType":"VariableDeclaration","scope":1065,"src":"8381:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1036,"name":"uint32","nodeType":"ElementaryTypeName","src":"8381:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"8433:30:3","nodeType":"VariableDeclaration","scope":1065,"src":"8426:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1038,"name":"uint32","nodeType":"ElementaryTypeName","src":"8426:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"8478:30:3","nodeType":"VariableDeclaration","scope":1065,"src":"8471:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1040,"name":"uint32","nodeType":"ElementaryTypeName","src":"8471:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"8523:30:3","nodeType":"VariableDeclaration","scope":1065,"src":"8516:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1042,"name":"uint32","nodeType":"ElementaryTypeName","src":"8516:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"reqsForTier2","nameLocation":"8568:12:3","nodeType":"VariableDeclaration","scope":1065,"src":"8561:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1044,"name":"uint24","nodeType":"ElementaryTypeName","src":"8561:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"reqsForTier3","nameLocation":"8595:12:3","nodeType":"VariableDeclaration","scope":1065,"src":"8588:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1046,"name":"uint24","nodeType":"ElementaryTypeName","src":"8588:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"reqsForTier4","nameLocation":"8622:12:3","nodeType":"VariableDeclaration","scope":1065,"src":"8615:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1048,"name":"uint24","nodeType":"ElementaryTypeName","src":"8615:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"reqsForTier5","nameLocation":"8649:12:3","nodeType":"VariableDeclaration","scope":1065,"src":"8642:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1050,"name":"uint24","nodeType":"ElementaryTypeName","src":"8642:6:3","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"8328:339:3"},"scope":1111,"src":"8270:590:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1072,"nodeType":"Block","src":"8932:49:3","statements":[{"expression":{"hexValue":"34303030303030303030303030303030","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8945:16:3","typeDescriptions":{"typeIdentifier":"t_rational_4000000000000000_by_1","typeString":"int_const 4000000000000000"},"value":"4000000000000000"},"functionReturnParameters":1069,"id":1071,"nodeType":"Return","src":"8938:23:3"}]},"functionSelector":"356dac71","id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackWeiPerUnitLink","nameLocation":"8873:25:3","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[],"src":"8898:2:3"},"returnParameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"8924:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1067,"name":"int256","nodeType":"ElementaryTypeName","src":"8924:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8923:8:3"},"scope":1111,"src":"8864:117:3","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[210],"body":{"id":1085,"nodeType":"Block","src":"9084:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9097:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1081,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9090:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9090:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"9090:25:3"}]},"functionSelector":"04c357cb","id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"8994:32:3","nodeType":"FunctionDefinition","overrides":{"id":1079,"nodeType":"OverrideSpecifier","overrides":[],"src":"9075:8:3"},"parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"_subId","nameLocation":"9034:6:3","nodeType":"VariableDeclaration","scope":1086,"src":"9027:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1074,"name":"uint64","nodeType":"ElementaryTypeName","src":"9027:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"_newOwner","nameLocation":"9050:9:3","nodeType":"VariableDeclaration","scope":1086,"src":"9042:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"9042:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9026:34:3"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"9084:0:3"},"scope":1111,"src":"8985:135:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[216],"body":{"id":1096,"nodeType":"Block","src":"9203:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9216:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1092,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9209:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"9209:25:3"}]},"functionSelector":"82359740","id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"9133:31:3","nodeType":"FunctionDefinition","overrides":{"id":1090,"nodeType":"OverrideSpecifier","overrides":[],"src":"9194:8:3"},"parameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"_subId","nameLocation":"9172:6:3","nodeType":"VariableDeclaration","scope":1097,"src":"9165:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1087,"name":"uint64","nodeType":"ElementaryTypeName","src":"9165:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9164:15:3"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"9203:0:3"},"scope":1111,"src":"9124:115:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[247],"body":{"id":1109,"nodeType":"Block","src":"9323:36:3","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9336:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9329:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9329:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1108,"nodeType":"ExpressionStatement","src":"9329:25:3"}]},"functionSelector":"e82ad7d4","id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"9252:20:3","nodeType":"FunctionDefinition","overrides":{"id":1101,"nodeType":"OverrideSpecifier","overrides":[],"src":"9299:8:3"},"parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"subId","nameLocation":"9280:5:3","nodeType":"VariableDeclaration","scope":1110,"src":"9273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1098,"name":"uint64","nodeType":"ElementaryTypeName","src":"9273:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9272:14:3"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"9317:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1102,"name":"bool","nodeType":"ElementaryTypeName","src":"9317:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9316:6:3"},"scope":1111,"src":"9243:116:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1112,"src":"254:9107:3","usedErrors":[264,266,270,272,274,276]}],"src":"92:9270:3"},"id":3},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2654],"Context":[2676],"ERC165":[2875],"ERC721":[2038],"IERC165":[2887],"IERC721":[2154],"IERC721Metadata":[2324],"IERC721Receiver":[2172],"Math":[3752],"Strings":[2851]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1113,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2155,"src":"132:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2173,"src":"156:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2325,"src":"188:42:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2655,"src":"231:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2677,"src":"265:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2852,"src":"299:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2039,"sourceUnit":2876,"src":"333:46:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1122,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2676,"src":"647:7:4"},"id":1123,"nodeType":"InheritanceSpecifier","src":"647:7:4"},{"baseName":{"id":1124,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2875,"src":"656:6:4"},"id":1125,"nodeType":"InheritanceSpecifier","src":"656:6:4"},{"baseName":{"id":1126,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2154,"src":"664:7:4"},"id":1127,"nodeType":"InheritanceSpecifier","src":"664:7:4"},{"baseName":{"id":1128,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2324,"src":"673:15:4"},"id":1129,"nodeType":"InheritanceSpecifier","src":"673:15:4"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"381:246:4","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038,2324,2154,2875,2887,2676],"name":"ERC721","nameLocation":"637:6:4","nodeType":"ContractDefinition","nodes":[{"id":1132,"libraryName":{"id":1130,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2654,"src":"701:7:4"},"nodeType":"UsingForDirective","src":"695:26:4","typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1135,"libraryName":{"id":1133,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2851,"src":"732:7:4"},"nodeType":"UsingForDirective","src":"726:26:4","typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1137,"mutability":"mutable","name":"_name","nameLocation":"791:5:4","nodeType":"VariableDeclaration","scope":2038,"src":"776:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1136,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1139,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:4","nodeType":"VariableDeclaration","scope":2038,"src":"823:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1138,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1143,"mutability":"mutable","name":"_owners","nameLocation":"934:7:4","nodeType":"VariableDeclaration","scope":2038,"src":"898:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1142,"keyType":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1147,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:4","nodeType":"VariableDeclaration","scope":2038,"src":"992:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1146,"keyType":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1151,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:4","nodeType":"VariableDeclaration","scope":2038,"src":"1093:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1150,"keyType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1157,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:4","nodeType":"VariableDeclaration","scope":2038,"src":"1199:71:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1156,"keyType":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1155,"keyType":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1154,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1173,"nodeType":"Block","src":"1446:57:4","statements":[{"expression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1165,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"1456:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1166,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1168,"nodeType":"ExpressionStatement","src":"1456:13:4"},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1169,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1172,"nodeType":"ExpressionStatement","src":"1479:17:4"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"1277:108:4","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1174,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"name_","nameLocation":"1416:5:4","nodeType":"VariableDeclaration","scope":1174,"src":"1402:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1159,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:4","nodeType":"VariableDeclaration","scope":1174,"src":"1423:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1161,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:4"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"1446:0:4"},"scope":2038,"src":"1390:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2874,2886],"body":{"id":1204,"nodeType":"Block","src":"1678:192:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1185,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"1707:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1187,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"1727:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2154_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2154_$","typeString":"type(contract IERC721)"}],"id":1186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2154","typeString":"type(contract IERC721)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1191,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"1763:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1193,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"1783:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2324_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2324_$","typeString":"type(contract IERC721Metadata)"}],"id":1192,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2324","typeString":"type(contract IERC721Metadata)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1200,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"1851:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1198,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2038_$","typeString":"type(contract super ERC721)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2874,"src":"1827:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1184,"id":1203,"nodeType":"Return","src":"1688:175:4"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"1509:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1205,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:4","nodeType":"FunctionDefinition","overrides":{"id":1181,"nodeType":"OverrideSpecifier","overrides":[{"id":1179,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2875,"src":"1646:6:4"},{"id":1180,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2887,"src":"1654:7:4"}],"src":"1637:25:4"},"parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:4","nodeType":"VariableDeclaration","scope":1205,"src":"1597:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1176,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:4"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1205,"src":"1672:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:4"},"scope":2038,"src":"1570:300:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2079],"body":{"id":1228,"nodeType":"Block","src":"2010:123:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2028:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{}}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1223,"nodeType":"ExpressionStatement","src":"2020:73:4"},{"expression":{"baseExpression":{"id":1224,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"2110:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1226,"indexExpression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2120:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1213,"id":1227,"nodeType":"Return","src":"2103:23:4"}]},"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"1876:48:4","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1229,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:4","nodeType":"FunctionDefinition","overrides":{"id":1210,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:4"},"parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"owner","nameLocation":"1956:5:4","nodeType":"VariableDeclaration","scope":1229,"src":"1948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1207,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:4"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"2001:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:4"},"scope":2038,"src":"1929:204:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2087],"body":{"id":1256,"nodeType":"Block","src":"2271:138:4","statements":[{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"owner","nameLocation":"2289:5:4","nodeType":"VariableDeclaration","scope":1256,"src":"2281:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1243,"initialValue":{"arguments":[{"id":1241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1240,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"2297:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"2332:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"2324:56:4"},{"expression":{"id":1254,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"2397:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1237,"id":1255,"nodeType":"Return","src":"2390:12:4"}]},"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"2139:46:4","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:4","nodeType":"FunctionDefinition","overrides":{"id":1234,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:4"},"parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:4","nodeType":"VariableDeclaration","scope":1257,"src":"2207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:4"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1257,"src":"2262:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:4"},"scope":2038,"src":"2190:219:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2309],"body":{"id":1266,"nodeType":"Block","src":"2540:29:4","statements":[{"expression":{"id":1264,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"2557:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1263,"id":1265,"nodeType":"Return","src":"2550:12:4"}]},"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"2415:51:4","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:4","nodeType":"FunctionDefinition","overrides":{"id":1260,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:4"},"parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"2484:2:4"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"2525:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1261,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:4"},"scope":2038,"src":"2471:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2315],"body":{"id":1276,"nodeType":"Block","src":"2704:31:4","statements":[{"expression":{"id":1274,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1273,"id":1275,"nodeType":"Return","src":"2714:14:4"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"2575:53:4","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1277,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:4","nodeType":"FunctionDefinition","overrides":{"id":1270,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:4"},"parameters":{"id":1269,"nodeType":"ParameterList","parameters":[],"src":"2648:2:4"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"2689:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1271,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:4"},"scope":2038,"src":"2633:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2323],"body":{"id":1315,"nodeType":"Block","src":"2889:188:4","statements":[{"expression":{"arguments":[{"id":1287,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1286,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2899:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"ExpressionStatement","src":"2899:23:4"},{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:4","nodeType":"VariableDeclaration","scope":1315,"src":"2933:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1290,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1292,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"2957:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:4"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1297,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"2990:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:4","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:4","trueExpression":{"arguments":[{"arguments":[{"id":1306,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"3036:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"3045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2734,"src":"3045:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1304,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1302,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:4","typeDescriptions":{}}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1285,"id":1314,"nodeType":"Return","src":"2977:93:4"}]},"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"2741:55:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1316,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:4","nodeType":"FunctionDefinition","overrides":{"id":1282,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:4"},"parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":1316,"src":"2819:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:4"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1316,"src":"2874:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1283,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:4"},"scope":2038,"src":"2801:276:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1324,"nodeType":"Block","src":"3385:26:4","statements":[{"expression":{"hexValue":"","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1321,"id":1323,"nodeType":"Return","src":"3395:9:4"}]},"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"3083:231:4","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1325,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:4","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[],"src":"3336:2:4"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1325,"src":"3370:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1319,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:4"},"scope":2038,"src":"3319:92:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2127],"body":{"id":1367,"nodeType":"Block","src":"3538:336:4","statements":[{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"owner","nameLocation":"3556:5:4","nodeType":"VariableDeclaration","scope":1367,"src":"3548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1334,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1340,"initialValue":{"arguments":[{"id":1338,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"3579:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1336,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"3564:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"3564:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"3605:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1343,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"3611:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"3597:57:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3686:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1351,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"3702:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"3728:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1355,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3735:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1353,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"3711:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"3665:170:4"},{"expression":{"arguments":[{"id":1363,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"3855:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1364,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"3859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3846:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"ExpressionStatement","src":"3846:21:4"}]},"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"3417:46:4","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1368,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:4","nodeType":"FunctionDefinition","overrides":{"id":1332,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:4"},"parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"to","nameLocation":"3493:2:4","nodeType":"VariableDeclaration","scope":1368,"src":"3485:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:4","nodeType":"VariableDeclaration","scope":1368,"src":"3497:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:4"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[],"src":"3538:0:4"},"scope":2038,"src":"3468:406:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2143],"body":{"id":1385,"nodeType":"Block","src":"4020:82:4","statements":[{"expression":{"arguments":[{"id":1378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"4045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1377,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4030:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1380,"nodeType":"ExpressionStatement","src":"4030:23:4"},{"expression":{"baseExpression":{"id":1381,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4071:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1383,"indexExpression":{"id":1382,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"4087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1376,"id":1384,"nodeType":"Return","src":"4064:31:4"}]},"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"3880:50:4","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1386,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:4","nodeType":"FunctionDefinition","overrides":{"id":1373,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:4"},"parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:4","nodeType":"VariableDeclaration","scope":1386,"src":"3956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:4"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1386,"src":"4011:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:4"},"scope":2038,"src":"3935:167:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2135],"body":{"id":1402,"nodeType":"Block","src":"4253:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1396,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4282:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4296:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1399,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"4306:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1395,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"4263:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1401,"nodeType":"ExpressionStatement","src":"4263:52:4"}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"4108:56:4","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:4","nodeType":"FunctionDefinition","overrides":{"id":1393,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:4"},"parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"operator","nameLocation":"4204:8:4","nodeType":"VariableDeclaration","scope":1403,"src":"4196:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"approved","nameLocation":"4219:8:4","nodeType":"VariableDeclaration","scope":1403,"src":"4214:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1390,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:4"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"4253:0:4"},"scope":2038,"src":"4169:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2153],"body":{"id":1420,"nodeType":"Block","src":"4491:59:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1414,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4508:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1416,"indexExpression":{"id":1415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"4527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1418,"indexExpression":{"id":1417,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"4534:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1413,"id":1419,"nodeType":"Return","src":"4501:42:4"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"4328:55:4","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:4","nodeType":"FunctionDefinition","overrides":{"id":1410,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:4"},"parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"owner","nameLocation":"4422:5:4","nodeType":"VariableDeclaration","scope":1421,"src":"4414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"operator","nameLocation":"4437:8:4","nodeType":"VariableDeclaration","scope":1421,"src":"4429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:4"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"4485:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1411,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:4"},"scope":2038,"src":"4388:162:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2119],"body":{"id":1447,"nodeType":"Block","src":"4731:207:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1434,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4820:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4834:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1433,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"4801:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"ExpressionStatement","src":"4793:99:4"},{"expression":{"arguments":[{"id":1442,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4913:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"4919:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"4923:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1441,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4903:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1446,"nodeType":"ExpressionStatement","src":"4903:28:4"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"4556:51:4","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1448,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:4","nodeType":"FunctionDefinition","overrides":{"id":1430,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:4"},"parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"from","nameLocation":"4651:4:4","nodeType":"VariableDeclaration","scope":1448,"src":"4643:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"to","nameLocation":"4673:2:4","nodeType":"VariableDeclaration","scope":1448,"src":"4665:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:4","nodeType":"VariableDeclaration","scope":1448,"src":"4685:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:4"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"4731:0:4"},"scope":2038,"src":"4612:326:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2109],"body":{"id":1466,"nodeType":"Block","src":"5127:56:4","statements":[{"expression":{"arguments":[{"id":1460,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5154:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1461,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"5160:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1462,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"5164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1459,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1467,1497],"referencedDeclaration":1497,"src":"5137:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"5137:39:4"}]},"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"4944:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:4","nodeType":"FunctionDefinition","overrides":{"id":1457,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:4"},"parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"from","nameLocation":"5047:4:4","nodeType":"VariableDeclaration","scope":1467,"src":"5039:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"to","nameLocation":"5069:2:4","nodeType":"VariableDeclaration","scope":1467,"src":"5061:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:4","nodeType":"VariableDeclaration","scope":1467,"src":"5081:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:4"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"5127:0:4"},"scope":2038,"src":"5004:179:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2099],"body":{"id":1496,"nodeType":"Block","src":"5399:164:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1482,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"5436:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"5450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"5417:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"5409:99:4"},{"expression":{"arguments":[{"id":1490,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"5532:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"5538:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1492,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"5542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1493,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5551:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1489,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"5518:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1495,"nodeType":"ExpressionStatement","src":"5518:38:4"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"5189:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:4","nodeType":"FunctionDefinition","overrides":{"id":1478,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:4"},"parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"from","nameLocation":"5292:4:4","nodeType":"VariableDeclaration","scope":1497,"src":"5284:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"to","nameLocation":"5314:2:4","nodeType":"VariableDeclaration","scope":1497,"src":"5306:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:4","nodeType":"VariableDeclaration","scope":1497,"src":"5326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"5364:4:4","nodeType":"VariableDeclaration","scope":1497,"src":"5351:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:4"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"5399:0:4"},"scope":2038,"src":"5249:314:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1525,"nodeType":"Block","src":"6564:165:4","statements":[{"expression":{"arguments":[{"id":1510,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"6584:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"6590:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1512,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"6594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"6574:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"6574:28:4"},{"expression":{"arguments":[{"arguments":[{"id":1517,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"6643:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"6649:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"6653:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1520,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"6662:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1516,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"6620:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1515,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"ExpressionStatement","src":"6612:110:4"}]},"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"5569:850:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:4","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"from","nameLocation":"6464:4:4","nodeType":"VariableDeclaration","scope":1526,"src":"6456:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"to","nameLocation":"6486:2:4","nodeType":"VariableDeclaration","scope":1526,"src":"6478:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:4","nodeType":"VariableDeclaration","scope":1526,"src":"6498:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"data","nameLocation":"6536:4:4","nodeType":"VariableDeclaration","scope":1526,"src":"6523:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:4"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[],"src":"6564:0:4"},"scope":2038,"src":"6424:305:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1538,"nodeType":"Block","src":"6913:40:4","statements":[{"expression":{"baseExpression":{"id":1534,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"6930:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1536,"indexExpression":{"id":1535,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"6938:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1533,"id":1537,"nodeType":"Return","src":"6923:23:4"}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"6735:98:4","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:4","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:4","nodeType":"VariableDeclaration","scope":1539,"src":"6856:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:4"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"6904:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1531,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:4"},"scope":2038,"src":"6838:115:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1556,"nodeType":"Block","src":"7327:55:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1548,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"7353:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1547,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"7344:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:4","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1546,"id":1555,"nodeType":"Return","src":"7337:38:4"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"6959:292:4","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:4","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:4","nodeType":"VariableDeclaration","scope":1557,"src":"7273:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:4"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"7321:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1544,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:4"},"scope":2038,"src":"7256:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"7639:162:4","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"owner","nameLocation":"7657:5:4","nodeType":"VariableDeclaration","scope":1590,"src":"7649:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1573,"initialValue":{"arguments":[{"id":1571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"7680:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1569,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7665:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"7665:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7706:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1575,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"7717:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1578,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"7743:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1579,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7750:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1577,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"7726:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1583,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"7774:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1582,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7762:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1585,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7786:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1566,"id":1589,"nodeType":"Return","src":"7698:96:4"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"7388:147:4","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:4","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"spender","nameLocation":"7576:7:4","nodeType":"VariableDeclaration","scope":1591,"src":"7568:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:4","nodeType":"VariableDeclaration","scope":1591,"src":"7585:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:4"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"7633:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1564,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:4"},"scope":2038,"src":"7540:261:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"8196:43:4","statements":[{"expression":{"arguments":[{"id":1600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8216:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"8220:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1599,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1606,1635],"referencedDeclaration":1635,"src":"8206:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"ExpressionStatement","src":"8206:26:4"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"7807:319:4","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1606,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:4","nodeType":"FunctionDefinition","parameters":{"id":1597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"to","nameLocation":"8158:2:4","nodeType":"VariableDeclaration","scope":1606,"src":"8150:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:4","nodeType":"VariableDeclaration","scope":1606,"src":"8162:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:4"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"8196:0:4"},"scope":2038,"src":"8131:108:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1634,"nodeType":"Block","src":"8574:195:4","statements":[{"expression":{"arguments":[{"id":1617,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"8590:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1618,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"8594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1616,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"8584:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"8584:18:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:4","typeDescriptions":{}}},"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"8668:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1628,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"8672:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1629,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"8681:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1622,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"8633:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"8612:150:4"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"8245:210:4","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:4","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"to","nameLocation":"8496:2:4","nodeType":"VariableDeclaration","scope":1635,"src":"8488:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1608,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:4","nodeType":"VariableDeclaration","scope":1635,"src":"8508:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"data","nameLocation":"8546:4:4","nodeType":"VariableDeclaration","scope":1635,"src":"8533:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:4"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"8574:0:4"},"scope":2038,"src":"8460:309:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1711,"nodeType":"Block","src":"9152:859:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"9170:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:4","typeDescriptions":{}}},"id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"9162:61:4"},{"expression":{"arguments":[{"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:4","subExpression":{"arguments":[{"id":1655,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9250:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"9242:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1660,"nodeType":"ExpressionStatement","src":"9233:58:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:4","typeDescriptions":{}}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"9335:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9339:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1661,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"9302:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"ExpressionStatement","src":"9302:48:4"},{"expression":{"arguments":[{"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:4","subExpression":{"arguments":[{"id":1673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9454:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1672,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"9446:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"ExpressionStatement","src":"9437:58:4"},{"id":1685,"nodeType":"UncheckedBlock","src":"9506:360:4","statements":[{"expression":{"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1679,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"9837:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1681,"indexExpression":{"id":1680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"9847:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1684,"nodeType":"ExpressionStatement","src":"9837:18:4"}]},{"expression":{"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1686,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"9876:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1688,"indexExpression":{"id":1687,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9884:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1689,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"9895:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1691,"nodeType":"ExpressionStatement","src":"9876:21:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:4","typeDescriptions":{}}},"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1697,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"9934:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9938:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1692,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"9913:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1700,"nodeType":"EmitStatement","src":"9908:38:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:4","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"9989:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9993:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1701,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"9957:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1710,"nodeType":"ExpressionStatement","src":"9957:47:4"}]},"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"8775:311:4","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:4","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"to","nameLocation":"9114:2:4","nodeType":"VariableDeclaration","scope":1712,"src":"9106:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:4","nodeType":"VariableDeclaration","scope":1712,"src":"9118:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:4"},"returnParameters":{"id":1642,"nodeType":"ParameterList","parameters":[],"src":"9152:0:4"},"scope":2038,"src":"9091:920:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"10386:713:4","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"owner","nameLocation":"10404:5:4","nodeType":"VariableDeclaration","scope":1778,"src":"10396:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1724,"initialValue":{"arguments":[{"id":1722,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10427:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1720,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"10412:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"10412:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:4"},{"expression":{"arguments":[{"id":1726,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"10467:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:4","typeDescriptions":{}}},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1731,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10486:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1725,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"10446:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1734,"nodeType":"ExpressionStatement","src":"10446:51:4"},{"expression":{"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1735,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"10599:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1738,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1736,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"10607:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"10607:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1741,"nodeType":"ExpressionStatement","src":"10599:31:4"},{"expression":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:4","subExpression":{"baseExpression":{"id":1742,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"10675:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1744,"indexExpression":{"id":1743,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10691:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1746,"nodeType":"ExpressionStatement","src":"10668:31:4"},{"id":1753,"nodeType":"UncheckedBlock","src":"10710:237:4","statements":[{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1747,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"10915:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1749,"indexExpression":{"id":1748,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"10925:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"10915:21:4"}]},{"expression":{"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:4","subExpression":{"baseExpression":{"id":1754,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"10963:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1756,"indexExpression":{"id":1755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"10956:23:4"},{"eventCall":{"arguments":[{"id":1760,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"11004:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:4","typeDescriptions":{}}},"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"11023:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1759,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"10995:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1767,"nodeType":"EmitStatement","src":"10990:41:4"},{"expression":{"arguments":[{"id":1769,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"11062:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:4","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1774,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"11081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1768,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"11042:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"11042:50:4"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"10017:315:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:4","nodeType":"FunctionDefinition","parameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:4","nodeType":"VariableDeclaration","scope":1779,"src":"10352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:4"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"10386:0:4"},"scope":2038,"src":"10337:762:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1863,"nodeType":"Block","src":"11532:1124:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1792,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"11565:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1790,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11550:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"11550:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1794,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"11577:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1798,"nodeType":"ExpressionStatement","src":"11542:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11641:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1801,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:4","typeDescriptions":{}}},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1799,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"ExpressionStatement","src":"11633:65:4"},{"expression":{"arguments":[{"id":1810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"11730:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11736:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"11740:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1809,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"11709:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1815,"nodeType":"ExpressionStatement","src":"11709:42:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"11866:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1817,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"11851:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"11851:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"11878:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"ExpressionStatement","src":"11843:81:4"},{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:4","subExpression":{"baseExpression":{"id":1826,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"11993:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1828,"indexExpression":{"id":1827,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12009:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"11986:31:4"},{"id":1843,"nodeType":"UncheckedBlock","src":"12028:496:4","statements":[{"expression":{"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1831,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"12461:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1833,"indexExpression":{"id":1832,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"12471:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1836,"nodeType":"ExpressionStatement","src":"12461:20:4"},{"expression":{"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1837,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"12495:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1839,"indexExpression":{"id":1838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12505:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1842,"nodeType":"ExpressionStatement","src":"12495:18:4"}]},{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1844,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"12533:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1846,"indexExpression":{"id":1845,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12541:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12552:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1849,"nodeType":"ExpressionStatement","src":"12533:21:4"},{"eventCall":{"arguments":[{"id":1851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"12579:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1852,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12585:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1853,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1850,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"12570:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1855,"nodeType":"EmitStatement","src":"12565:32:4"},{"expression":{"arguments":[{"id":1857,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"12628:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12634:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"12638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1856,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"12608:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"ExpressionStatement","src":"12608:41:4"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"11105:313:4","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1864,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:4","nodeType":"FunctionDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"from","nameLocation":"11459:4:4","nodeType":"VariableDeclaration","scope":1864,"src":"11451:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"to","nameLocation":"11481:2:4","nodeType":"VariableDeclaration","scope":1864,"src":"11473:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:4","nodeType":"VariableDeclaration","scope":1864,"src":"11493:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:4"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[],"src":"11532:0:4"},"scope":2038,"src":"11423:1233:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1887,"nodeType":"Block","src":"12832:107:4","statements":[{"expression":{"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1872,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"12842:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1874,"indexExpression":{"id":1873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"12858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1875,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"12869:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1877,"nodeType":"ExpressionStatement","src":"12842:29:4"},{"eventCall":{"arguments":[{"arguments":[{"id":1881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"12910:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1879,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"12895:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2038_$","typeString":"type(contract ERC721)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1257,"src":"12895:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"12920:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"12924:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1878,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"12886:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1886,"nodeType":"EmitStatement","src":"12881:51:4"}]},"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"12662:101:4","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:4","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"to","nameLocation":"12794:2:4","nodeType":"VariableDeclaration","scope":1888,"src":"12786:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1866,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:4","nodeType":"VariableDeclaration","scope":1888,"src":"12798:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:4"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[],"src":"12832:0:4"},"scope":2038,"src":"12768:171:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"13198:184:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1899,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"13216:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1900,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"13225:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1898,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"ExpressionStatement","src":"13208:55:4"},{"expression":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1905,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"13273:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1908,"indexExpression":{"id":1906,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"13292:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1909,"indexExpression":{"id":1907,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"13299:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1910,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"13311:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1912,"nodeType":"ExpressionStatement","src":"13273:46:4"},{"eventCall":{"arguments":[{"id":1914,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"13349:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1915,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"13356:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1916,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"13366:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1913,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"13334:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1918,"nodeType":"EmitStatement","src":"13329:46:4"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"12945:125:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:4","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"owner","nameLocation":"13120:5:4","nodeType":"VariableDeclaration","scope":1920,"src":"13112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1890,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"operator","nameLocation":"13143:8:4","nodeType":"VariableDeclaration","scope":1920,"src":"13135:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1892,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"approved","nameLocation":"13166:8:4","nodeType":"VariableDeclaration","scope":1920,"src":"13161:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1894,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:4"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"13198:0:4"},"scope":2038,"src":"13075:307:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1933,"nodeType":"Block","src":"13529:70:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1928,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"13555:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1927,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"13547:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"ExpressionStatement","src":"13539:53:4"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"13388:73:4","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:4","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:4","nodeType":"VariableDeclaration","scope":1934,"src":"13490:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:4"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[],"src":"13529:0:4"},"scope":2038,"src":"13466:133:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1995,"nodeType":"Block","src":"14306:676:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1948,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"14320:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2342,"src":"14320:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1993,"nodeType":"Block","src":"14940:36:4","statements":[{"expression":{"hexValue":"74727565","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1947,"id":1992,"nodeType":"Return","src":"14954:11:4"}]},"id":1994,"nodeType":"IfStatement","src":"14316:660:4","trueBody":{"id":1990,"nodeType":"Block","src":"14337:597:4","statements":[{"clauses":[{"block":{"id":1970,"nodeType":"Block","src":"14451:91:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"14476:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1965,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"14486:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2172_$","typeString":"type(contract IERC721Receiver)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2171,"src":"14486:32:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1947,"id":1969,"nodeType":"Return","src":"14469:58:4"}]},"errorName":"","id":1971,"nodeType":"TryCatchClause","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"retval","nameLocation":"14443:6:4","nodeType":"VariableDeclaration","scope":1971,"src":"14436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1961,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:4"},"src":"14427:115:4"},{"block":{"id":1987,"nodeType":"Block","src":"14571:353:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1975,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"14593:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1985,"nodeType":"Block","src":"14720:190:4","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:4","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:4","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:4"},"nodeType":"YulFunctionCall","src":"14839:15:4"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:4"},"nodeType":"YulFunctionCall","src":"14856:13:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:4"},"nodeType":"YulFunctionCall","src":"14832:38:4"},"nodeType":"YulExpressionStatement","src":"14832:38:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1973,"isOffset":false,"isSlot":false,"src":"14847:6:4","valueSize":1},{"declaration":1973,"isOffset":false,"isSlot":false,"src":"14862:6:4","valueSize":1}],"id":1984,"nodeType":"InlineAssembly","src":"14797:95:4"}]},"id":1986,"nodeType":"IfStatement","src":"14589:321:4","trueBody":{"id":1983,"nodeType":"Block","src":"14613:101:4","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1979,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"14635:60:4"}]}}]},"errorName":"","id":1988,"nodeType":"TryCatchClause","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"reason","nameLocation":"14563:6:4","nodeType":"VariableDeclaration","scope":1988,"src":"14550:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1972,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:4"},"src":"14543:381:4"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1955,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"14392:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"14406:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1958,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"14412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"14421:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"14371:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1951,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"14355:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2172_$","typeString":"type(contract IERC721Receiver)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2172","typeString":"contract IERC721Receiver"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2171,"src":"14355:36:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1989,"nodeType":"TryStatement","src":"14351:573:4"}]}}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"13605:541:4","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1996,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:4","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"from","nameLocation":"14200:4:4","nodeType":"VariableDeclaration","scope":1996,"src":"14192:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1936,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1939,"mutability":"mutable","name":"to","nameLocation":"14222:2:4","nodeType":"VariableDeclaration","scope":1996,"src":"14214:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1938,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:4","nodeType":"VariableDeclaration","scope":1996,"src":"14234:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"data","nameLocation":"14272:4:4","nodeType":"VariableDeclaration","scope":1996,"src":"14259:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1942,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:4"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1996,"src":"14300:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1945,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:4"},"scope":2038,"src":"14151:831:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2008,"nodeType":"Block","src":"15850:2:4","statements":[]},"documentation":{"id":1997,"nodeType":"StructuredDocumentation","src":"14988:705:4","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:4","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"from","nameLocation":"15745:4:4","nodeType":"VariableDeclaration","scope":2009,"src":"15737:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"to","nameLocation":"15767:2:4","nodeType":"VariableDeclaration","scope":2009,"src":"15759:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"firstTokenId","nameLocation":"15787:12:4","nodeType":"VariableDeclaration","scope":2009,"src":"15779:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"batchSize","nameLocation":"15817:9:4","nodeType":"VariableDeclaration","scope":2009,"src":"15809:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:105:4"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"15850:0:4"},"scope":2038,"src":"15698:154:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"16709:2:4","statements":[]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"15858:695:4","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16567:19:4","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"from","nameLocation":"16604:4:4","nodeType":"VariableDeclaration","scope":2022,"src":"16596:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2011,"name":"address","nodeType":"ElementaryTypeName","src":"16596:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"to","nameLocation":"16626:2:4","nodeType":"VariableDeclaration","scope":2022,"src":"16618:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"16618:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"firstTokenId","nameLocation":"16646:12:4","nodeType":"VariableDeclaration","scope":2022,"src":"16638:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"16638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"batchSize","nameLocation":"16676:9:4","nodeType":"VariableDeclaration","scope":2022,"src":"16668:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"16668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16586:105:4"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[],"src":"16709:0:4"},"scope":2038,"src":"16558:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"17260:45:4","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2030,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"17270:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2032,"indexExpression":{"id":2031,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"17280:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17270:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"17292:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17270:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"17270:28:4"}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"16717:409:4","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"17193:24:4","nodeType":"FunctionDefinition","parameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"account","nameLocation":"17226:7:4","nodeType":"VariableDeclaration","scope":2037,"src":"17218:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"17218:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"amount","nameLocation":"17243:6:4","nodeType":"VariableDeclaration","scope":2037,"src":"17235:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"17235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17217:33:4"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[],"src":"17260:0:4"},"scope":2038,"src":"17184:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2039,"src":"628:16679:4","usedErrors":[]}],"src":"107:17201:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2887],"IERC721":[2154]},"id":2155,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2041,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2155,"sourceUnit":2888,"src":"133:47:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2043,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2887,"src":"271:7:5"},"id":2044,"nodeType":"InheritanceSpecifier","src":"271:7:5"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"182:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2154,"linearizedBaseContracts":[2154,2887],"name":"IERC721","nameLocation":"260:7:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"285:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2053,"name":"Transfer","nameLocation":"384:8:5","nodeType":"EventDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:5","nodeType":"VariableDeclaration","scope":2053,"src":"393:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2049,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:5","nodeType":"VariableDeclaration","scope":2053,"src":"415:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2051,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:5","nodeType":"VariableDeclaration","scope":2053,"src":"435:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:5"},"src":"378:82:5"},{"anonymous":false,"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"466:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2062,"name":"Approval","nameLocation":"571:8:5","nodeType":"EventDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:5","nodeType":"VariableDeclaration","scope":2062,"src":"580:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2058,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:5","nodeType":"VariableDeclaration","scope":2062,"src":"603:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2060,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:5","nodeType":"VariableDeclaration","scope":2062,"src":"629:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:5"},"src":"565:89:5"},{"anonymous":false,"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"660:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2071,"name":"ApprovalForAll","nameLocation":"788:14:5","nodeType":"EventDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:5","nodeType":"VariableDeclaration","scope":2071,"src":"803:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2067,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:5","nodeType":"VariableDeclaration","scope":2071,"src":"826:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2069,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:5","nodeType":"VariableDeclaration","scope":2071,"src":"852:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2068,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:5"},"src":"782:85:5"},{"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"873:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2079,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:5","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"owner","nameLocation":"981:5:5","nodeType":"VariableDeclaration","scope":2079,"src":"973:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:5"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"balance","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":2079,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:5"},"scope":2154,"src":"954:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"1034:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2087,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:5","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:5","nodeType":"VariableDeclaration","scope":2087,"src":"1187:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:5"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"owner","nameLocation":"1235:5:5","nodeType":"VariableDeclaration","scope":2087,"src":"1227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:5"},"scope":2154,"src":"1170:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"1248:556:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2099,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:5","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"from","nameLocation":"1852:4:5","nodeType":"VariableDeclaration","scope":2099,"src":"1844:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"to","nameLocation":"1874:2:5","nodeType":"VariableDeclaration","scope":2099,"src":"1866:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2091,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2094,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:5","nodeType":"VariableDeclaration","scope":2099,"src":"1886:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"data","nameLocation":"1926:4:5","nodeType":"VariableDeclaration","scope":2099,"src":"1911:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:5"},"returnParameters":{"id":2098,"nodeType":"ParameterList","parameters":[],"src":"1945:0:5"},"scope":2154,"src":"1809:137:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2100,"nodeType":"StructuredDocumentation","src":"1952:687:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2109,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:5","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"from","nameLocation":"2687:4:5","nodeType":"VariableDeclaration","scope":2109,"src":"2679:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2101,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"to","nameLocation":"2709:2:5","nodeType":"VariableDeclaration","scope":2109,"src":"2701:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:5","nodeType":"VariableDeclaration","scope":2109,"src":"2721:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:5"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[],"src":"2751:0:5"},"scope":2154,"src":"2644:108:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"2758:732:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2119,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:5","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"from","nameLocation":"3534:4:5","nodeType":"VariableDeclaration","scope":2119,"src":"3526:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"to","nameLocation":"3556:2:5","nodeType":"VariableDeclaration","scope":2119,"src":"3548:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2113,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:5","nodeType":"VariableDeclaration","scope":2119,"src":"3568:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:5"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"3598:0:5"},"scope":2154,"src":"3495:104:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2120,"nodeType":"StructuredDocumentation","src":"3605:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2127,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:5","nodeType":"FunctionDefinition","parameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"to","nameLocation":"4087:2:5","nodeType":"VariableDeclaration","scope":2127,"src":"4079:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:5","nodeType":"VariableDeclaration","scope":2127,"src":"4091:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:5"},"returnParameters":{"id":2126,"nodeType":"ParameterList","parameters":[],"src":"4116:0:5"},"scope":2154,"src":"4062:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"4123:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2135,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:5","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"operator","nameLocation":"4472:8:5","nodeType":"VariableDeclaration","scope":2135,"src":"4464:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:5","nodeType":"VariableDeclaration","scope":2135,"src":"4482:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2131,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:5"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"4506:0:5"},"scope":2154,"src":"4437:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"4513:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2143,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:5","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:5","nodeType":"VariableDeclaration","scope":2143,"src":"4678:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:5"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"operator","nameLocation":"4726:8:5","nodeType":"VariableDeclaration","scope":2143,"src":"4718:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:5"},"scope":2154,"src":"4657:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"4742:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2153,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:5","nodeType":"FunctionDefinition","parameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"owner","nameLocation":"4919:5:5","nodeType":"VariableDeclaration","scope":2153,"src":"4911:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2148,"mutability":"mutable","name":"operator","nameLocation":"4934:8:5","nodeType":"VariableDeclaration","scope":2153,"src":"4926:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:5"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2153,"src":"4967:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2150,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:5"},"scope":2154,"src":"4885:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2155,"src":"250:4725:5","usedErrors":[]}],"src":"108:4868:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2172]},"id":2173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2156,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2172,"linearizedBaseContracts":[2172],"name":"IERC721Receiver","nameLocation":"304:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2171,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:6","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"operator","nameLocation":"867:8:6","nodeType":"VariableDeclaration","scope":2171,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2162,"mutability":"mutable","name":"from","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":2171,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:6","nodeType":"VariableDeclaration","scope":2171,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"data","nameLocation":"947:4:6","nodeType":"VariableDeclaration","scope":2171,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2165,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2168,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":2172,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2173,"src":"294:692:6","usedErrors":[]}],"src":"116:871:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[2654],"Context":[2676],"ERC165":[2875],"ERC721":[2038],"ERC721URIStorage":[2297],"IERC165":[2887],"IERC721":[2154],"IERC721Metadata":[2324],"IERC721Receiver":[2172],"Math":[3752],"Strings":[2851]},"id":2298,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2174,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2298,"sourceUnit":2039,"src":"153:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2177,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"286:6:7"},"id":2178,"nodeType":"InheritanceSpecifier","src":"286:6:7"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"178:69:7","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":2297,"linearizedBaseContracts":[2297,2038,2324,2154,2875,2887,2676],"name":"ERC721URIStorage","nameLocation":"266:16:7","nodeType":"ContractDefinition","nodes":[{"id":2181,"libraryName":{"id":2179,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2851,"src":"305:7:7"},"nodeType":"UsingForDirective","src":"299:26:7","typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2185,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:7","nodeType":"VariableDeclaration","scope":2297,"src":"370:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2184,"keyType":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2183,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1316],"body":{"id":2243,"nodeType":"Block","src":"570:520:7","statements":[{"expression":{"arguments":[{"id":2195,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"595:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2194,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"580:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2197,"nodeType":"ExpressionStatement","src":"580:23:7"},{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:7","nodeType":"VariableDeclaration","scope":2243,"src":"614:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2198,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2203,"initialValue":{"baseExpression":{"id":2200,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"640:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2202,"indexExpression":{"id":2201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"651:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:7"},{"assignments":[2205],"declarations":[{"constant":false,"id":2205,"mutability":"mutable","name":"base","nameLocation":"683:4:7","nodeType":"VariableDeclaration","scope":2243,"src":"669:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2204,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2208,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2206,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"690:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2211,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"779:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2209,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:7","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"nodeType":"IfStatement","src":"769:70:7","trueBody":{"id":2218,"nodeType":"Block","src":"798:41:7","statements":[{"expression":{"id":2216,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"819:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2193,"id":2217,"nodeType":"Return","src":"812:16:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2222,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"947:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2220,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:7","typeDescriptions":{}}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2237,"nodeType":"IfStatement","src":"937:106:7","trueBody":{"id":2236,"nodeType":"Block","src":"970:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":2231,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"1015:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2232,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1021:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2229,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2227,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:7","typeDescriptions":{}}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2193,"id":2235,"nodeType":"Return","src":"984:48:7"}]}},{"expression":{"arguments":[{"id":2240,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2238,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2297_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1316,"src":"1060:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2193,"id":2242,"nodeType":"Return","src":"1053:30:7"}]},"documentation":{"id":2186,"nodeType":"StructuredDocumentation","src":"422:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2244,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:7","nodeType":"FunctionDefinition","overrides":{"id":2190,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:7"},"parameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2188,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:7","nodeType":"VariableDeclaration","scope":2244,"src":"500:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:7"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2244,"src":"555:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2191,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:7"},"scope":2297,"src":"482:608:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2265,"nodeType":"Block","src":"1318:133:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":2254,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2253,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"1336:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":2252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2258,"nodeType":"ExpressionStatement","src":"1328:75:7"},{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2259,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1413:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2261,"indexExpression":{"id":2260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"1424:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2262,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1435:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2264,"nodeType":"ExpressionStatement","src":"1413:31:7"}]},"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"1096:136:7","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:7","nodeType":"FunctionDefinition","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:7","nodeType":"VariableDeclaration","scope":2266,"src":"1259:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:7","nodeType":"VariableDeclaration","scope":2266,"src":"1276:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2248,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:7"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[],"src":"1318:0:7"},"scope":2297,"src":"1237:214:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1779],"body":{"id":2295,"nodeType":"Block","src":"1727:142:7","statements":[{"expression":{"arguments":[{"id":2276,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2273,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2297_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1779,"src":"1737:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"ExpressionStatement","src":"1737:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":2281,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1778:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2283,"indexExpression":{"id":2282,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1789:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2279,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:7","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2294,"nodeType":"IfStatement","src":"1768:95:7","trueBody":{"id":2293,"nodeType":"Block","src":"1812:51:7","statements":[{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:7","subExpression":{"baseExpression":{"id":2288,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"1833:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2290,"indexExpression":{"id":2289,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1844:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2292,"nodeType":"ExpressionStatement","src":"1826:26:7"}]}}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"1457:207:7","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":2296,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:7","nodeType":"FunctionDefinition","overrides":{"id":2271,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:7"},"parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:7","nodeType":"VariableDeclaration","scope":2296,"src":"1684:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:7"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[],"src":"1727:0:7"},"scope":2297,"src":"1669:200:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2298,"src":"248:1623:7","usedErrors":[]}],"src":"128:1744:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2887],"IERC721":[2154],"IERC721Metadata":[2324]},"id":2325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2299,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2325,"sourceUnit":2155,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2302,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2154,"src":"326:7:8"},"id":2303,"nodeType":"InheritanceSpecifier","src":"326:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"163:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2324,"linearizedBaseContracts":[2324,2154,2887],"name":"IERC721Metadata","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"340:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2309,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:8","nodeType":"FunctionDefinition","parameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"416:2:8"},"returnParameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"442:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2306,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:8"},"scope":2324,"src":"403:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"463:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2315,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:8","nodeType":"FunctionDefinition","parameters":{"id":2311,"nodeType":"ParameterList","parameters":[],"src":"543:2:8"},"returnParameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"569:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2312,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:8"},"scope":2324,"src":"528:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"590:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2323,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:8","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:8","nodeType":"VariableDeclaration","scope":2323,"src":"703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:8"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2323,"src":"743:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:8"},"scope":2324,"src":"685:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2325,"src":"297:463:8","usedErrors":[]}],"src":"112:649:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2654]},"id":2655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2326,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2654,"linearizedBaseContracts":[2654],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2341,"nodeType":"Block","src":"1241:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1465:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2334,"id":2340,"nodeType":"Return","src":"1458:30:9"}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"216:954:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2342,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:9","nodeType":"FunctionDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"account","nameLocation":"1203:7:9","nodeType":"VariableDeclaration","scope":2342,"src":"1195:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:9"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2342,"src":"1235:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2332,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:9"},"scope":2654,"src":"1175:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2375,"nodeType":"Block","src":"2483:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2353,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2351,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:9","typeDescriptions":{}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2356,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2526:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"2493:73:9"},{"assignments":[2362,null],"declarations":[{"constant":false,"id":2362,"mutability":"mutable","name":"success","nameLocation":"2583:7:9","nodeType":"VariableDeclaration","scope":2375,"src":"2578:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2361,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2369,"initialValue":{"arguments":[{"hexValue":"","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2363,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"2596:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2365,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2618:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:9"},{"expression":{"arguments":[{"id":2371,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"2647:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2374,"nodeType":"ExpressionStatement","src":"2639:78:9"}]},"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"1501:906:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2376,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:9","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:9","nodeType":"VariableDeclaration","scope":2376,"src":"2431:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"amount","nameLocation":"2466:6:9","nodeType":"VariableDeclaration","scope":2376,"src":"2458:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:9"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"2483:0:9"},"scope":2654,"src":"2412:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2393,"nodeType":"Block","src":"3555:96:9","statements":[{"expression":{"arguments":[{"id":2387,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"3594:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2388,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3602:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2386,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2434,2478],"referencedDeclaration":2478,"src":"3572:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2385,"id":2392,"nodeType":"Return","src":"3565:79:9"}]},"documentation":{"id":2377,"nodeType":"StructuredDocumentation","src":"2730:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:9","nodeType":"FunctionDefinition","parameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"target","nameLocation":"3496:6:9","nodeType":"VariableDeclaration","scope":2394,"src":"3488:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"data","nameLocation":"3517:4:9","nodeType":"VariableDeclaration","scope":2394,"src":"3504:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2380,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:9"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"3541:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2383,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:9"},"scope":2654,"src":"3466:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2413,"nodeType":"Block","src":"4020:76:9","statements":[{"expression":{"arguments":[{"id":2407,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"4059:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2408,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"4067:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2410,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"4076:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2406,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2434,2478],"referencedDeclaration":2478,"src":"4037:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2405,"id":2412,"nodeType":"Return","src":"4030:59:9"}]},"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"3657:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:9","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"target","nameLocation":"3912:6:9","nodeType":"VariableDeclaration","scope":2414,"src":"3904:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2396,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"data","nameLocation":"3941:4:9","nodeType":"VariableDeclaration","scope":2414,"src":"3928:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:9","nodeType":"VariableDeclaration","scope":2414,"src":"3955:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2400,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:9"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"4006:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:9"},"scope":2654,"src":"3873:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2433,"nodeType":"Block","src":"4601:111:9","statements":[{"expression":{"arguments":[{"id":2427,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4640:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2428,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"4648:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"4654:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2426,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2434,2478],"referencedDeclaration":2478,"src":"4618:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2425,"id":2432,"nodeType":"Return","src":"4611:94:9"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"4102:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2434,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:9","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"target","nameLocation":"4506:6:9","nodeType":"VariableDeclaration","scope":2434,"src":"4498:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"data","nameLocation":"4535:4:9","nodeType":"VariableDeclaration","scope":2434,"src":"4522:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2418,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"value","nameLocation":"4557:5:9","nodeType":"VariableDeclaration","scope":2434,"src":"4549:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:9"},"returnParameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2434,"src":"4587:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2423,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:9"},"scope":2654,"src":"4458:254:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"5139:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2451,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2654","typeString":"library Address"}],"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:9","typeDescriptions":{}}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"5182:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"ExpressionStatement","src":"5149:81:9"},{"assignments":[2460,2462],"declarations":[{"constant":false,"id":2460,"mutability":"mutable","name":"success","nameLocation":"5246:7:9","nodeType":"VariableDeclaration","scope":2477,"src":"5241:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2459,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2462,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:9","nodeType":"VariableDeclaration","scope":2477,"src":"5255:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2461,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2469,"initialValue":{"arguments":[{"id":2467,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"5308:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2463,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"5282:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"5301:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:9"},{"expression":{"arguments":[{"id":2471,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"5357:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2472,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"5365:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2473,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"5374:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2474,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"5386:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2470,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"5330:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2447,"id":2476,"nodeType":"Return","src":"5323:76:9"}]},"documentation":{"id":2435,"nodeType":"StructuredDocumentation","src":"4718:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:9","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"target","nameLocation":"5008:6:9","nodeType":"VariableDeclaration","scope":2478,"src":"5000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"data","nameLocation":"5037:4:9","nodeType":"VariableDeclaration","scope":2478,"src":"5024:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"value","nameLocation":"5059:5:9","nodeType":"VariableDeclaration","scope":2478,"src":"5051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:9","nodeType":"VariableDeclaration","scope":2478,"src":"5074:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2442,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:9"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"5125:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2445,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:9"},"scope":2654,"src":"4960:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"5683:97:9","statements":[{"expression":{"arguments":[{"id":2489,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"5719:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2490,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"5727:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2488,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2495,2524],"referencedDeclaration":2524,"src":"5700:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2487,"id":2493,"nodeType":"Return","src":"5693:80:9"}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"5412:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:9","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"target","nameLocation":"5619:6:9","nodeType":"VariableDeclaration","scope":2495,"src":"5611:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"data","nameLocation":"5640:4:9","nodeType":"VariableDeclaration","scope":2495,"src":"5627:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2482,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:9"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2495,"src":"5669:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2485,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:9"},"scope":2654,"src":"5583:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"6122:168:9","statements":[{"assignments":[2508,2510],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"success","nameLocation":"6138:7:9","nodeType":"VariableDeclaration","scope":2523,"src":"6133:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:9","nodeType":"VariableDeclaration","scope":2523,"src":"6147:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2509,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2515,"initialValue":{"arguments":[{"id":2513,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6192:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2511,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6174:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:9"},{"expression":{"arguments":[{"id":2517,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6241:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2518,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"6249:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2519,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"6258:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2520,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"6270:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2516,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"6214:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2506,"id":2522,"nodeType":"Return","src":"6207:76:9"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"5786:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:9","nodeType":"FunctionDefinition","parameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"target","nameLocation":"6009:6:9","nodeType":"VariableDeclaration","scope":2524,"src":"6001:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"data","nameLocation":"6038:4:9","nodeType":"VariableDeclaration","scope":2524,"src":"6025:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2499,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:9","nodeType":"VariableDeclaration","scope":2524,"src":"6052:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2501,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:9"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2524,"src":"6108:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2504,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:9"},"scope":2654,"src":"5964:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"6566:101:9","statements":[{"expression":{"arguments":[{"id":2535,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"6604:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"6612:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2534,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2541,2570],"referencedDeclaration":2570,"src":"6583:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2533,"id":2539,"nodeType":"Return","src":"6576:84:9"}]},"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"6296:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:9","nodeType":"FunctionDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"target","nameLocation":"6507:6:9","nodeType":"VariableDeclaration","scope":2541,"src":"6499:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"data","nameLocation":"6528:4:9","nodeType":"VariableDeclaration","scope":2541,"src":"6515:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:9"},"returnParameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"6552:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2531,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:9"},"scope":2654,"src":"6469:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2569,"nodeType":"Block","src":"7008:170:9","statements":[{"assignments":[2554,2556],"declarations":[{"constant":false,"id":2554,"mutability":"mutable","name":"success","nameLocation":"7024:7:9","nodeType":"VariableDeclaration","scope":2569,"src":"7019:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2553,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:9","nodeType":"VariableDeclaration","scope":2569,"src":"7033:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2555,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2561,"initialValue":{"arguments":[{"id":2559,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"7080:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2557,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"7060:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:9"},{"expression":{"arguments":[{"id":2563,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"7129:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2564,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"7137:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2565,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"7146:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2566,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"7158:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2562,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"7102:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2552,"id":2568,"nodeType":"Return","src":"7095:76:9"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"6673:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:9","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"target","nameLocation":"6900:6:9","nodeType":"VariableDeclaration","scope":2570,"src":"6892:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"data","nameLocation":"6929:4:9","nodeType":"VariableDeclaration","scope":2570,"src":"6916:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2545,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:9","nodeType":"VariableDeclaration","scope":2570,"src":"6943:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2547,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:9"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"6994:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2550,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:9"},"scope":2654,"src":"6853:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2608,"nodeType":"Block","src":"7660:434:9","statements":[{"condition":{"id":2584,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"7674:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2606,"nodeType":"Block","src":"8030:58:9","statements":[{"expression":{"arguments":[{"id":2602,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"8052:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2603,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"8064:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2601,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"8044:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2605,"nodeType":"ExpressionStatement","src":"8044:33:9"}]},"id":2607,"nodeType":"IfStatement","src":"7670:418:9","trueBody":{"id":2600,"nodeType":"Block","src":"7683:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2585,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"7701:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"7697:286:9","trueBody":{"id":2596,"nodeType":"Block","src":"7725:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2591,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7927:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2590,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"7916:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2595,"nodeType":"ExpressionStatement","src":"7908:60:9"}]}},{"expression":{"id":2598,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"8003:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2583,"id":2599,"nodeType":"Return","src":"7996:17:9"}]}}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"7184:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2609,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:9","nodeType":"FunctionDefinition","parameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"target","nameLocation":"7519:6:9","nodeType":"VariableDeclaration","scope":2609,"src":"7511:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"success","nameLocation":"7540:7:9","nodeType":"VariableDeclaration","scope":2609,"src":"7535:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2574,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:9","nodeType":"VariableDeclaration","scope":2609,"src":"7557:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2576,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:9","nodeType":"VariableDeclaration","scope":2609,"src":"7590:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2578,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:9"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"7646:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2581,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:9"},"scope":2654,"src":"7466:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2632,"nodeType":"Block","src":"8475:135:9","statements":[{"condition":{"id":2621,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"8489:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2630,"nodeType":"Block","src":"8546:58:9","statements":[{"expression":{"arguments":[{"id":2626,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"8568:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2627,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"8580:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2625,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"8560:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"8560:33:9"}]},"id":2631,"nodeType":"IfStatement","src":"8485:119:9","trueBody":{"id":2624,"nodeType":"Block","src":"8498:42:9","statements":[{"expression":{"id":2622,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"8519:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2620,"id":2623,"nodeType":"Return","src":"8512:17:9"}]}}]},"documentation":{"id":2610,"nodeType":"StructuredDocumentation","src":"8100:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2633,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:9","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"success","nameLocation":"8355:7:9","nodeType":"VariableDeclaration","scope":2633,"src":"8350:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2611,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:9","nodeType":"VariableDeclaration","scope":2633,"src":"8372:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2613,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:9","nodeType":"VariableDeclaration","scope":2633,"src":"8405:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2615,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:9"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2633,"src":"8461:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2618,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:9"},"scope":2654,"src":"8315:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2652,"nodeType":"Block","src":"8699:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2640,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8775:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2650,"nodeType":"Block","src":"9105:45:9","statements":[{"expression":{"arguments":[{"id":2647,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"9126:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2646,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"ExpressionStatement","src":"9119:20:9"}]},"id":2651,"nodeType":"IfStatement","src":"8771:379:9","trueBody":{"id":2645,"nodeType":"Block","src":"8798:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:9"},"nodeType":"YulFunctionCall","src":"8997:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:9"},"nodeType":"YulFunctionCall","src":"9038:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:9"},"nodeType":"YulFunctionCall","src":"9031:44:9"},"nodeType":"YulExpressionStatement","src":"9031:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2635,"isOffset":false,"isSlot":false,"src":"9003:10:9","valueSize":1},{"declaration":2635,"isOffset":false,"isSlot":false,"src":"9046:10:9","valueSize":1}],"id":2644,"nodeType":"InlineAssembly","src":"8947:142:9"}]}}]},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:9","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:9","nodeType":"VariableDeclaration","scope":2653,"src":"8633:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2634,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:9","nodeType":"VariableDeclaration","scope":2653,"src":"8658:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:9"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[],"src":"8699:0:9"},"scope":2654,"src":"8616:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2655,"src":"194:8964:9","usedErrors":[]}],"src":"101:9058:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2676]},"id":2677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2656,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2676,"linearizedBaseContracts":[2676],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2665,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":2662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2661,"id":2664,"nodeType":"Return","src":"712:17:10"}]},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2659,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":2676,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2674,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":2671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2670,"id":2673,"nodeType":"Return","src":"819:15:10"}]},"id":2675,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":2667,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2675,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2668,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":2676,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2677,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3752],"Strings":[2851]},"id":2852,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2678,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2852,"sourceUnit":3753,"src":"126:25:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"153:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":2851,"linearizedBaseContracts":[2851],"name":"Strings","nameLocation":"196:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2683,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:11","nodeType":"VariableDeclaration","scope":2851,"src":"210:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2681,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2686,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:11","nodeType":"VariableDeclaration","scope":2851,"src":"270:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2684,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2733,"nodeType":"Block","src":"486:625:11","statements":[{"id":2732,"nodeType":"UncheckedBlock","src":"496:609:11","statements":[{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":2732,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2702,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"548:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2696,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"537:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3752_$","typeString":"type(library Math)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3589,"src":"537:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:11"},{"assignments":[2704],"declarations":[{"constant":false,"id":2704,"mutability":"mutable","name":"buffer","nameLocation":"586:6:11","nodeType":"VariableDeclaration","scope":2732,"src":"572:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2703,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2709,"initialValue":{"arguments":[{"id":2707,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"606:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2705,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:11"},{"assignments":[2711],"declarations":[{"constant":false,"id":2711,"mutability":"mutable","name":"ptr","nameLocation":"635:3:11","nodeType":"VariableDeclaration","scope":2732,"src":"627:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"nodeType":"VariableDeclarationStatement","src":"627:11:11"},{"AST":{"nodeType":"YulBlock","src":"708:67:11","statements":[{"nodeType":"YulAssignment","src":"726:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:11"},"nodeType":"YulFunctionCall","src":"745:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:11"},"nodeType":"YulFunctionCall","src":"733:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2704,"isOffset":false,"isSlot":false,"src":"737:6:11","valueSize":1},{"declaration":2695,"isOffset":false,"isSlot":false,"src":"753:6:11","valueSize":1},{"declaration":2711,"isOffset":false,"isSlot":false,"src":"726:3:11","valueSize":1}],"id":2713,"nodeType":"InlineAssembly","src":"699:76:11"},{"body":{"id":2728,"nodeType":"Block","src":"801:267:11","statements":[{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:11","subExpression":{"id":2715,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"819:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"819:5:11"},{"AST":{"nodeType":"YulBlock","src":"902:84:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:11"},"nodeType":"YulFunctionCall","src":"942:14:11"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:11"},"nodeType":"YulFunctionCall","src":"937:30:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:11"},"nodeType":"YulFunctionCall","src":"924:44:11"},"nodeType":"YulExpressionStatement","src":"924:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2683,"isOffset":false,"isSlot":false,"src":"958:8:11","valueSize":1},{"declaration":2711,"isOffset":false,"isSlot":false,"src":"932:3:11","valueSize":1},{"declaration":2689,"isOffset":false,"isSlot":false,"src":"946:5:11","valueSize":1}],"id":2718,"nodeType":"InlineAssembly","src":"893:93:11"},{"expression":{"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"1003:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2722,"nodeType":"ExpressionStatement","src":"1003:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"1036:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2727,"nodeType":"IfStatement","src":"1032:21:11","trueBody":{"id":2726,"nodeType":"Break","src":"1048:5:11"}}]},"condition":{"hexValue":"74727565","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2729,"nodeType":"WhileStatement","src":"788:280:11"},{"expression":{"id":2730,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"1088:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2693,"id":2731,"nodeType":"Return","src":"1081:13:11"}]}]},"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"320:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:11","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"value","nameLocation":"441:5:11","nodeType":"VariableDeclaration","scope":2734,"src":"433:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2688,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:11"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"471:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2691,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:11"},"scope":2851,"src":"415:696:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"1290:100:11","statements":[{"id":2752,"nodeType":"UncheckedBlock","src":"1300:84:11","statements":[{"expression":{"arguments":[{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2744,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"1350:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3752_$","typeString":"type(library Math)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3712,"src":"1350:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2742,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2754,2830,2850],"referencedDeclaration":2830,"src":"1331:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2741,"id":2751,"nodeType":"Return","src":"1324:49:11"}]}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"1117:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2754,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:11","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"value","nameLocation":"1245:5:11","nodeType":"VariableDeclaration","scope":2754,"src":"1237:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:11"},"returnParameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2754,"src":"1275:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2739,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:11"},"scope":2851,"src":"1216:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"1603:347:11","statements":[{"assignments":[2765],"declarations":[{"constant":false,"id":2765,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:11","nodeType":"VariableDeclaration","scope":2829,"src":"1613:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2764,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2774,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2769,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"1649:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2766,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:11"},{"expression":{"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2775,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"1670:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2777,"indexExpression":{"hexValue":"30","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2780,"nodeType":"ExpressionStatement","src":"1670:15:11"},{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2781,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"1695:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2783,"indexExpression":{"hexValue":"31","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2786,"nodeType":"ExpressionStatement","src":"1695:15:11"},{"body":{"id":2815,"nodeType":"Block","src":"1765:83:11","statements":[{"expression":{"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2801,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"1779:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2803,"indexExpression":{"id":2802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1786:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2804,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"1791:8:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2808,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"1800:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2810,"nodeType":"ExpressionStatement","src":"1779:33:11"},{"expression":{"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"1826:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2814,"nodeType":"ExpressionStatement","src":"1826:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1753:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2816,"initializationExpression":{"assignments":[2788],"declarations":[{"constant":false,"id":2788,"mutability":"mutable","name":"i","nameLocation":"1733:1:11","nodeType":"VariableDeclaration","scope":2816,"src":"1725:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2794,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2790,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"1741:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:11"},"loopExpression":{"expression":{"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:11","subExpression":{"id":2798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"1762:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2800,"nodeType":"ExpressionStatement","src":"1760:3:11"},"nodeType":"ForStatement","src":"1720:128:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"1865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2823,"nodeType":"ExpressionStatement","src":"1857:55:11"},{"expression":{"arguments":[{"id":2826,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"1936:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2824,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:11","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2763,"id":2828,"nodeType":"Return","src":"1922:21:11"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"1396:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:11","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"value","nameLocation":"1542:5:11","nodeType":"VariableDeclaration","scope":2830,"src":"1534:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"length","nameLocation":"1557:6:11","nodeType":"VariableDeclaration","scope":2830,"src":"1549:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:11"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"1588:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2761,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:11"},"scope":2851,"src":"1513:437:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"2175:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2843,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2220:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2841,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:11","typeDescriptions":{}}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:11","typeDescriptions":{}}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2846,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"2228:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2838,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2754,2830,2850],"referencedDeclaration":2830,"src":"2192:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2837,"id":2848,"nodeType":"Return","src":"2185:59:11"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"1956:141:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:11","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"addr","nameLocation":"2131:4:11","nodeType":"VariableDeclaration","scope":2850,"src":"2123:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:11"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"2160:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2835,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:11"},"scope":2851,"src":"2102:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2852,"src":"188:2065:11","usedErrors":[]}],"src":"101:2153:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2875],"IERC165":[2887]},"id":2876,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2853,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2854,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2876,"sourceUnit":2888,"src":"124:23:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2856,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2887,"src":"754:7:12"},"id":2857,"nodeType":"InheritanceSpecifier","src":"754:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"149:576:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2875,"linearizedBaseContracts":[2875,2887],"name":"ERC165","nameLocation":"744:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2886],"body":{"id":2873,"nodeType":"Block","src":"920:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"937:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2868,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"957:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2887_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2887_$","typeString":"type(contract IERC165)"}],"id":2867,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2887","typeString":"type(contract IERC165)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2865,"id":2872,"nodeType":"Return","src":"930:47:12"}]},"documentation":{"id":2858,"nodeType":"StructuredDocumentation","src":"768:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2874,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:12","nodeType":"FunctionDefinition","overrides":{"id":2862,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:12"},"parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:12","nodeType":"VariableDeclaration","scope":2874,"src":"856:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2859,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:12"},"returnParameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2874,"src":"914:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:12"},"scope":2875,"src":"829:155:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2876,"src":"726:260:12","usedErrors":[]}],"src":"99:888:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2887]},"id":2888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2877,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"125:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2887,"linearizedBaseContracts":[2887],"name":"IERC165","nameLocation":"415:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"429:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2886,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:13","nodeType":"FunctionDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2881,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:13","nodeType":"VariableDeclaration","scope":2886,"src":"801:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2880,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:13"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2886,"src":"844:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2883,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:13"},"scope":2887,"src":"774:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2888,"src":"405:447:13","usedErrors":[]}],"src":"100:753:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3752]},"id":3753,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2889,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2890,"nodeType":"StructuredDocumentation","src":"128:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3752,"linearizedBaseContracts":[3752],"name":"Math","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2894,"members":[{"id":2891,"name":"Down","nameLocation":"245:4:14","nodeType":"EnumValue","src":"245:4:14"},{"id":2892,"name":"Up","nameLocation":"287:2:14","nodeType":"EnumValue","src":"287:2:14"},{"id":2893,"name":"Zero","nameLocation":"318:4:14","nodeType":"EnumValue","src":"318:4:14"}],"name":"Rounding","nameLocation":"226:8:14","nodeType":"EnumDefinition","src":"221:122:14"},{"body":{"id":2911,"nodeType":"Block","src":"480:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"509:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:14","trueExpression":{"id":2907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"505:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2903,"id":2910,"nodeType":"Return","src":"490:20:14"}]},"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"349:59:14","text":" @dev Returns the largest of two numbers."},"id":2912,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:14","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"a","nameLocation":"434:1:14","nodeType":"VariableDeclaration","scope":2912,"src":"426:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"b","nameLocation":"445:1:14","nodeType":"VariableDeclaration","scope":2912,"src":"437:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:14"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2912,"src":"471:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:14"},"scope":3752,"src":"413:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2929,"nodeType":"Block","src":"655:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:14","trueExpression":{"id":2925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2921,"id":2928,"nodeType":"Return","src":"665:20:14"}]},"documentation":{"id":2913,"nodeType":"StructuredDocumentation","src":"523:60:14","text":" @dev Returns the smallest of two numbers."},"id":2930,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:14","nodeType":"FunctionDefinition","parameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2930,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2930,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2930,"src":"646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:14"},"scope":3752,"src":"588:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2952,"nodeType":"Block","src":"876:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2941,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2939,"id":2951,"nodeType":"Return","src":"923:28:14"}]},"documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"698:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:14","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2933,"mutability":"mutable","name":"a","nameLocation":"830:1:14","nodeType":"VariableDeclaration","scope":2953,"src":"822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"b","nameLocation":"841:1:14","nodeType":"VariableDeclaration","scope":2953,"src":"833:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2934,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:14"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"867:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:14"},"scope":3752,"src":"805:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"1228:123:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"1339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:14","trueExpression":{"hexValue":"30","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2962,"id":2976,"nodeType":"Return","src":"1309:35:14"}]},"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"964:188:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:14","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"a","nameLocation":"1182:1:14","nodeType":"VariableDeclaration","scope":2978,"src":"1174:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"b","nameLocation":"1193:1:14","nodeType":"VariableDeclaration","scope":2978,"src":"1185:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:14"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"1219:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:14"},"scope":3752,"src":"1157:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"1795:3797:14","statements":[{"id":3098,"nodeType":"UncheckedBlock","src":"1805:3781:14","statements":[{"assignments":[2991],"declarations":[{"constant":false,"id":2991,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:14","nodeType":"VariableDeclaration","scope":3098,"src":"2126:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2990,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2992,"nodeType":"VariableDeclarationStatement","src":"2126:13:14"},{"assignments":[2994],"declarations":[{"constant":false,"id":2994,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:14","nodeType":"VariableDeclaration","scope":3098,"src":"2198:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2995,"nodeType":"VariableDeclarationStatement","src":"2198:13:14"},{"AST":{"nodeType":"YulBlock","src":"2278:157:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:14"},"nodeType":"YulFunctionCall","src":"2319:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:14"},"nodeType":"YulFunctionCall","src":"2306:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:14"},"nodeType":"YulFunctionCall","src":"2352:9:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:14"}]},{"nodeType":"YulAssignment","src":"2378:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:14"},"nodeType":"YulFunctionCall","src":"2391:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:14"},"nodeType":"YulFunctionCall","src":"2407:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:14"},"nodeType":"YulFunctionCall","src":"2387:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2991,"isOffset":false,"isSlot":false,"src":"2343:5:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"2399:5:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"2414:5:14","valueSize":1},{"declaration":2994,"isOffset":false,"isSlot":false,"src":"2378:5:14","valueSize":1},{"declaration":2981,"isOffset":false,"isSlot":false,"src":"2313:1:14","valueSize":1},{"declaration":2981,"isOffset":false,"isSlot":false,"src":"2356:1:14","valueSize":1},{"declaration":2983,"isOffset":false,"isSlot":false,"src":"2316:1:14","valueSize":1},{"declaration":2983,"isOffset":false,"isSlot":false,"src":"2359:1:14","valueSize":1}],"id":2996,"nodeType":"InlineAssembly","src":"2269:166:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"2516:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3005,"nodeType":"IfStatement","src":"2512:75:14","trueBody":{"id":3004,"nodeType":"Block","src":"2528:59:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"2553:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3001,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2561:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2989,"id":3003,"nodeType":"Return","src":"2546:26:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"2697:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3008,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"2711:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3011,"nodeType":"ExpressionStatement","src":"2689:28:14"},{"assignments":[3013],"declarations":[{"constant":false,"id":3013,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:14","nodeType":"VariableDeclaration","scope":3098,"src":"2973:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3014,"nodeType":"VariableDeclarationStatement","src":"2973:17:14"},{"AST":{"nodeType":"YulBlock","src":"3013:291:14","statements":[{"nodeType":"YulAssignment","src":"3082:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:14"},"nodeType":"YulFunctionCall","src":"3095:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:14"}]},{"nodeType":"YulAssignment","src":"3202:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:14"},"nodeType":"YulFunctionCall","src":"3222:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:14"},"nodeType":"YulFunctionCall","src":"3211:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:14"}]},{"nodeType":"YulAssignment","src":"3260:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:14"},"nodeType":"YulFunctionCall","src":"3269:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2985,"isOffset":false,"isSlot":false,"src":"3108:11:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"3236:5:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"3260:5:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"3273:5:14","valueSize":1},{"declaration":2994,"isOffset":false,"isSlot":false,"src":"3202:5:14","valueSize":1},{"declaration":2994,"isOffset":false,"isSlot":false,"src":"3215:5:14","valueSize":1},{"declaration":3013,"isOffset":false,"isSlot":false,"src":"3082:9:14","valueSize":1},{"declaration":3013,"isOffset":false,"isSlot":false,"src":"3225:9:14","valueSize":1},{"declaration":3013,"isOffset":false,"isSlot":false,"src":"3280:9:14","valueSize":1},{"declaration":2981,"isOffset":false,"isSlot":false,"src":"3102:1:14","valueSize":1},{"declaration":2983,"isOffset":false,"isSlot":false,"src":"3105:1:14","valueSize":1}],"id":3015,"nodeType":"InlineAssembly","src":"3004:300:14"},{"assignments":[3017],"declarations":[{"constant":false,"id":3017,"mutability":"mutable","name":"twos","nameLocation":"3619:4:14","nodeType":"VariableDeclaration","scope":3098,"src":"3611:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3025,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3626:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:14","subExpression":{"id":3019,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"3642:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:14"},{"AST":{"nodeType":"YulBlock","src":"3681:362:14","statements":[{"nodeType":"YulAssignment","src":"3746:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:14"},"nodeType":"YulFunctionCall","src":"3761:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:14"}]},{"nodeType":"YulAssignment","src":"3850:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:14"},"nodeType":"YulFunctionCall","src":"3859:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:14"}]},{"nodeType":"YulAssignment","src":"3990:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:14"},"nodeType":"YulFunctionCall","src":"4006:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:14"},"nodeType":"YulFunctionCall","src":"4002:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:14"},"nodeType":"YulFunctionCall","src":"3998:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2985,"isOffset":false,"isSlot":false,"src":"3746:11:14","valueSize":1},{"declaration":2985,"isOffset":false,"isSlot":false,"src":"3765:11:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"3850:5:14","valueSize":1},{"declaration":2991,"isOffset":false,"isSlot":false,"src":"3863:5:14","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"3778:4:14","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"3870:4:14","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"3990:4:14","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"4013:4:14","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"4020:4:14","valueSize":1}],"id":3026,"nodeType":"InlineAssembly","src":"3672:371:14"},{"expression":{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3027,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"4109:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"4118:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3029,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"4126:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"nodeType":"ExpressionStatement","src":"4109:21:14"},{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:14","nodeType":"VariableDeclaration","scope":3098,"src":"4448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3041,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3036,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4471:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:14"},{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4719:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3045,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3049,"nodeType":"ExpressionStatement","src":"4704:36:14"},{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4773:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4788:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3053,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3057,"nodeType":"ExpressionStatement","src":"4773:36:14"},{"expression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4843:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3061,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3065,"nodeType":"ExpressionStatement","src":"4843:36:14"},{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4928:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3069,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3073,"nodeType":"ExpressionStatement","src":"4913:36:14"},{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"4998:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3077,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"5012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ExpressionStatement","src":"4983:36:14"},{"expression":{"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3082,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"5054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"5069:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3085,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"5083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3089,"nodeType":"ExpressionStatement","src":"5054:36:14"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"5524:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3091,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"5533:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3092,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"5541:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"5524:24:14"},{"expression":{"id":3096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"5569:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2989,"id":3097,"nodeType":"Return","src":"5562:13:14"}]}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"1357:305:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:14","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"x","nameLocation":"1700:1:14","nodeType":"VariableDeclaration","scope":3100,"src":"1692:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"y","nameLocation":"1719:1:14","nodeType":"VariableDeclaration","scope":3100,"src":"1711:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:14","nodeType":"VariableDeclaration","scope":3100,"src":"1730:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:14"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"result","nameLocation":"1787:6:14","nodeType":"VariableDeclaration","scope":3100,"src":"1779:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:14"},"scope":3752,"src":"1667:3925:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3143,"nodeType":"Block","src":"5872:189:14","statements":[{"assignments":[3116],"declarations":[{"constant":false,"id":3116,"mutability":"mutable","name":"result","nameLocation":"5890:6:14","nodeType":"VariableDeclaration","scope":3143,"src":"5882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3122,"initialValue":{"arguments":[{"id":3118,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5906:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3119,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5909:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3120,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5912:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3100,3144],"referencedDeclaration":3100,"src":"5899:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3123,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"5938:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3124,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"5950:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2894_$","typeString":"type(enum Math.Rounding)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2892,"src":"5950:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"src":"5938:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3128,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"5972:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3129,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"5975:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3130,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"5978:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3127,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"5934:98:14","trueBody":{"id":3139,"nodeType":"Block","src":"5996:36:14","statements":[{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"6010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"6010:11:14"}]}},{"expression":{"id":3141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"6048:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3114,"id":3142,"nodeType":"Return","src":"6041:13:14"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"5598:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3144,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:14","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"x","nameLocation":"5757:1:14","nodeType":"VariableDeclaration","scope":3144,"src":"5749:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"y","nameLocation":"5776:1:14","nodeType":"VariableDeclaration","scope":3144,"src":"5768:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:14","nodeType":"VariableDeclaration","scope":3144,"src":"5787:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:14","nodeType":"VariableDeclaration","scope":3144,"src":"5816:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"typeName":{"id":3109,"nodeType":"UserDefinedTypeName","pathNode":{"id":3108,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"5816:8:14"},"referencedDeclaration":2894,"src":"5816:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:14"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3144,"src":"5863:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:14"},"scope":3752,"src":"5724:337:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3255,"nodeType":"Block","src":"6337:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"6351:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"6347:45:14","trueBody":{"id":3157,"nodeType":"Block","src":"6359:33:14","statements":[{"expression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3151,"id":3156,"nodeType":"Return","src":"6373:8:14"}]}},{"assignments":[3160],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"result","nameLocation":"7079:6:14","nodeType":"VariableDeclaration","scope":3255,"src":"7071:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3169,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7099:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3162,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3424,3460],"referencedDeclaration":3424,"src":"7094:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:14"},{"id":3254,"nodeType":"UncheckedBlock","src":"7508:408:14","statements":[{"expression":{"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7532:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7542:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3173,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7555:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3180,"nodeType":"ExpressionStatement","src":"7532:35:14"},{"expression":{"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3181,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7581:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7591:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3183,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7600:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7604:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3191,"nodeType":"ExpressionStatement","src":"7581:35:14"},{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3192,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7630:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7640:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7649:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"7630:35:14"},{"expression":{"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7689:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7698:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3206,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7702:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3213,"nodeType":"ExpressionStatement","src":"7679:35:14"},{"expression":{"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7728:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7738:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7747:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7751:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3224,"nodeType":"ExpressionStatement","src":"7728:35:14"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7777:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7796:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7800:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"7777:35:14"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7826:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7836:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7845:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7849:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"7826:35:14"},{"expression":{"arguments":[{"id":3248,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7886:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"7894:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"7898:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3247,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"7882:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3151,"id":3253,"nodeType":"Return","src":"7875:30:14"}]}]},"documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"6067:208:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3256,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:14","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"a","nameLocation":"6302:1:14","nodeType":"VariableDeclaration","scope":3256,"src":"6294:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:14"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3256,"src":"6328:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:14"},"scope":3752,"src":"6280:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"8098:161:14","statements":[{"id":3290,"nodeType":"UncheckedBlock","src":"8108:145:14","statements":[{"assignments":[3268],"declarations":[{"constant":false,"id":3268,"mutability":"mutable","name":"result","nameLocation":"8140:6:14","nodeType":"VariableDeclaration","scope":3290,"src":"8132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3272,"initialValue":{"arguments":[{"id":3270,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"8154:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3269,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3256,3292],"referencedDeclaration":3256,"src":"8149:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"8177:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"8187:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3275,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"8199:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2894_$","typeString":"type(enum Math.Rounding)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2892,"src":"8199:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"src":"8187:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"8214:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"8223:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"8232:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:14","trueExpression":{"hexValue":"31","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3266,"id":3289,"nodeType":"Return","src":"8170:72:14"}]}]},"documentation":{"id":3257,"nodeType":"StructuredDocumentation","src":"7928:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:14","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"a","nameLocation":"8044:1:14","nodeType":"VariableDeclaration","scope":3292,"src":"8036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:14","nodeType":"VariableDeclaration","scope":3292,"src":"8047:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"typeName":{"id":3261,"nodeType":"UserDefinedTypeName","pathNode":{"id":3260,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"8047:8:14"},"referencedDeclaration":2894,"src":"8047:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:14"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"8089:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:14"},"scope":3752,"src":"8022:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3423,"nodeType":"Block","src":"8444:922:14","statements":[{"assignments":[3301],"declarations":[{"constant":false,"id":3301,"mutability":"mutable","name":"result","nameLocation":"8462:6:14","nodeType":"VariableDeclaration","scope":3423,"src":"8454:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3303,"initialValue":{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:14"},{"id":3420,"nodeType":"UncheckedBlock","src":"8482:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8510:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3318,"nodeType":"IfStatement","src":"8506:99:14","trueBody":{"id":3317,"nodeType":"Block","src":"8528:77:14","statements":[{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8546:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ExpressionStatement","src":"8546:13:14"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"8577:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"8577:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8622:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3333,"nodeType":"IfStatement","src":"8618:96:14","trueBody":{"id":3332,"nodeType":"Block","src":"8639:75:14","statements":[{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8657:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"8657:12:14"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"8687:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"8687:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8731:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3348,"nodeType":"IfStatement","src":"8727:96:14","trueBody":{"id":3347,"nodeType":"Block","src":"8748:75:14","statements":[{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8766:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3342,"nodeType":"ExpressionStatement","src":"8766:12:14"},{"expression":{"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"8796:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ExpressionStatement","src":"8796:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8840:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3363,"nodeType":"IfStatement","src":"8836:96:14","trueBody":{"id":3362,"nodeType":"Block","src":"8857:75:14","statements":[{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8875:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"8875:12:14"},{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"8905:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"nodeType":"ExpressionStatement","src":"8905:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8949:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3378,"nodeType":"IfStatement","src":"8945:93:14","trueBody":{"id":3377,"nodeType":"Block","src":"8965:73:14","statements":[{"expression":{"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"8983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3372,"nodeType":"ExpressionStatement","src":"8983:11:14"},{"expression":{"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"9012:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3376,"nodeType":"ExpressionStatement","src":"9012:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"9055:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"IfStatement","src":"9051:93:14","trueBody":{"id":3392,"nodeType":"Block","src":"9071:73:14","statements":[{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"9089:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3387,"nodeType":"ExpressionStatement","src":"9089:11:14"},{"expression":{"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3388,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"9118:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3391,"nodeType":"ExpressionStatement","src":"9118:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"9161:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3408,"nodeType":"IfStatement","src":"9157:93:14","trueBody":{"id":3407,"nodeType":"Block","src":"9177:73:14","statements":[{"expression":{"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"9195:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3402,"nodeType":"ExpressionStatement","src":"9195:11:14"},{"expression":{"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"9224:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3406,"nodeType":"ExpressionStatement","src":"9224:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"9267:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"nodeType":"IfStatement","src":"9263:64:14","trueBody":{"id":3418,"nodeType":"Block","src":"9283:44:14","statements":[{"expression":{"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"9301:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3417,"nodeType":"ExpressionStatement","src":"9301:11:14"}]}}]},{"expression":{"id":3421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"9353:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3299,"id":3422,"nodeType":"Return","src":"9346:13:14"}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"8265:113:14","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:14","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"value","nameLocation":"8405:5:14","nodeType":"VariableDeclaration","scope":3424,"src":"8397:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:14"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"8435:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:14"},"scope":3752,"src":"8383:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"9599:165:14","statements":[{"id":3458,"nodeType":"UncheckedBlock","src":"9609:149:14","statements":[{"assignments":[3436],"declarations":[{"constant":false,"id":3436,"mutability":"mutable","name":"result","nameLocation":"9641:6:14","nodeType":"VariableDeclaration","scope":3458,"src":"9633:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3440,"initialValue":{"arguments":[{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"9655:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3437,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3424,3460],"referencedDeclaration":3424,"src":"9650:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"9682:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"9692:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3443,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"9704:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2894_$","typeString":"type(enum Math.Rounding)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2892,"src":"9704:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"src":"9692:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"9724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"9733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:14","trueExpression":{"hexValue":"31","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3434,"id":3457,"nodeType":"Return","src":"9675:72:14"}]}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"9372:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:14","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"value","nameLocation":"9541:5:14","nodeType":"VariableDeclaration","scope":3460,"src":"9533:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:14","nodeType":"VariableDeclaration","scope":3460,"src":"9548:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"9548:8:14"},"referencedDeclaration":2894,"src":"9548:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:14"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3460,"src":"9590:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:14"},"scope":3752,"src":"9519:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3588,"nodeType":"Block","src":"9951:828:14","statements":[{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"result","nameLocation":"9969:6:14","nodeType":"VariableDeclaration","scope":3588,"src":"9961:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3471,"initialValue":{"hexValue":"30","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:14"},{"id":3585,"nodeType":"UncheckedBlock","src":"9989:761:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10017:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"IfStatement","src":"10013:99:14","trueBody":{"id":3487,"nodeType":"Block","src":"10034:78:14","statements":[{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10052:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"nodeType":"ExpressionStatement","src":"10052:15:14"},{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10085:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"10085:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10129:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3505,"nodeType":"IfStatement","src":"10125:99:14","trueBody":{"id":3504,"nodeType":"Block","src":"10146:78:14","statements":[{"expression":{"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10164:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3499,"nodeType":"ExpressionStatement","src":"10164:15:14"},{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3500,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10197:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"nodeType":"ExpressionStatement","src":"10197:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10241:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"IfStatement","src":"10237:99:14","trueBody":{"id":3521,"nodeType":"Block","src":"10258:78:14","statements":[{"expression":{"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10276:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3516,"nodeType":"ExpressionStatement","src":"10276:15:14"},{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10309:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ExpressionStatement","src":"10309:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10353:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3539,"nodeType":"IfStatement","src":"10349:96:14","trueBody":{"id":3538,"nodeType":"Block","src":"10369:76:14","statements":[{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"10387:14:14"},{"expression":{"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10419:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3537,"nodeType":"ExpressionStatement","src":"10419:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10462:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3556,"nodeType":"IfStatement","src":"10458:96:14","trueBody":{"id":3555,"nodeType":"Block","src":"10478:76:14","statements":[{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"10496:14:14"},{"expression":{"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10528:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3554,"nodeType":"ExpressionStatement","src":"10528:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10571:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3573,"nodeType":"IfStatement","src":"10567:96:14","trueBody":{"id":3572,"nodeType":"Block","src":"10587:76:14","statements":[{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10605:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"10605:14:14"},{"expression":{"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10637:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3571,"nodeType":"ExpressionStatement","src":"10637:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"10680:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3584,"nodeType":"IfStatement","src":"10676:64:14","trueBody":{"id":3583,"nodeType":"Block","src":"10696:44:14","statements":[{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10714:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3582,"nodeType":"ExpressionStatement","src":"10714:11:14"}]}}]},{"expression":{"id":3586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"10766:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3467,"id":3587,"nodeType":"Return","src":"10759:13:14"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"9770:114:14","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3589,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:14","nodeType":"FunctionDefinition","parameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"value","nameLocation":"9912:5:14","nodeType":"VariableDeclaration","scope":3589,"src":"9904:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:14"},"returnParameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3589,"src":"9942:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:14"},"scope":3752,"src":"9889:890:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"11014:165:14","statements":[{"id":3623,"nodeType":"UncheckedBlock","src":"11024:149:14","statements":[{"assignments":[3601],"declarations":[{"constant":false,"id":3601,"mutability":"mutable","name":"result","nameLocation":"11056:6:14","nodeType":"VariableDeclaration","scope":3623,"src":"11048:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3600,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3605,"initialValue":{"arguments":[{"id":3603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"11071:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3602,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3589,3625],"referencedDeclaration":3589,"src":"11065:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11098:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"11108:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3608,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"11120:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2894_$","typeString":"type(enum Math.Rounding)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2892,"src":"11120:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"src":"11108:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"11139:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"11148:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:14","trueExpression":{"hexValue":"31","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3599,"id":3622,"nodeType":"Return","src":"11091:71:14"}]}]},"documentation":{"id":3590,"nodeType":"StructuredDocumentation","src":"10785:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:14","nodeType":"FunctionDefinition","parameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"value","nameLocation":"10956:5:14","nodeType":"VariableDeclaration","scope":3625,"src":"10948:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3595,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:14","nodeType":"VariableDeclaration","scope":3625,"src":"10963:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"typeName":{"id":3594,"nodeType":"UserDefinedTypeName","pathNode":{"id":3593,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"10963:8:14"},"referencedDeclaration":2894,"src":"10963:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:14"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"11005:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:14"},"scope":3752,"src":"10933:246:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"11493:600:14","statements":[{"assignments":[3634],"declarations":[{"constant":false,"id":3634,"mutability":"mutable","name":"result","nameLocation":"11511:6:14","nodeType":"VariableDeclaration","scope":3711,"src":"11503:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3636,"initialValue":{"hexValue":"30","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:14"},{"id":3708,"nodeType":"UncheckedBlock","src":"11531:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11559:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"11555:98:14","trueBody":{"id":3650,"nodeType":"Block","src":"11577:76:14","statements":[{"expression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11595:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ExpressionStatement","src":"11595:13:14"},{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"11626:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"11626:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11670:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3666,"nodeType":"IfStatement","src":"11666:95:14","trueBody":{"id":3665,"nodeType":"Block","src":"11687:74:14","statements":[{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11705:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3660,"nodeType":"ExpressionStatement","src":"11705:12:14"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"11735:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"11735:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11778:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3681,"nodeType":"IfStatement","src":"11774:95:14","trueBody":{"id":3680,"nodeType":"Block","src":"11795:74:14","statements":[{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11813:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3675,"nodeType":"ExpressionStatement","src":"11813:12:14"},{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"11843:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3679,"nodeType":"ExpressionStatement","src":"11843:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11886:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3696,"nodeType":"IfStatement","src":"11882:95:14","trueBody":{"id":3695,"nodeType":"Block","src":"11903:74:14","statements":[{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11921:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3690,"nodeType":"ExpressionStatement","src":"11921:12:14"},{"expression":{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"11951:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3694,"nodeType":"ExpressionStatement","src":"11951:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11994:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3707,"nodeType":"IfStatement","src":"11990:64:14","trueBody":{"id":3706,"nodeType":"Block","src":"12010:44:14","statements":[{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"12028:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3705,"nodeType":"ExpressionStatement","src":"12028:11:14"}]}}]},{"expression":{"id":3709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"12080:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3632,"id":3710,"nodeType":"Return","src":"12073:13:14"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"11185:240:14","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:14","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"value","nameLocation":"11454:5:14","nodeType":"VariableDeclaration","scope":3712,"src":"11446:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:14"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"11484:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:14"},"scope":3752,"src":"11430:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"12329:173:14","statements":[{"id":3749,"nodeType":"UncheckedBlock","src":"12339:157:14","statements":[{"assignments":[3724],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"result","nameLocation":"12371:6:14","nodeType":"VariableDeclaration","scope":3749,"src":"12363:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3728,"initialValue":{"arguments":[{"id":3726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"12387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3712,3751],"referencedDeclaration":3712,"src":"12380:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"12414:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"12424:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3731,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"12436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2894_$","typeString":"type(enum Math.Rounding)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2892,"src":"12436:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"src":"12424:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"12457:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"12471:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:14","trueExpression":{"hexValue":"31","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3722,"id":3748,"nodeType":"Return","src":"12407:78:14"}]}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"12099:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:14","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"value","nameLocation":"12271:5:14","nodeType":"VariableDeclaration","scope":3751,"src":"12263:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3718,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:14","nodeType":"VariableDeclaration","scope":3751,"src":"12278:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"},"typeName":{"id":3717,"nodeType":"UserDefinedTypeName","pathNode":{"id":3716,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"12278:8:14"},"referencedDeclaration":2894,"src":"12278:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2894","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:14"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"12320:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:14"},"scope":3752,"src":"12247:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3753,"src":"202:12302:14","usedErrors":[]}],"src":"103:12402:14"},"id":14},"contracts/RandomIpfsNft.sol":{"ast":{"absolutePath":"contracts/RandomIpfsNft.sol","exportedSymbols":{"Address":[2654],"Context":[2676],"ERC165":[2875],"ERC721":[2038],"ERC721URIStorage":[2297],"IERC165":[2887],"IERC721":[2154],"IERC721Metadata":[2324],"IERC721Receiver":[2172],"Math":[3752],"RandomIpfsNft":[4119],"Strings":[2851],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[248]},"id":4120,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3754,"literals":["solidity","0.8",".9"],"nodeType":"PragmaDirective","src":"32:22:15"},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":3755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4120,"sourceUnit":58,"src":"56:61:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":3756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4120,"sourceUnit":249,"src":"118:80:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4120,"sourceUnit":2298,"src":"199:78:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3758,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"305:17:15"},"id":3759,"nodeType":"InheritanceSpecifier","src":"305:17:15"},{"baseName":{"id":3760,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":2297,"src":"324:16:15"},"id":3761,"nodeType":"InheritanceSpecifier","src":"324:16:15"}],"canonicalName":"RandomIpfsNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4119,"linearizedBaseContracts":[4119,2297,2038,2324,2154,2875,2887,2676,57],"name":"RandomIpfsNft","nameLocation":"288:13:15","nodeType":"ContractDefinition","nodes":[{"id":3763,"name":"Ipfs_NotEnoughToMint","nameLocation":"353:20:15","nodeType":"ErrorDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[],"src":"373:2:15"},"src":"347:29:15"},{"id":3765,"name":"ipfs_Not_Owner","nameLocation":"387:14:15","nodeType":"ErrorDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[],"src":"401:2:15"},"src":"381:23:15"},{"id":3767,"name":"ipfs_RangeOutOfBound","nameLocation":"415:20:15","nodeType":"ErrorDefinition","parameters":{"id":3766,"nodeType":"ParameterList","parameters":[],"src":"435:2:15"},"src":"409:29:15"},{"id":3769,"name":"ipfs_TransferFailed","nameLocation":"449:19:15","nodeType":"ErrorDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[],"src":"468:2:15"},"src":"443:28:15"},{"anonymous":false,"id":3775,"name":"requestedNft","nameLocation":"483:12:15","nodeType":"EventDefinition","parameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"512:9:15","nodeType":"VariableDeclaration","scope":3775,"src":"496:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3773,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"531:9:15","nodeType":"VariableDeclaration","scope":3775,"src":"523:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3772,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"495:46:15"},"src":"477:65:15"},{"anonymous":false,"id":3782,"name":"NftMinted","nameLocation":"553:9:15","nodeType":"EventDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"569:8:15","nodeType":"VariableDeclaration","scope":3782,"src":"563:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"},"typeName":{"id":3777,"nodeType":"UserDefinedTypeName","pathNode":{"id":3776,"name":"breed","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"563:5:15"},"referencedDeclaration":3786,"src":"563:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}},"visibility":"internal"},{"constant":false,"id":3780,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"587:6:15","nodeType":"VariableDeclaration","scope":3782,"src":"579:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3779,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"562:32:15"},"src":"547:48:15"},{"canonicalName":"RandomIpfsNft.breed","id":3786,"members":[{"id":3783,"name":"pug","nameLocation":"622:3:15","nodeType":"EnumValue","src":"622:3:15"},{"id":3784,"name":"shibaInu","nameLocation":"635:8:15","nodeType":"EnumValue","src":"635:8:15"},{"id":3785,"name":"St_bernard","nameLocation":"653:10:15","nodeType":"EnumValue","src":"653:10:15"}],"name":"breed","nameLocation":"607:5:15","nodeType":"EnumDefinition","src":"602:67:15"},{"constant":false,"id":3789,"mutability":"immutable","name":"i_vrfCoordinatorv2","nameLocation":"719:18:15","nodeType":"VariableDeclaration","scope":4119,"src":"675:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$248","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":3788,"nodeType":"UserDefinedTypeName","pathNode":{"id":3787,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":248,"src":"675:25:15"},"referencedDeclaration":248,"src":"675:25:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$248","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":3791,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"768:16:15","nodeType":"VariableDeclaration","scope":4119,"src":"743:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3790,"name":"uint64","nodeType":"ElementaryTypeName","src":"743:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":3793,"mutability":"immutable","name":"i_gasLane","nameLocation":"816:9:15","nodeType":"VariableDeclaration","scope":4119,"src":"790:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"790:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3795,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"856:18:15","nodeType":"VariableDeclaration","scope":4119,"src":"831:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3794,"name":"uint32","nodeType":"ElementaryTypeName","src":"831:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":3798,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"904:21:15","nodeType":"VariableDeclaration","scope":4119,"src":"880:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3796,"name":"uint16","nodeType":"ElementaryTypeName","src":"880:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":3801,"mutability":"constant","name":"NUM_WORDS","nameLocation":"959:9:15","nodeType":"VariableDeclaration","scope":4119,"src":"935:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3799,"name":"uint32","nodeType":"ElementaryTypeName","src":"935:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":3805,"mutability":"mutable","name":"s_requestIdToOwner","nameLocation":"1011:18:15","nodeType":"VariableDeclaration","scope":4119,"src":"979:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3804,"keyType":{"id":3802,"name":"uint","nodeType":"ElementaryTypeName","src":"987:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"979:23:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"functionSelector":"0b21a83b","id":3807,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"1051:14:15","nodeType":"VariableDeclaration","scope":4119,"src":"1036:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":3809,"mutability":"immutable","name":"i_owner","nameLocation":"1097:7:15","nodeType":"VariableDeclaration","scope":4119,"src":"1071:33:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3808,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3811,"mutability":"immutable","name":"i_mintFee","nameLocation":"1136:9:15","nodeType":"VariableDeclaration","scope":4119,"src":"1110:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"functionSelector":"8796ba8c","id":3814,"mutability":"mutable","name":"requestIds","nameLocation":"1171:10:15","nodeType":"VariableDeclaration","scope":4119,"src":"1154:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ArrayTypeName","src":"1154:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":true,"id":3817,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1210:16:15","nodeType":"VariableDeclaration","scope":4119,"src":"1187:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint","nodeType":"ElementaryTypeName","src":"1187:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1229:3:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"s_dogTokenUris","nameLocation":"1256:14:15","nodeType":"VariableDeclaration","scope":4119,"src":"1238:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":3818,"name":"string","nodeType":"ElementaryTypeName","src":"1238:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3819,"nodeType":"ArrayTypeName","src":"1238:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"body":{"id":3875,"nodeType":"Block","src":"1509:299:15","statements":[{"expression":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"i_vrfCoordinatorv2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1519:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$248","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3846,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"1566:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3845,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1540:25:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$248_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1540:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$248","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1519:64:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$248","typeString":"contract VRFCoordinatorV2Interface"}},"id":3849,"nodeType":"ExpressionStatement","src":"1519:64:15"},{"expression":{"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3850,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"1593:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3851,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"1612:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1593:33:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3853,"nodeType":"ExpressionStatement","src":"1593:33:15"},{"expression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3854,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"1636:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3855,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1636:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3857,"nodeType":"ExpressionStatement","src":"1636:19:15"},{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3858,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"1665:18:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3859,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"1686:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1665:37:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3861,"nodeType":"ExpressionStatement","src":"1665:37:15"},{"expression":{"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3862,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"1712:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3863,"name":"dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"1729:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"1712:29:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3865,"nodeType":"ExpressionStatement","src":"1712:29:15"},{"expression":{"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3866,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"1751:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3867,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"1763:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1751:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3869,"nodeType":"ExpressionStatement","src":"1751:19:15"},{"expression":{"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3870,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"1780:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1790:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1790:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1780:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3874,"nodeType":"ExpressionStatement","src":"1780:20:15"}]},"id":3876,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3837,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"1455:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3838,"kind":"baseConstructorSpecifier","modifierName":{"id":3836,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1437:17:15"},"nodeType":"ModifierInvocation","src":"1437:35:15"},{"arguments":[{"hexValue":"52616e646f6d497066734e6674","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1485:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1fbb089a5b07471e39eb78029b2acb73dbf0da42c63b98c25847acbba2802684","typeString":"literal_string \"RandomIpfsNft\""},"value":"RandomIpfsNft"},{"hexValue":"52494e","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1502:5:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":3842,"kind":"baseConstructorSpecifier","modifierName":{"id":3839,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1478:6:15"},"nodeType":"ModifierInvocation","src":"1478:30:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1298:16:15","nodeType":"VariableDeclaration","scope":3876,"src":"1290:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"subscriptionId","nameLocation":"1323:14:15","nodeType":"VariableDeclaration","scope":3876,"src":"1316:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3823,"name":"uint64","nodeType":"ElementaryTypeName","src":"1316:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"gasLane","nameLocation":"1347:7:15","nodeType":"VariableDeclaration","scope":3876,"src":"1339:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1339:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1363:16:15","nodeType":"VariableDeclaration","scope":3876,"src":"1356:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3827,"name":"uint32","nodeType":"ElementaryTypeName","src":"1356:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"dogTokenUris","nameLocation":"1406:12:15","nodeType":"VariableDeclaration","scope":3876,"src":"1389:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":3829,"name":"string","nodeType":"ElementaryTypeName","src":"1389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":3831,"length":{"hexValue":"33","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1389:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"mintFee","nameLocation":"1428:7:15","nodeType":"VariableDeclaration","scope":3876,"src":"1420:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1289:147:15"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[],"src":"1509:0:15"},"scope":4119,"src":"1278:530:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3914,"nodeType":"Block","src":"1877:391:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3881,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1890:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1890:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3883,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"1902:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1890:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"nodeType":"IfStatement","src":"1887:79:15","trueBody":{"id":3888,"nodeType":"Block","src":"1912:54:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3885,"name":"Ipfs_NotEnoughToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"1933:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1933:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"RevertStatement","src":"1926:29:15"}]}},{"expression":{"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"1975:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3893,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"2025:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3894,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"2044:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3895,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2070:21:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3896,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"2105:18:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3897,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"2137:9:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3891,"name":"i_vrfCoordinatorv2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"1987:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$248","typeString":"contract VRFCoordinatorV2Interface"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":181,"src":"1987:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1987:160:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1975:172:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3900,"nodeType":"ExpressionStatement","src":"1975:172:15"},{"expression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3901,"name":"s_requestIdToOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"2162:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3903,"indexExpression":{"id":3902,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"2181:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2162:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2194:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2194:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:42:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3907,"nodeType":"ExpressionStatement","src":"2162:42:15"},{"eventCall":{"arguments":[{"id":3909,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"2237:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2248:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2248:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3908,"name":"requestedNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"2224:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2224:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3913,"nodeType":"EmitStatement","src":"2219:41:15"}]},"functionSelector":"aa152491","id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"1823:10:15","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[],"src":"1833:2:15"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"requestId","nameLocation":"1867:9:15","nodeType":"VariableDeclaration","scope":3915,"src":"1859:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1858:19:15"},"scope":4119,"src":"1814:454:15","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[30],"body":{"id":3969,"nodeType":"Block","src":"2367:387:15","statements":[{"assignments":[3925],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"dogOwner","nameLocation":"2386:8:15","nodeType":"VariableDeclaration","scope":3969,"src":"2378:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3924,"name":"address","nodeType":"ElementaryTypeName","src":"2378:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3929,"initialValue":{"baseExpression":{"id":3926,"name":"s_requestIdToOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"2397:18:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3928,"indexExpression":{"id":3927,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"2416:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2397:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2378:48:15"},{"assignments":[3931],"declarations":[{"constant":false,"id":3931,"mutability":"mutable","name":"tokenId","nameLocation":"2441:7:15","nodeType":"VariableDeclaration","scope":3969,"src":"2436:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint","nodeType":"ElementaryTypeName","src":"2436:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3933,"initialValue":{"id":3932,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2451:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2436:29:15"},{"assignments":[3935],"declarations":[{"constant":false,"id":3935,"mutability":"mutable","name":"moddedRng","nameLocation":"2494:9:15","nodeType":"VariableDeclaration","scope":3969,"src":"2486:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3941,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3936,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"2506:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3938,"indexExpression":{"hexValue":"30","id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2518:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2506:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3939,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"2523:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2506:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2486:53:15"},{"assignments":[3944],"declarations":[{"constant":false,"id":3944,"mutability":"mutable","name":"dogBreed","nameLocation":"2556:8:15","nodeType":"VariableDeclaration","scope":3969,"src":"2550:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"},"typeName":{"id":3943,"nodeType":"UserDefinedTypeName","pathNode":{"id":3942,"name":"breed","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"2550:5:15"},"referencedDeclaration":3786,"src":"2550:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}},"visibility":"internal"}],"id":3948,"initialValue":{"arguments":[{"id":3946,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"2587:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3945,"name":"getBreedByModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"2567:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_breed_$3786_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.breed)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2567:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}},"nodeType":"VariableDeclarationStatement","src":"2550:47:15"},{"expression":{"arguments":[{"id":3950,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"2617:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3951,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"2627:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3949,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1606,1635],"referencedDeclaration":1606,"src":"2607:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3953,"nodeType":"ExpressionStatement","src":"2607:28:15"},{"expression":{"arguments":[{"id":3955,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"2658:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3956,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"2667:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":3961,"indexExpression":{"arguments":[{"id":3959,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2690:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2682:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2682:7:15","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2682:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2667:33:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3954,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"2645:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2645:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"2645:56:15"},{"eventCall":{"arguments":[{"id":3965,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"2727:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}},{"id":3966,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"2737:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3964,"name":"NftMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"2717:9:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_breed_$3786_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.breed,address)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2717:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3968,"nodeType":"EmitStatement","src":"2712:34:15"}]},"id":3970,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2282:18:15","nodeType":"FunctionDefinition","overrides":{"id":3922,"nodeType":"OverrideSpecifier","overrides":[],"src":"2359:8:15"},"parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"requestId","nameLocation":"2309:9:15","nodeType":"VariableDeclaration","scope":3970,"src":"2301:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"randomWords","nameLocation":"2337:11:15","nodeType":"VariableDeclaration","scope":3970,"src":"2320:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3919,"nodeType":"ArrayTypeName","src":"2320:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2300:49:15"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[],"src":"2367:0:15"},"scope":4119,"src":"2273:481:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4030,"nodeType":"Block","src":"2838:381:15","statements":[{"assignments":[3979],"declarations":[{"constant":false,"id":3979,"mutability":"mutable","name":"cumilativeSum","nameLocation":"2853:13:15","nodeType":"VariableDeclaration","scope":4030,"src":"2848:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint","nodeType":"ElementaryTypeName","src":"2848:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3981,"initialValue":{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2869:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2848:22:15"},{"assignments":[3987],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"chanceArray","nameLocation":"2895:11:15","nodeType":"VariableDeclaration","scope":4030,"src":"2880:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3985,"name":"uint","nodeType":"ElementaryTypeName","src":"2880:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"length":{"hexValue":"33","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"2880:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":3990,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3988,"name":"getArrayChance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"2909:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2909:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"2880:45:15"},{"body":{"id":4025,"nodeType":"Block","src":"2982:192:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"2999:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4003,"name":"cumilativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3011:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2999:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4005,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3972,"src":"3028:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4006,"name":"cumilativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3040:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":4007,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"3056:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4009,"indexExpression":{"id":4008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"3068:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3056:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3040:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3028:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2999:71:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"2996:123:15","trueBody":{"id":4017,"nodeType":"Block","src":"3071:48:15","statements":[{"expression":{"arguments":[{"id":4014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"3102:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4013,"name":"breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"3096:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_breed_$3786_$","typeString":"type(enum RandomIpfsNft.breed)"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3096:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}},"functionReturnParameters":3977,"id":4016,"nodeType":"Return","src":"3089:15:15"}]}},{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4019,"name":"cumilativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3132:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4020,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"3149:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4022,"indexExpression":{"id":4021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"3161:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3132:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4024,"nodeType":"ExpressionStatement","src":"3132:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"2952:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3996,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"2956:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2956:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2952:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4026,"initializationExpression":{"assignments":[3992],"declarations":[{"constant":false,"id":3992,"mutability":"mutable","name":"i","nameLocation":"2944:1:15","nodeType":"VariableDeclaration","scope":4026,"src":"2939:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint","nodeType":"ElementaryTypeName","src":"2939:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3994,"initialValue":{"hexValue":"30","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2939:10:15"},"loopExpression":{"expression":{"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2977:3:15","subExpression":{"id":3999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"2977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4001,"nodeType":"ExpressionStatement","src":"2977:3:15"},"nodeType":"ForStatement","src":"2935:239:15"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4027,"name":"ipfs_RangeOutOfBound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"3190:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3190:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4029,"nodeType":"RevertStatement","src":"3183:29:15"}]},"functionSelector":"30d6b0f1","id":4031,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedByModdedRng","nameLocation":"2773:19:15","nodeType":"FunctionDefinition","parameters":{"id":3973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3972,"mutability":"mutable","name":"moddedRng","nameLocation":"2801:9:15","nodeType":"VariableDeclaration","scope":4031,"src":"2793:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3971,"name":"uint256","nodeType":"ElementaryTypeName","src":"2793:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2792:19:15"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4031,"src":"2832:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"},"typeName":{"id":3975,"nodeType":"UserDefinedTypeName","pathNode":{"id":3974,"name":"breed","nodeType":"IdentifierPath","referencedDeclaration":3786,"src":"2832:5:15"},"referencedDeclaration":3786,"src":"2832:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_breed_$3786","typeString":"enum RandomIpfsNft.breed"}},"visibility":"internal"}],"src":"2831:7:15"},"scope":4119,"src":"2764:455:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4043,"nodeType":"Block","src":"3288:50:15","statements":[{"expression":{"components":[{"hexValue":"3130","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3306:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3310:2:15","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":4040,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"3314:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4041,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3305:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":4037,"id":4042,"nodeType":"Return","src":"3298:33:15"}]},"functionSelector":"db169c69","id":4044,"implemented":true,"kind":"function","modifiers":[],"name":"getArrayChance","nameLocation":"3236:14:15","nodeType":"FunctionDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[],"src":"3250:2:15"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4044,"src":"3273:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":4033,"name":"uint","nodeType":"ElementaryTypeName","src":"3273:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4035,"length":{"hexValue":"33","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3278:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3273:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"3272:16:15"},"scope":4119,"src":"3227:111:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4055,"nodeType":"Block","src":"3364:77:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3377:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3377:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4048,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"3391:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3377:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4053,"nodeType":"IfStatement","src":"3374:49:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4050,"name":"ipfs_Not_Owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"3407:14:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3407:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4052,"nodeType":"RevertStatement","src":"3400:23:15"}},{"id":4054,"nodeType":"PlaceholderStatement","src":"3433:1:15"}]},"id":4056,"name":"onlyOwner","nameLocation":"3353:9:15","nodeType":"ModifierDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"3362:2:15"},"src":"3344:97:15","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"3492:200:15","statements":[{"assignments":[4062],"declarations":[{"constant":false,"id":4062,"mutability":"mutable","name":"amount","nameLocation":"3510:6:15","nodeType":"VariableDeclaration","scope":4089,"src":"3502:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3502:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4068,"initialValue":{"expression":{"arguments":[{"id":4065,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3527:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$4119","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$4119","typeString":"contract RandomIpfsNft"}],"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3519:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4063,"name":"address","nodeType":"ElementaryTypeName","src":"3519:7:15","typeDescriptions":{}}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3519:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3519:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3502:38:15"},{"assignments":[4070,null],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"success","nameLocation":"3556:7:15","nodeType":"VariableDeclaration","scope":4089,"src":"3551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4069,"name":"bool","nodeType":"ElementaryTypeName","src":"3551:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4081,"initialValue":{"arguments":[{"hexValue":"","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3608:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":4073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3576:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3576:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3568:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4071,"name":"address","nodeType":"ElementaryTypeName","src":"3568:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3568:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3568:24:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4077,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4062,"src":"3600:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3568:39:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3568:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3550:61:15"},{"condition":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3624:8:15","subExpression":{"id":4082,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3625:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4088,"nodeType":"IfStatement","src":"3621:65:15","trueBody":{"id":4087,"nodeType":"Block","src":"3633:53:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4084,"name":"ipfs_TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"3654:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3654:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4086,"nodeType":"RevertStatement","src":"3647:28:15"}]}}]},"functionSelector":"3ccfd60b","id":4090,"implemented":true,"kind":"function","modifiers":[{"id":4059,"kind":"modifierInvocation","modifierName":{"id":4058,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":4056,"src":"3467:9:15"},"nodeType":"ModifierInvocation","src":"3467:9:15"}],"name":"withdraw","nameLocation":"3456:8:15","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[],"src":"3464:2:15"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[],"src":"3492:0:15"},"scope":4119,"src":"3447:245:15","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4097,"nodeType":"Block","src":"3752:41:15","statements":[{"expression":{"id":4095,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3773:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4094,"id":4096,"nodeType":"Return","src":"3766:16:15"}]},"functionSelector":"7a5caab3","id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"3711:10:15","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[],"src":"3721:2:15"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4098,"src":"3744:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:9:15"},"scope":4119,"src":"3702:91:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4109,"nodeType":"Block","src":"3873:53:15","statements":[{"expression":{"baseExpression":{"id":4105,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3820,"src":"3894:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4107,"indexExpression":{"id":4106,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"3909:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3894:21:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4104,"id":4108,"nodeType":"Return","src":"3887:28:15"}]},"functionSelector":"3af25975","id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenUris","nameLocation":"3811:15:15","nodeType":"FunctionDefinition","parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"index","nameLocation":"3832:5:15","nodeType":"VariableDeclaration","scope":4110,"src":"3827:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint","nodeType":"ElementaryTypeName","src":"3827:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3826:12:15"},"returnParameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"3859:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4102,"name":"string","nodeType":"ElementaryTypeName","src":"3859:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3858:15:15"},"scope":4119,"src":"3802:124:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4117,"nodeType":"Block","src":"3990:46:15","statements":[{"expression":{"id":4115,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"4011:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4114,"id":4116,"nodeType":"Return","src":"4004:21:15"}]},"functionSelector":"6e02007d","id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"3944:15:15","nodeType":"FunctionDefinition","parameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"3959:2:15"},"returnParameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"3982:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3982:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3981:9:15"},"scope":4119,"src":"3935:101:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4120,"src":"279:3774:15","usedErrors":[8,3763,3765,3767,3769]}],"src":"32:4022:15"},"id":15}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidRandomWords","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"ConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"ConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"consumerIsAdded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"},{"internalType":"uint256[]","name":"_words","type":"uint256[]"}],"name":"fulfillRandomWordsWithOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getConfig","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackWeiPerUnitLink","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeConfig","outputs":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill","_words":"user-provided random words"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_389":{"entryPoint":null,"id":389,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":165,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":160,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":189,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1228:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:65:16","statements":[{"nodeType":"YulAssignment","src":"388:49:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:16","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:38:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:109:16"},{"body":{"nodeType":"YulBlock","src":"491:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:16"},"nodeType":"YulFunctionCall","src":"549:12:16"},"nodeType":"YulExpressionStatement","src":"549:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:16"},"nodeType":"YulFunctionCall","src":"521:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:16"},"nodeType":"YulFunctionCall","src":"511:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:16"},"nodeType":"YulFunctionCall","src":"504:42:16"},"nodeType":"YulIf","src":"501:62:16"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:16","type":""}],"src":"449:120:16"},{"body":{"nodeType":"YulBlock","src":"637:79:16","statements":[{"nodeType":"YulAssignment","src":"647:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:16"},"nodeType":"YulFunctionCall","src":"656:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:16"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:16"},"nodeType":"YulFunctionCall","src":"678:32:16"},"nodeType":"YulExpressionStatement","src":"678:32:16"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:16","type":""}],"src":"575:141:16"},{"body":{"nodeType":"YulBlock","src":"814:411:16","statements":[{"body":{"nodeType":"YulBlock","src":"860:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"862:77:16"},"nodeType":"YulFunctionCall","src":"862:79:16"},"nodeType":"YulExpressionStatement","src":"862:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:16"},"nodeType":"YulFunctionCall","src":"831:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:16"},"nodeType":"YulFunctionCall","src":"827:32:16"},"nodeType":"YulIf","src":"824:119:16"},{"nodeType":"YulBlock","src":"953:127:16","statements":[{"nodeType":"YulVariableDeclaration","src":"968:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"982:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"972:6:16","type":""}]},{"nodeType":"YulAssignment","src":"997:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1042:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1053:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1038:3:16"},"nodeType":"YulFunctionCall","src":"1038:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1062:7:16"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1007:30:16"},"nodeType":"YulFunctionCall","src":"1007:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:16"}]}]},{"nodeType":"YulBlock","src":"1090:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1105:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1119:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1135:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1180:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1191:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1176:3:16"},"nodeType":"YulFunctionCall","src":"1176:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1200:7:16"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1145:30:16"},"nodeType":"YulFunctionCall","src":"1145:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1135:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"776:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"787:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"799:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"807:6:16","type":""}],"src":"722:503:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e0604052606461ffff1660c09061ffff168152506001805560646002553480156200002a57600080fd5b5060405162002dcf38038062002dcf8339818101604052810190620000509190620000ee565b816bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1681525050806bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff1681525050505062000135565b600080fd5b60006bffffffffffffffffffffffff82169050919050565b620000c881620000a5565b8114620000d457600080fd5b50565b600081519050620000e881620000bd565b92915050565b60008060408385031215620001085762000107620000a0565b5b60006200011885828601620000d7565b92505060206200012b85828601620000d7565b9150509250929050565b60805160a05160c051612c556200017a60003960008181610cb70152610e0201526000818161079f01526115240152600081816107e401526109f30152612c556000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c806382359740116100ad578063afc69b5311610071578063afc69b5314610317578063c3f909d414610333578063d7ae1d3014610354578063e82ad7d414610370578063ed5eb06d146103a05761012b565b806382359740146102705780639f87fad71461028c578063a21a23e4146102a8578063a410347f146102c6578063a47c7696146102e45761012b565b80635d3b1d30116100f45780635d3b1d30146101c45780635fbbc0d2146101f457806364d51a2a1461021a5780637341c10c14610238578063808974ff146102545761012b565b80620122911461013057806304c357cb1461015057806308e3898e1461016c578063356dac71146101885780633d18651e146101a6575b600080fd5b6101386103d0565b60405161014793929190611dd1565b60405180910390f35b61016a60048036038101906101659190611ec1565b610430565b005b61018660048036038101906101819190612090565b61046b565b005b6101906109e2565b60405161019d9190612118565b60405180910390f35b6101ae6109f1565b6040516101bb919061215a565b60405180910390f35b6101de60048036038101906101d991906121f9565b610a15565b6040516101eb9190612283565b60405180910390f35b6101fc610c76565b604051610211999897969594939291906122bc565b60405180910390f35b610222610cb5565b60405161022f9190612349565b60405180910390f35b610252600480360381019061024d9190611ec1565b610cd9565b005b61026e60048036038101906102699190612364565b610f6d565b005b61028a600480360381019061028591906123a4565b610fc5565b005b6102a660048036038101906102a19190611ec1565b611000565b005b6102b061136d565b6040516102bd91906123e0565b60405180910390f35b6102ce611522565b6040516102db919061215a565b60405180910390f35b6102fe60048036038101906102f991906123a4565b611546565b60405161030e94939291906124c8565b60405180910390f35b610331600480360381019061032c9190612540565b61174c565b005b61033b611917565b60405161034b9493929190612580565b60405180910390f35b61036e60048036038101906103699190611ec1565b611937565b005b61038a600480360381019061038591906123a4565b611b5a565b60405161039791906125e0565b60405180910390f35b6103ba60048036038101906103b59190611ec1565b611b97565b6040516103c791906125e0565b60405180910390f35b60008060606003621e8480600067ffffffffffffffff8111156103f6576103f5611f4d565b5b6040519080825280602002602001820160405280156104245781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290612658565b60405180910390fd5b60005a905060006005600086815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156104e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df906126c4565b60405180910390fd5b6000600560008681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008351141561066057806040015163ffffffff1667ffffffffffffffff8111156105b6576105b5611f4d565b5b6040519080825280602002602001820160405280156105e45781602001602082028036833780820191505090505b50925060005b816040015163ffffffff1681101561065a57858160405160200161060f9291906126e4565b6040516020818303038152906040528051906020012060001c84828151811061063b5761063a61270d565b5b60200260200101818152505080806106529061276b565b9150506105ea565b506106a5565b806040015163ffffffff168351146106a4576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b87866040516024016106c3929190612872565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff1683604051610754919061291c565b60006040518083038160008787f1925050503d8060008114610792576040519150601f19603f3d011682016040523d82523d6000602084013e610797565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a876107d89190612933565b6107e29190612967565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff1661081b91906129c1565b9050806bffffffffffffffffffffffff1660036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1610156108b9576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff1661090e9190612a17565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600560008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a83856040516109cf93929190612a4b565b60405180910390a2505050505050505050565b6000660e35fa931a0000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008433610a238282611b97565b610a59576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b0a576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000815480929190610b1f9061276b565b919050559050600060026000815480929190610b3a9061276b565b91905055905060405180606001604052808a67ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff168152506005600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168967ffffffffffffffff168b7f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858d8d8d604051610c5e959493929190612a82565b60405180910390a48194505050505095945050505050565b6000806000806000806000806000620186a080620186a080620186a0600080600080985098509850985098509850985098509850909192939495969798565b7f000000000000000000000000000000000000000000000000000000000000000081565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d90576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0057806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401610df79190612ad5565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff16600460008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805490501415610e88576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e928484611b97565b15610e9c57610f67565b600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc384604051610f5e9190612ad5565b60405180910390a25b50505050565b610fc18282600067ffffffffffffffff811115610f8d57610f8c611f4d565b5b604051908082528060200260200182016040528015610fbb5781602001602082028036833780820191505090505b5061046b565b5050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790612658565b60405180910390fd5b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110b7576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112757806040517fd8a3fb5200000000000000000000000000000000000000000000000000000000815260040161111e9190612ad5565b60405180910390fd5b83836111338282611b97565b611169576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008867ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060005b8180549050811015611321578673ffffffffffffffffffffffffffffffffffffffff168282815481106111cd576111cc61270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561130e57600082600184805490506112289190612933565b815481106112395761123861270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061127a5761127961270d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806112d3576112d2612af0565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550611321565b80806113199061276b565b915050611197565b508667ffffffffffffffff167ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc8760405161135c9190612ad5565b60405180910390a250505050505050565b600080600081819054906101000a900467ffffffffffffffff168092919061139490612b1f565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf336040516115009190612ad5565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156115fe576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008967ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208080548060200260200160405190810160405280929190818152602001828054801561173657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116ec575b5050505050905093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117fd576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166118959190612b50565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88284846118fc9190612b50565b60405161190a929190612bcd565b60405180910390a2505050565b6000806000806004622625a0610a8c618205935093509350935090919293565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119ee576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a5e57806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611a559190612ad5565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16604051611adc929190612bf6565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8e90612658565b60405180910390fd5b600080600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c4157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bf7575b5050505050905060005b8151811015611cc0578373ffffffffffffffffffffffffffffffffffffffff16828281518110611c7e57611c7d61270d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611cad57600192505050611cc7565b8080611cb89061276b565b915050611c4b565b5060009150505b92915050565b600061ffff82169050919050565b611ce481611ccd565b82525050565b600063ffffffff82169050919050565b611d0381611cea565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611d4881611d35565b82525050565b6000611d5a8383611d3f565b60208301905092915050565b6000602082019050919050565b6000611d7e82611d09565b611d888185611d14565b9350611d9383611d25565b8060005b83811015611dc4578151611dab8882611d4e565b9750611db683611d66565b925050600181019050611d97565b5085935050505092915050565b6000606082019050611de66000830186611cdb565b611df36020830185611cfa565b8181036040830152611e058184611d73565b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b611e4081611e23565b8114611e4b57600080fd5b50565b600081359050611e5d81611e37565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e8e82611e63565b9050919050565b611e9e81611e83565b8114611ea957600080fd5b50565b600081359050611ebb81611e95565b92915050565b60008060408385031215611ed857611ed7611e19565b5b6000611ee685828601611e4e565b9250506020611ef785828601611eac565b9150509250929050565b6000819050919050565b611f1481611f01565b8114611f1f57600080fd5b50565b600081359050611f3181611f0b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f8582611f3c565b810181811067ffffffffffffffff82111715611fa457611fa3611f4d565b5b80604052505050565b6000611fb7611e0f565b9050611fc38282611f7c565b919050565b600067ffffffffffffffff821115611fe357611fe2611f4d565b5b602082029050602081019050919050565b600080fd5b600061200c61200784611fc8565b611fad565b9050808382526020820190506020840283018581111561202f5761202e611ff4565b5b835b8181101561205857806120448882611f22565b845260208401935050602081019050612031565b5050509392505050565b600082601f83011261207757612076611f37565b5b8135612087848260208601611ff9565b91505092915050565b6000806000606084860312156120a9576120a8611e19565b5b60006120b786828701611f22565b93505060206120c886828701611eac565b925050604084013567ffffffffffffffff8111156120e9576120e8611e1e565b5b6120f586828701612062565b9150509250925092565b6000819050919050565b612112816120ff565b82525050565b600060208201905061212d6000830184612109565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61215481612133565b82525050565b600060208201905061216f600083018461214b565b92915050565b61217e81611d35565b811461218957600080fd5b50565b60008135905061219b81612175565b92915050565b6121aa81611ccd565b81146121b557600080fd5b50565b6000813590506121c7816121a1565b92915050565b6121d681611cea565b81146121e157600080fd5b50565b6000813590506121f3816121cd565b92915050565b600080600080600060a0868803121561221557612214611e19565b5b60006122238882890161218c565b955050602061223488828901611e4e565b9450506040612245888289016121b8565b9350506060612256888289016121e4565b9250506080612267888289016121e4565b9150509295509295909350565b61227d81611f01565b82525050565b60006020820190506122986000830184612274565b92915050565b600062ffffff82169050919050565b6122b68161229e565b82525050565b6000610120820190506122d2600083018c611cfa565b6122df602083018b611cfa565b6122ec604083018a611cfa565b6122f96060830189611cfa565b6123066080830188611cfa565b61231360a08301876122ad565b61232060c08301866122ad565b61232d60e08301856122ad565b61233b6101008301846122ad565b9a9950505050505050505050565b600060208201905061235e6000830184611cdb565b92915050565b6000806040838503121561237b5761237a611e19565b5b600061238985828601611f22565b925050602061239a85828601611eac565b9150509250929050565b6000602082840312156123ba576123b9611e19565b5b60006123c884828501611e4e565b91505092915050565b6123da81611e23565b82525050565b60006020820190506123f560008301846123d1565b92915050565b61240481611e83565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61243f81611e83565b82525050565b60006124518383612436565b60208301905092915050565b6000602082019050919050565b60006124758261240a565b61247f8185612415565b935061248a83612426565b8060005b838110156124bb5781516124a28882612445565b97506124ad8361245d565b92505060018101905061248e565b5085935050505092915050565b60006080820190506124dd600083018761214b565b6124ea60208301866123d1565b6124f760408301856123fb565b8181036060830152612509818461246a565b905095945050505050565b61251d81612133565b811461252857600080fd5b50565b60008135905061253a81612514565b92915050565b6000806040838503121561255757612556611e19565b5b600061256585828601611e4e565b92505060206125768582860161252b565b9150509250929050565b60006080820190506125956000830187611cdb565b6125a26020830186611cfa565b6125af6040830185611cfa565b6125bc6060830184611cfa565b95945050505050565b60008115159050919050565b6125da816125c5565b82525050565b60006020820190506125f560008301846125d1565b92915050565b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b6000612642600f836125fb565b915061264d8261260c565b602082019050919050565b6000602082019050818103600083015261267181612635565b9050919050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b60006126ae6013836125fb565b91506126b982612678565b602082019050919050565b600060208201905081810360008301526126dd816126a1565b9050919050565b60006040820190506126f96000830185612274565b6127066020830184612274565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061277682611f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127a9576127a861273c565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127e981611f01565b82525050565b60006127fb83836127e0565b60208301905092915050565b6000602082019050919050565b600061281f826127b4565b61282981856127bf565b9350612834836127d0565b8060005b8381101561286557815161284c88826127ef565b975061285783612807565b925050600181019050612838565b5085935050505092915050565b60006040820190506128876000830185612274565b81810360208301526128998184612814565b90509392505050565b600081519050919050565b600081905092915050565b60005b838110156128d65780820151818401526020810190506128bb565b838111156128e5576000848401525b50505050565b60006128f6826128a2565b61290081856128ad565b93506129108185602086016128b8565b80840191505092915050565b600061292882846128eb565b915081905092915050565b600061293e82611f01565b915061294983611f01565b92508282101561295c5761295b61273c565b5b828203905092915050565b600061297282611f01565b915061297d83611f01565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129b6576129b561273c565b5b828202905092915050565b60006129cc82611f01565b91506129d783611f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a0c57612a0b61273c565b5b828201905092915050565b6000612a2282612133565b9150612a2d83612133565b925082821015612a4057612a3f61273c565b5b828203905092915050565b6000606082019050612a606000830186612274565b612a6d602083018561214b565b612a7a60408301846125d1565b949350505050565b600060a082019050612a976000830188612274565b612aa46020830187612274565b612ab16040830186611cdb565b612abe6060830185611cfa565b612acb6080830184611cfa565b9695505050505050565b6000602082019050612aea60008301846123fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612b2a82611e23565b915067ffffffffffffffff821415612b4557612b4461273c565b5b600182019050919050565b6000612b5b82612133565b9150612b6683612133565b9250826bffffffffffffffffffffffff03821115612b8757612b8661273c565b5b828201905092915050565b6000819050919050565b6000612bb7612bb2612bad84612133565b612b92565b611f01565b9050919050565b612bc781612b9c565b82525050565b6000604082019050612be26000830185612bbe565b612bef6020830184612bbe565b9392505050565b6000604082019050612c0b60008301856123fb565b612c186020830184612bbe565b939250505056fea26469706673582212209ec8bf9b554c0e3c3674cd2e4e3cf8e74730d2169c8e9f10840fb177e0e577be64736f6c63430008090033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0xC0 SWAP1 PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DCF CODESIZE SUB DUP1 PUSH3 0x2DCF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x50 SWAP2 SWAP1 PUSH3 0xEE JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x135 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC8 DUP2 PUSH3 0xA5 JUMP JUMPDEST DUP2 EQ PUSH3 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xE8 DUP2 PUSH3 0xBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x108 JUMPI PUSH3 0x107 PUSH3 0xA0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x118 DUP6 DUP3 DUP7 ADD PUSH3 0xD7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x12B DUP6 DUP3 DUP7 ADD PUSH3 0xD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2C55 PUSH3 0x17A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xCB7 ADD MSTORE PUSH2 0xE02 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x79F ADD MSTORE PUSH2 0x1524 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7E4 ADD MSTORE PUSH2 0x9F3 ADD MSTORE PUSH2 0x2C55 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAFC69B53 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xED5EB06D EQ PUSH2 0x3A0 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x2E4 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x5D3B1D30 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x254 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x1A6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2090 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1937 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3F5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x424 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x65A JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60F SWAP3 SWAP2 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x652 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP PUSH2 0x6A5 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x797 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP8 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xE35FA931A0000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER PUSH2 0xA23 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB1F SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB3A SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0xC5E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE00 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE92 DUP5 DUP5 PUSH2 0x1B97 JUMP JUMPDEST ISZERO PUSH2 0xE9C JUMPI PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x752EAD9F4536EC1319EE3A5A604E1D65EDED22E0924251552BA14AE4FAA1BBC3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFC1 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8C PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFBB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x46B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1127 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x1133 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1321 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x127A JUMPI PUSH2 0x1279 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x2AF0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x1321 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1319 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1197 JUMP JUMPDEST POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xF9BC9D5B5733D904409DEF43A5ECC888DBDAC9A95687780D8FD489D3BB3813FC DUP8 PUSH1 0x40 MLOAD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1736 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x16EC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH3 0x2625A0 PUSH2 0xA8C PUSH2 0x8205 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A5E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1ADC SWAP3 SWAP2 SWAP1 PUSH2 0x2BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8E SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BF7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1CC0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CAD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1CC7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1CB8 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C4B JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE4 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D03 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP4 DUP4 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7E DUP3 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x1D88 DUP2 DUP6 PUSH2 0x1D14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D93 DUP4 PUSH2 0x1D25 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI DUP2 MLOAD PUSH2 0x1DAB DUP9 DUP3 PUSH2 0x1D4E JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB6 DUP4 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D97 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1DF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E05 DUP2 DUP5 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E40 DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9E DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBB DUP2 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F14 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F31 DUP2 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F85 DUP3 PUSH2 0x1F3C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FA4 JUMPI PUSH2 0x1FA3 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH2 0x1FC3 DUP3 DUP3 PUSH2 0x1F7C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE3 JUMPI PUSH2 0x1FE2 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200C PUSH2 0x2007 DUP5 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1FAD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2058 JUMPI DUP1 PUSH2 0x2044 DUP9 DUP3 PUSH2 0x1F22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2031 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1F37 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2087 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x20A8 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B7 DUP7 DUP3 DUP8 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20C8 DUP7 DUP3 DUP8 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E9 JUMPI PUSH2 0x20E8 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x20F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2112 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP2 EQ PUSH2 0x2189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x219B DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21AA DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21C7 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D6 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP2 EQ PUSH2 0x21E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F3 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2223 DUP9 DUP3 DUP10 ADD PUSH2 0x218C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2234 DUP9 DUP3 DUP10 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2245 DUP9 DUP3 DUP10 ADD PUSH2 0x21B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2256 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2267 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x227D DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2298 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B6 DUP2 PUSH2 0x229E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x22D2 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22DF PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22EC PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22F9 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2306 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2313 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x2320 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x232D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x233B PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x22AD JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237B JUMPI PUSH2 0x237A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2389 DUP6 DUP3 DUP7 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x239A DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23C8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2404 DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243F DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2451 DUP4 DUP4 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x247F DUP2 DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP4 POP PUSH2 0x248A DUP4 PUSH2 0x2426 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24BB JUMPI DUP2 MLOAD PUSH2 0x24A2 DUP9 DUP3 PUSH2 0x2445 JUMP JUMPDEST SWAP8 POP PUSH2 0x24AD DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x248E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24DD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x24EA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x24F7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x251D DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP2 EQ PUSH2 0x2528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253A DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH2 0x2556 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2565 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2576 DUP6 DUP3 DUP7 ADD PUSH2 0x252B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2595 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x25A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25BC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25DA DUP2 PUSH2 0x25C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2642 PUSH1 0xF DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x264D DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2671 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE PUSH1 0x13 DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26DD DUP2 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2706 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2776 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A8 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E9 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FB DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281F DUP3 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x2829 DUP2 DUP6 PUSH2 0x27BF JUMP JUMPDEST SWAP4 POP PUSH2 0x2834 DUP4 PUSH2 0x27D0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2865 JUMPI DUP2 MLOAD PUSH2 0x284C DUP9 DUP3 PUSH2 0x27EF JUMP JUMPDEST SWAP8 POP PUSH2 0x2857 DUP4 PUSH2 0x2807 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2838 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2887 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2899 DUP2 DUP5 PUSH2 0x2814 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28BB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F6 DUP3 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x2900 DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST SWAP4 POP PUSH2 0x2910 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28B8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2928 DUP3 DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293E DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2949 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x297D DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29B6 JUMPI PUSH2 0x29B5 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CC DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D7 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A22 DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2D DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2A6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x2A7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2A97 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AA4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AB1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x2ABE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2ACB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B2A DUP3 PUSH2 0x1E23 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2B45 JUMPI PUSH2 0x2B44 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B66 DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB7 PUSH2 0x2BB2 PUSH2 0x2BAD DUP5 PUSH2 0x2133 JUMP JUMPDEST PUSH2 0x2B92 JUMP JUMPDEST PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC7 DUP2 PUSH2 0x2B9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BE2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x2BEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST PUSH2 0x2C18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xC8 0xBF SWAP12 SSTORE 0x4C 0xE EXTCODECOPY CALLDATASIZE PUSH21 0xCD2E4E3CF8E74730D2169C8E9F10840FB177E0E577 0xBE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"254:9107:3:-:0;;;435:3;395:43;;;;;;;;;1404:1;1378:27;;1433:3;1409:27;;1826:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1894:8;1883:19;;;;;;;;;;1925:13;1908:30;;;;;;;;;;1826:117;;254:9107;;88:117:16;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:503::-;799:6;807;856:2;844:9;835:7;831:23;827:32;824:119;;;862:79;;:::i;:::-;824:119;982:1;1007:63;1062:7;1053:6;1042:9;1038:22;1007:63;:::i;:::-;997:73;;953:127;1119:2;1145:63;1200:7;1191:6;1180:9;1176:22;1145:63;:::i;:::-;1135:73;;1090:128;722:503;;;;;:::o;254:9107:3:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_257":{"entryPoint":2545,"id":257,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_259":{"entryPoint":5410,"id":259,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_262":{"entryPoint":3253,"id":262,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_1097":{"entryPoint":4037,"id":1097,"parameterSlots":1,"returnSlots":0},"@addConsumer_943":{"entryPoint":3289,"id":943,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_846":{"entryPoint":6455,"id":846,"parameterSlots":2,"returnSlots":0},"@consumerIsAdded_432":{"entryPoint":7063,"id":432,"parameterSlots":2,"returnSlots":1},"@createSubscription_775":{"entryPoint":4973,"id":775,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWordsWithOverride_632":{"entryPoint":1131,"id":632,"parameterSlots":3,"returnSlots":0},"@fulfillRandomWords_469":{"entryPoint":3949,"id":469,"parameterSlots":2,"returnSlots":0},"@fundSubscription_677":{"entryPoint":5964,"id":677,"parameterSlots":2,"returnSlots":0},"@getConfig_1032":{"entryPoint":6423,"id":1032,"parameterSlots":0,"returnSlots":4},"@getFallbackWeiPerUnitLink_1073":{"entryPoint":2530,"id":1073,"parameterSlots":0,"returnSlots":1},"@getFeeConfig_1065":{"entryPoint":3190,"id":1065,"parameterSlots":0,"returnSlots":9},"@getRequestConfig_901":{"entryPoint":976,"id":901,"parameterSlots":0,"returnSlots":3},"@getSubscription_819":{"entryPoint":5446,"id":819,"parameterSlots":1,"returnSlots":4},"@pendingRequestExists_1110":{"entryPoint":7002,"id":1110,"parameterSlots":1,"returnSlots":1},"@removeConsumer_1014":{"entryPoint":4096,"id":1014,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_747":{"entryPoint":2581,"id":747,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_1086":{"entryPoint":1072,"id":1086,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8185,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":8632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":8676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":7758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":9515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":8697,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":9060,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8336,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint64":{"entryPoint":9124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":7873,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":9536,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":9285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":7502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":9270,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9211,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":9322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":7539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9681,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":7487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8457,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":9781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":9889,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":7387,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24_fromStack":{"entryPoint":8877,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10208,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8820,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":7418,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":9169,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":11198,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":8523,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11254,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":8472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9924,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":9033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7633,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":9600,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10354,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9956,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":10882,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":10827,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed":{"entryPoint":8892,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":9184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":8538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9416,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11213,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":8109,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7695,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8136,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9254,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7461,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10192,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9226,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7433,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10164,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":10402,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9309,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7526,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10247,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":9237,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":7444,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10175,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10413,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10689,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":11088,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10599,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10547,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":10775,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7811,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9669,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7477,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":8447,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":7373,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7779,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint24":{"entryPoint":8862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":7402,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7715,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":8499,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":11164,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":10424,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":8060,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11154,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10091,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":11039,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10044,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10992,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9997,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8013,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7991,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8180,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7710,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7705,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7996,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":9740,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":9848,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7829,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8565,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":8609,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7947,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":8653,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":7735,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":9492,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28291:16","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:16","statements":[{"nodeType":"YulAssignment","src":"61:29:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:16"},"nodeType":"YulFunctionCall","src":"72:18:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:16"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:16","type":""}],"src":"7:89:16"},{"body":{"nodeType":"YulBlock","src":"165:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:16"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:16"},"nodeType":"YulFunctionCall","src":"187:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:16"},"nodeType":"YulFunctionCall","src":"175:36:16"},"nodeType":"YulExpressionStatement","src":"175:36:16"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:16","type":""}],"src":"102:115:16"},{"body":{"nodeType":"YulBlock","src":"267:49:16","statements":[{"nodeType":"YulAssignment","src":"277:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:16"},"nodeType":"YulFunctionCall","src":"288:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:16","type":""}],"src":"223:93:16"},{"body":{"nodeType":"YulBlock","src":"385:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:16"},"nodeType":"YulFunctionCall","src":"407:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:16"},"nodeType":"YulFunctionCall","src":"395:36:16"},"nodeType":"YulExpressionStatement","src":"395:36:16"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:16","type":""}],"src":"322:115:16"},{"body":{"nodeType":"YulBlock","src":"517:40:16","statements":[{"nodeType":"YulAssignment","src":"528:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"544:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:16"},"nodeType":"YulFunctionCall","src":"538:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"528:6:16"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"500:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"510:6:16","type":""}],"src":"443:114:16"},{"body":{"nodeType":"YulBlock","src":"674:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"691:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"696:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"684:6:16"},"nodeType":"YulFunctionCall","src":"684:19:16"},"nodeType":"YulExpressionStatement","src":"684:19:16"},{"nodeType":"YulAssignment","src":"712:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"731:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"736:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:16"},"nodeType":"YulFunctionCall","src":"727:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"712:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"646:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"651:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"662:11:16","type":""}],"src":"563:184:16"},{"body":{"nodeType":"YulBlock","src":"825:60:16","statements":[{"nodeType":"YulAssignment","src":"835:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"843:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"835:4:16"}]},{"nodeType":"YulAssignment","src":"856:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"868:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"873:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:16"},"nodeType":"YulFunctionCall","src":"864:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"856:4:16"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"812:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"820:4:16","type":""}],"src":"753:132:16"},{"body":{"nodeType":"YulBlock","src":"936:32:16","statements":[{"nodeType":"YulAssignment","src":"946:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"957:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"946:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"918:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"928:7:16","type":""}],"src":"891:77:16"},{"body":{"nodeType":"YulBlock","src":"1029:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1046:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1051:17:16"},"nodeType":"YulFunctionCall","src":"1051:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1039:6:16"},"nodeType":"YulFunctionCall","src":"1039:37:16"},"nodeType":"YulExpressionStatement","src":"1039:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1017:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1024:3:16","type":""}],"src":"974:108:16"},{"body":{"nodeType":"YulBlock","src":"1168:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"1220:3:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1178:33:16"},"nodeType":"YulFunctionCall","src":"1178:46:16"},"nodeType":"YulExpressionStatement","src":"1178:46:16"},{"nodeType":"YulAssignment","src":"1233:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1251:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1256:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:16"},"nodeType":"YulFunctionCall","src":"1247:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1233:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1141:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1149:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1157:10:16","type":""}],"src":"1088:179:16"},{"body":{"nodeType":"YulBlock","src":"1348:38:16","statements":[{"nodeType":"YulAssignment","src":"1358:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1370:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1375:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:16"},"nodeType":"YulFunctionCall","src":"1366:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"1358:4:16"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1335:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1343:4:16","type":""}],"src":"1273:113:16"},{"body":{"nodeType":"YulBlock","src":"1546:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1556:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1618:5:16"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1570:47:16"},"nodeType":"YulFunctionCall","src":"1570:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1560:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1633:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1714:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1719:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1640:73:16"},"nodeType":"YulFunctionCall","src":"1640:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1633:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"1735:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1750:49:16"},"nodeType":"YulFunctionCall","src":"1750:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"1739:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1815:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"1829:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1819:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1905:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1919:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1946:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1940:5:16"},"nodeType":"YulFunctionCall","src":"1940:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"1923:13:16","type":""}]},{"nodeType":"YulAssignment","src":"1966:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2017:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2032:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1973:43:16"},"nodeType":"YulFunctionCall","src":"1973:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1966:3:16"}]},{"nodeType":"YulAssignment","src":"2049:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2112:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2059:52:16"},"nodeType":"YulFunctionCall","src":"2059:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2049:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1864:2:16"},"nodeType":"YulFunctionCall","src":"1864:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1878:18:16","statements":[{"nodeType":"YulAssignment","src":"1880:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1889:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:16"},"nodeType":"YulFunctionCall","src":"1885:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1880:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1849:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1851:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1860:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1855:1:16","type":""}]}]},"src":"1845:284:16"},{"nodeType":"YulAssignment","src":"2138:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"2145:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2138:3:16"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1525:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1532:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1541:3:16","type":""}],"src":"1422:732:16"},{"body":{"nodeType":"YulBlock","src":"2360:385:16","statements":[{"nodeType":"YulAssignment","src":"2370:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2393:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:16"},"nodeType":"YulFunctionCall","src":"2378:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2370:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2448:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2472:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:16"},"nodeType":"YulFunctionCall","src":"2457:17:16"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2406:41:16"},"nodeType":"YulFunctionCall","src":"2406:69:16"},"nodeType":"YulExpressionStatement","src":"2406:69:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2527:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2536:3:16"},"nodeType":"YulFunctionCall","src":"2536:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"2485:41:16"},"nodeType":"YulFunctionCall","src":"2485:70:16"},"nodeType":"YulExpressionStatement","src":"2485:70:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2587:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:16"},"nodeType":"YulFunctionCall","src":"2572:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2596:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2592:3:16"},"nodeType":"YulFunctionCall","src":"2592:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:16"},"nodeType":"YulFunctionCall","src":"2565:48:16"},"nodeType":"YulExpressionStatement","src":"2565:48:16"},{"nodeType":"YulAssignment","src":"2622:116:16","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2724:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2733:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2630:93:16"},"nodeType":"YulFunctionCall","src":"2630:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2622:4:16"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2328:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2336:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2344:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2355:4:16","type":""}],"src":"2160:585:16"},{"body":{"nodeType":"YulBlock","src":"2791:35:16","statements":[{"nodeType":"YulAssignment","src":"2801:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2817:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2811:5:16"},"nodeType":"YulFunctionCall","src":"2811:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2801:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2784:6:16","type":""}],"src":"2751:75:16"},{"body":{"nodeType":"YulBlock","src":"2921:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:16"},"nodeType":"YulFunctionCall","src":"2931:12:16"},"nodeType":"YulExpressionStatement","src":"2931:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2832:117:16"},{"body":{"nodeType":"YulBlock","src":"3044:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3061:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3054:6:16"},"nodeType":"YulFunctionCall","src":"3054:12:16"},"nodeType":"YulExpressionStatement","src":"3054:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2955:117:16"},{"body":{"nodeType":"YulBlock","src":"3122:57:16","statements":[{"nodeType":"YulAssignment","src":"3132:41:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3154:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3143:3:16"},"nodeType":"YulFunctionCall","src":"3143:30:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3132:7:16"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3104:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3114:7:16","type":""}],"src":"3078:101:16"},{"body":{"nodeType":"YulBlock","src":"3227:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"3283:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:16"},"nodeType":"YulFunctionCall","src":"3285:12:16"},"nodeType":"YulExpressionStatement","src":"3285:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3250:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3274:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3257:16:16"},"nodeType":"YulFunctionCall","src":"3257:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3247:2:16"},"nodeType":"YulFunctionCall","src":"3247:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3240:6:16"},"nodeType":"YulFunctionCall","src":"3240:42:16"},"nodeType":"YulIf","src":"3237:62:16"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3220:5:16","type":""}],"src":"3185:120:16"},{"body":{"nodeType":"YulBlock","src":"3362:86:16","statements":[{"nodeType":"YulAssignment","src":"3372:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3394:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3381:12:16"},"nodeType":"YulFunctionCall","src":"3381:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3372:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3436:5:16"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"3410:25:16"},"nodeType":"YulFunctionCall","src":"3410:32:16"},"nodeType":"YulExpressionStatement","src":"3410:32:16"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3340:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3348:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3356:5:16","type":""}],"src":"3311:137:16"},{"body":{"nodeType":"YulBlock","src":"3499:81:16","statements":[{"nodeType":"YulAssignment","src":"3509:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3524:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3531:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3520:3:16"},"nodeType":"YulFunctionCall","src":"3520:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3509:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3481:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3491:7:16","type":""}],"src":"3454:126:16"},{"body":{"nodeType":"YulBlock","src":"3631:51:16","statements":[{"nodeType":"YulAssignment","src":"3641:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3670:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3652:17:16"},"nodeType":"YulFunctionCall","src":"3652:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3641:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3613:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3623:7:16","type":""}],"src":"3586:96:16"},{"body":{"nodeType":"YulBlock","src":"3731:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3788:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3797:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3800:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3790:6:16"},"nodeType":"YulFunctionCall","src":"3790:12:16"},"nodeType":"YulExpressionStatement","src":"3790:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3754:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3761:17:16"},"nodeType":"YulFunctionCall","src":"3761:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3751:2:16"},"nodeType":"YulFunctionCall","src":"3751:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3744:6:16"},"nodeType":"YulFunctionCall","src":"3744:43:16"},"nodeType":"YulIf","src":"3741:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:16","type":""}],"src":"3688:122:16"},{"body":{"nodeType":"YulBlock","src":"3868:87:16","statements":[{"nodeType":"YulAssignment","src":"3878:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3900:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3887:12:16"},"nodeType":"YulFunctionCall","src":"3887:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3878:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3943:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3916:26:16"},"nodeType":"YulFunctionCall","src":"3916:33:16"},"nodeType":"YulExpressionStatement","src":"3916:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3846:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3854:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3862:5:16","type":""}],"src":"3816:139:16"},{"body":{"nodeType":"YulBlock","src":"4043:390:16","statements":[{"body":{"nodeType":"YulBlock","src":"4089:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4091:77:16"},"nodeType":"YulFunctionCall","src":"4091:79:16"},"nodeType":"YulExpressionStatement","src":"4091:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4064:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4060:3:16"},"nodeType":"YulFunctionCall","src":"4060:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4056:3:16"},"nodeType":"YulFunctionCall","src":"4056:32:16"},"nodeType":"YulIf","src":"4053:119:16"},{"nodeType":"YulBlock","src":"4182:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4197:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4211:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4201:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4226:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4271:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:16"},"nodeType":"YulFunctionCall","src":"4256:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4280:7:16"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4236:19:16"},"nodeType":"YulFunctionCall","src":"4236:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4226:6:16"}]}]},{"nodeType":"YulBlock","src":"4308:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4337:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4327:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4353:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4388:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4399:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:16"},"nodeType":"YulFunctionCall","src":"4384:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4408:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4363:20:16"},"nodeType":"YulFunctionCall","src":"4363:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4353:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4016:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4028:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4036:6:16","type":""}],"src":"3961:472:16"},{"body":{"nodeType":"YulBlock","src":"4484:32:16","statements":[{"nodeType":"YulAssignment","src":"4494:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4505:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4494:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4466:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4476:7:16","type":""}],"src":"4439:77:16"},{"body":{"nodeType":"YulBlock","src":"4565:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4622:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4631:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4634:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4624:6:16"},"nodeType":"YulFunctionCall","src":"4624:12:16"},"nodeType":"YulExpressionStatement","src":"4624:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4588:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4613:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4595:17:16"},"nodeType":"YulFunctionCall","src":"4595:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4585:2:16"},"nodeType":"YulFunctionCall","src":"4585:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4578:6:16"},"nodeType":"YulFunctionCall","src":"4578:43:16"},"nodeType":"YulIf","src":"4575:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4558:5:16","type":""}],"src":"4522:122:16"},{"body":{"nodeType":"YulBlock","src":"4702:87:16","statements":[{"nodeType":"YulAssignment","src":"4712:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4734:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4721:12:16"},"nodeType":"YulFunctionCall","src":"4721:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4712:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4777:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4750:26:16"},"nodeType":"YulFunctionCall","src":"4750:33:16"},"nodeType":"YulExpressionStatement","src":"4750:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4680:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4688:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4696:5:16","type":""}],"src":"4650:139:16"},{"body":{"nodeType":"YulBlock","src":"4884:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4901:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4904:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4894:6:16"},"nodeType":"YulFunctionCall","src":"4894:12:16"},"nodeType":"YulExpressionStatement","src":"4894:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4795:117:16"},{"body":{"nodeType":"YulBlock","src":"4966:54:16","statements":[{"nodeType":"YulAssignment","src":"4976:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4994:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5001:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:16"},"nodeType":"YulFunctionCall","src":"4990:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5010:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5006:3:16"},"nodeType":"YulFunctionCall","src":"5006:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4986:3:16"},"nodeType":"YulFunctionCall","src":"4986:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4976:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4949:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4959:6:16","type":""}],"src":"4918:102:16"},{"body":{"nodeType":"YulBlock","src":"5054:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5071:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5074:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5064:6:16"},"nodeType":"YulFunctionCall","src":"5064:88:16"},"nodeType":"YulExpressionStatement","src":"5064:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5168:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5171:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5161:6:16"},"nodeType":"YulFunctionCall","src":"5161:15:16"},"nodeType":"YulExpressionStatement","src":"5161:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5192:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5195:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5185:6:16"},"nodeType":"YulFunctionCall","src":"5185:15:16"},"nodeType":"YulExpressionStatement","src":"5185:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5026:180:16"},{"body":{"nodeType":"YulBlock","src":"5255:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5265:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5287:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5317:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5295:21:16"},"nodeType":"YulFunctionCall","src":"5295:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5283:3:16"},"nodeType":"YulFunctionCall","src":"5283:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5269:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5434:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5436:16:16"},"nodeType":"YulFunctionCall","src":"5436:18:16"},"nodeType":"YulExpressionStatement","src":"5436:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5377:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"5389:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5374:2:16"},"nodeType":"YulFunctionCall","src":"5374:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5413:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5425:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5410:2:16"},"nodeType":"YulFunctionCall","src":"5410:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5371:2:16"},"nodeType":"YulFunctionCall","src":"5371:62:16"},"nodeType":"YulIf","src":"5368:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5472:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5476:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5465:6:16"},"nodeType":"YulFunctionCall","src":"5465:22:16"},"nodeType":"YulExpressionStatement","src":"5465:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5241:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"5249:4:16","type":""}],"src":"5212:281:16"},{"body":{"nodeType":"YulBlock","src":"5540:88:16","statements":[{"nodeType":"YulAssignment","src":"5550:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5560:18:16"},"nodeType":"YulFunctionCall","src":"5560:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5550:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5609:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"5617:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5589:19:16"},"nodeType":"YulFunctionCall","src":"5589:33:16"},"nodeType":"YulExpressionStatement","src":"5589:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5524:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5533:6:16","type":""}],"src":"5499:129:16"},{"body":{"nodeType":"YulBlock","src":"5716:229:16","statements":[{"body":{"nodeType":"YulBlock","src":"5821:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5823:16:16"},"nodeType":"YulFunctionCall","src":"5823:18:16"},"nodeType":"YulExpressionStatement","src":"5823:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5793:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5801:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5790:2:16"},"nodeType":"YulFunctionCall","src":"5790:30:16"},"nodeType":"YulIf","src":"5787:56:16"},{"nodeType":"YulAssignment","src":"5853:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5865:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5873:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5861:3:16"},"nodeType":"YulFunctionCall","src":"5861:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5853:4:16"}]},{"nodeType":"YulAssignment","src":"5915:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5927:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5933:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:16"},"nodeType":"YulFunctionCall","src":"5923:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5915:4:16"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5700:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5711:4:16","type":""}],"src":"5634:311:16"},{"body":{"nodeType":"YulBlock","src":"6040:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6057:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6060:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6050:6:16"},"nodeType":"YulFunctionCall","src":"6050:12:16"},"nodeType":"YulExpressionStatement","src":"6050:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5951:117:16"},{"body":{"nodeType":"YulBlock","src":"6193:608:16","statements":[{"nodeType":"YulAssignment","src":"6203:90:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6285:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6228:56:16"},"nodeType":"YulFunctionCall","src":"6228:64:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6212:15:16"},"nodeType":"YulFunctionCall","src":"6212:81:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6203:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"6302:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"6313:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6306:3:16","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6335:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"6342:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:16"},"nodeType":"YulFunctionCall","src":"6328:21:16"},"nodeType":"YulExpressionStatement","src":"6328:21:16"},{"nodeType":"YulAssignment","src":"6358:23:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6369:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6376:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6365:3:16"},"nodeType":"YulFunctionCall","src":"6365:16:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6358:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"6391:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6409:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6421:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6429:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6417:3:16"},"nodeType":"YulFunctionCall","src":"6417:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6405:3:16"},"nodeType":"YulFunctionCall","src":"6405:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6395:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6463:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6477:77:16"},"nodeType":"YulFunctionCall","src":"6477:79:16"},"nodeType":"YulExpressionStatement","src":"6477:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6450:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"6458:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6447:2:16"},"nodeType":"YulFunctionCall","src":"6447:15:16"},"nodeType":"YulIf","src":"6444:122:16"},{"body":{"nodeType":"YulBlock","src":"6651:144:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6666:21:16","value":{"name":"src","nodeType":"YulIdentifier","src":"6684:3:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6670:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6708:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6734:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"6746:3:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6713:20:16"},"nodeType":"YulFunctionCall","src":"6713:37:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6701:6:16"},"nodeType":"YulFunctionCall","src":"6701:50:16"},"nodeType":"YulExpressionStatement","src":"6701:50:16"},{"nodeType":"YulAssignment","src":"6764:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6775:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6780:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:16"},"nodeType":"YulFunctionCall","src":"6771:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6764:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6604:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6609:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6601:2:16"},"nodeType":"YulFunctionCall","src":"6601:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6617:25:16","statements":[{"nodeType":"YulAssignment","src":"6619:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6630:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6635:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6626:3:16"},"nodeType":"YulFunctionCall","src":"6626:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6619:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6579:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6581:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"6592:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6585:3:16","type":""}]}]},"src":"6575:220:16"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6163:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6171:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6179:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6187:5:16","type":""}],"src":"6091:710:16"},{"body":{"nodeType":"YulBlock","src":"6901:293:16","statements":[{"body":{"nodeType":"YulBlock","src":"6950:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6952:77:16"},"nodeType":"YulFunctionCall","src":"6952:79:16"},"nodeType":"YulExpressionStatement","src":"6952:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6929:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6937:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:16"},"nodeType":"YulFunctionCall","src":"6925:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"6944:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6921:3:16"},"nodeType":"YulFunctionCall","src":"6921:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6914:6:16"},"nodeType":"YulFunctionCall","src":"6914:35:16"},"nodeType":"YulIf","src":"6911:122:16"},{"nodeType":"YulVariableDeclaration","src":"7042:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7069:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7056:12:16"},"nodeType":"YulFunctionCall","src":"7056:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7046:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7085:103:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7161:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7169:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:16"},"nodeType":"YulFunctionCall","src":"7157:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"7176:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"7184:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7094:62:16"},"nodeType":"YulFunctionCall","src":"7094:94:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7085:5:16"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6879:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6887:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6895:5:16","type":""}],"src":"6824:370:16"},{"body":{"nodeType":"YulBlock","src":"7325:704:16","statements":[{"body":{"nodeType":"YulBlock","src":"7371:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7373:77:16"},"nodeType":"YulFunctionCall","src":"7373:79:16"},"nodeType":"YulExpressionStatement","src":"7373:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7346:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7355:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7342:3:16"},"nodeType":"YulFunctionCall","src":"7342:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7338:3:16"},"nodeType":"YulFunctionCall","src":"7338:32:16"},"nodeType":"YulIf","src":"7335:119:16"},{"nodeType":"YulBlock","src":"7464:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7479:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7493:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7483:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7508:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7543:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7554:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7539:3:16"},"nodeType":"YulFunctionCall","src":"7539:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7563:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7518:20:16"},"nodeType":"YulFunctionCall","src":"7518:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7508:6:16"}]}]},{"nodeType":"YulBlock","src":"7591:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7606:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7620:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7610:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7636:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7682:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:16"},"nodeType":"YulFunctionCall","src":"7667:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7691:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7646:20:16"},"nodeType":"YulFunctionCall","src":"7646:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7636:6:16"}]}]},{"nodeType":"YulBlock","src":"7719:303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7734:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7776:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:16"},"nodeType":"YulFunctionCall","src":"7761:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7748:12:16"},"nodeType":"YulFunctionCall","src":"7748:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7738:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7827:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7829:77:16"},"nodeType":"YulFunctionCall","src":"7829:79:16"},"nodeType":"YulExpressionStatement","src":"7829:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7799:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7807:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7796:2:16"},"nodeType":"YulFunctionCall","src":"7796:30:16"},"nodeType":"YulIf","src":"7793:117:16"},{"nodeType":"YulAssignment","src":"7924:88:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7995:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7980:3:16"},"nodeType":"YulFunctionCall","src":"7980:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8004:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7934:45:16"},"nodeType":"YulFunctionCall","src":"7934:78:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7924:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7279:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7290:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7302:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7310:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7318:6:16","type":""}],"src":"7200:829:16"},{"body":{"nodeType":"YulBlock","src":"8079:32:16","statements":[{"nodeType":"YulAssignment","src":"8089:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"8100:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8089:7:16"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8061:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8071:7:16","type":""}],"src":"8035:76:16"},{"body":{"nodeType":"YulBlock","src":"8180:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8197:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8219:5:16"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"8202:16:16"},"nodeType":"YulFunctionCall","src":"8202:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8190:6:16"},"nodeType":"YulFunctionCall","src":"8190:36:16"},"nodeType":"YulExpressionStatement","src":"8190:36:16"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8168:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8175:3:16","type":""}],"src":"8117:115:16"},{"body":{"nodeType":"YulBlock","src":"8334:122:16","statements":[{"nodeType":"YulAssignment","src":"8344:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8356:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8367:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8352:3:16"},"nodeType":"YulFunctionCall","src":"8352:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8344:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8422:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8435:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8446:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8431:3:16"},"nodeType":"YulFunctionCall","src":"8431:17:16"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"8380:41:16"},"nodeType":"YulFunctionCall","src":"8380:69:16"},"nodeType":"YulExpressionStatement","src":"8380:69:16"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8306:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8318:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8329:4:16","type":""}],"src":"8238:218:16"},{"body":{"nodeType":"YulBlock","src":"8506:65:16","statements":[{"nodeType":"YulAssignment","src":"8516:49:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8531:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8538:26:16","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8527:3:16"},"nodeType":"YulFunctionCall","src":"8527:38:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8516:7:16"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8488:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8498:7:16","type":""}],"src":"8462:109:16"},{"body":{"nodeType":"YulBlock","src":"8640:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8657:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8679:5:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"8662:16:16"},"nodeType":"YulFunctionCall","src":"8662:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8650:6:16"},"nodeType":"YulFunctionCall","src":"8650:36:16"},"nodeType":"YulExpressionStatement","src":"8650:36:16"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8628:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8635:3:16","type":""}],"src":"8577:115:16"},{"body":{"nodeType":"YulBlock","src":"8794:122:16","statements":[{"nodeType":"YulAssignment","src":"8804:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8816:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8827:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8812:3:16"},"nodeType":"YulFunctionCall","src":"8812:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8804:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8882:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8895:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8906:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8891:3:16"},"nodeType":"YulFunctionCall","src":"8891:17:16"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"8840:41:16"},"nodeType":"YulFunctionCall","src":"8840:69:16"},"nodeType":"YulExpressionStatement","src":"8840:69:16"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8766:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8778:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8789:4:16","type":""}],"src":"8698:218:16"},{"body":{"nodeType":"YulBlock","src":"8965:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"9022:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9031:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9034:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9024:6:16"},"nodeType":"YulFunctionCall","src":"9024:12:16"},"nodeType":"YulExpressionStatement","src":"9024:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8988:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9013:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8995:17:16"},"nodeType":"YulFunctionCall","src":"8995:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8985:2:16"},"nodeType":"YulFunctionCall","src":"8985:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8978:6:16"},"nodeType":"YulFunctionCall","src":"8978:43:16"},"nodeType":"YulIf","src":"8975:63:16"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8958:5:16","type":""}],"src":"8922:122:16"},{"body":{"nodeType":"YulBlock","src":"9102:87:16","statements":[{"nodeType":"YulAssignment","src":"9112:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9134:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9121:12:16"},"nodeType":"YulFunctionCall","src":"9121:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9112:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9177:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9150:26:16"},"nodeType":"YulFunctionCall","src":"9150:33:16"},"nodeType":"YulExpressionStatement","src":"9150:33:16"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9080:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9088:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9096:5:16","type":""}],"src":"9050:139:16"},{"body":{"nodeType":"YulBlock","src":"9237:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"9293:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9302:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9305:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9295:6:16"},"nodeType":"YulFunctionCall","src":"9295:12:16"},"nodeType":"YulExpressionStatement","src":"9295:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9260:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9284:5:16"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"9267:16:16"},"nodeType":"YulFunctionCall","src":"9267:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9257:2:16"},"nodeType":"YulFunctionCall","src":"9257:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9250:6:16"},"nodeType":"YulFunctionCall","src":"9250:42:16"},"nodeType":"YulIf","src":"9247:62:16"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9230:5:16","type":""}],"src":"9195:120:16"},{"body":{"nodeType":"YulBlock","src":"9372:86:16","statements":[{"nodeType":"YulAssignment","src":"9382:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9404:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9391:12:16"},"nodeType":"YulFunctionCall","src":"9391:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9382:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9446:5:16"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"9420:25:16"},"nodeType":"YulFunctionCall","src":"9420:32:16"},"nodeType":"YulExpressionStatement","src":"9420:32:16"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9350:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9358:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9366:5:16","type":""}],"src":"9321:137:16"},{"body":{"nodeType":"YulBlock","src":"9506:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"9562:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9571:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9574:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9564:6:16"},"nodeType":"YulFunctionCall","src":"9564:12:16"},"nodeType":"YulExpressionStatement","src":"9564:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9529:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9553:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"9536:16:16"},"nodeType":"YulFunctionCall","src":"9536:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9526:2:16"},"nodeType":"YulFunctionCall","src":"9526:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9519:6:16"},"nodeType":"YulFunctionCall","src":"9519:42:16"},"nodeType":"YulIf","src":"9516:62:16"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9499:5:16","type":""}],"src":"9464:120:16"},{"body":{"nodeType":"YulBlock","src":"9641:86:16","statements":[{"nodeType":"YulAssignment","src":"9651:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9673:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9660:12:16"},"nodeType":"YulFunctionCall","src":"9660:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9651:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9715:5:16"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"9689:25:16"},"nodeType":"YulFunctionCall","src":"9689:32:16"},"nodeType":"YulExpressionStatement","src":"9689:32:16"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9619:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9627:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9635:5:16","type":""}],"src":"9590:137:16"},{"body":{"nodeType":"YulBlock","src":"9863:773:16","statements":[{"body":{"nodeType":"YulBlock","src":"9910:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9912:77:16"},"nodeType":"YulFunctionCall","src":"9912:79:16"},"nodeType":"YulExpressionStatement","src":"9912:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9884:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9893:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9880:3:16"},"nodeType":"YulFunctionCall","src":"9880:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9905:3:16","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9876:3:16"},"nodeType":"YulFunctionCall","src":"9876:33:16"},"nodeType":"YulIf","src":"9873:120:16"},{"nodeType":"YulBlock","src":"10003:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10018:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10032:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10022:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10047:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10082:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10093:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10078:3:16"},"nodeType":"YulFunctionCall","src":"10078:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10102:7:16"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10057:20:16"},"nodeType":"YulFunctionCall","src":"10057:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10047:6:16"}]}]},{"nodeType":"YulBlock","src":"10130:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10145:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10159:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10149:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10175:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10209:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10220:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10205:3:16"},"nodeType":"YulFunctionCall","src":"10205:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10229:7:16"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"10185:19:16"},"nodeType":"YulFunctionCall","src":"10185:52:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10175:6:16"}]}]},{"nodeType":"YulBlock","src":"10257:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10272:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10286:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10276:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10302:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10336:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10347:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10332:3:16"},"nodeType":"YulFunctionCall","src":"10332:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10356:7:16"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"10312:19:16"},"nodeType":"YulFunctionCall","src":"10312:52:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10302:6:16"}]}]},{"nodeType":"YulBlock","src":"10384:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10399:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10413:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10403:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10429:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:16"},"nodeType":"YulFunctionCall","src":"10459:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:16"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10439:19:16"},"nodeType":"YulFunctionCall","src":"10439:52:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10429:6:16"}]}]},{"nodeType":"YulBlock","src":"10511:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10526:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10540:3:16","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10530:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10557:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10591:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10602:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10587:3:16"},"nodeType":"YulFunctionCall","src":"10587:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10611:7:16"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10567:19:16"},"nodeType":"YulFunctionCall","src":"10567:52:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10557:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9801:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9812:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9824:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9832:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9840:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9848:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9856:6:16","type":""}],"src":"9733:903:16"},{"body":{"nodeType":"YulBlock","src":"10707:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10724:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10747:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10729:17:16"},"nodeType":"YulFunctionCall","src":"10729:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10717:6:16"},"nodeType":"YulFunctionCall","src":"10717:37:16"},"nodeType":"YulExpressionStatement","src":"10717:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10695:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10702:3:16","type":""}],"src":"10642:118:16"},{"body":{"nodeType":"YulBlock","src":"10864:124:16","statements":[{"nodeType":"YulAssignment","src":"10874:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10897:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10882:3:16"},"nodeType":"YulFunctionCall","src":"10882:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10874:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10954:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10967:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10978:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10963:3:16"},"nodeType":"YulFunctionCall","src":"10963:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10910:43:16"},"nodeType":"YulFunctionCall","src":"10910:71:16"},"nodeType":"YulExpressionStatement","src":"10910:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10836:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10848:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10859:4:16","type":""}],"src":"10766:222:16"},{"body":{"nodeType":"YulBlock","src":"11038:47:16","statements":[{"nodeType":"YulAssignment","src":"11048:31:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11063:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"11070:8:16","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11059:3:16"},"nodeType":"YulFunctionCall","src":"11059:20:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11048:7:16"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11020:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11030:7:16","type":""}],"src":"10994:91:16"},{"body":{"nodeType":"YulBlock","src":"11154:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11171:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11193:5:16"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"11176:16:16"},"nodeType":"YulFunctionCall","src":"11176:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11164:6:16"},"nodeType":"YulFunctionCall","src":"11164:36:16"},"nodeType":"YulExpressionStatement","src":"11164:36:16"}]},"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11142:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11149:3:16","type":""}],"src":"11091:115:16"},{"body":{"nodeType":"YulBlock","src":"11516:768:16","statements":[{"nodeType":"YulAssignment","src":"11526:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11538:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11549:3:16","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11534:3:16"},"nodeType":"YulFunctionCall","src":"11534:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11526:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11605:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11618:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11629:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11614:3:16"},"nodeType":"YulFunctionCall","src":"11614:17:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11563:41:16"},"nodeType":"YulFunctionCall","src":"11563:69:16"},"nodeType":"YulExpressionStatement","src":"11563:69:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11684:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11708:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11693:3:16"},"nodeType":"YulFunctionCall","src":"11693:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11642:41:16"},"nodeType":"YulFunctionCall","src":"11642:70:16"},"nodeType":"YulExpressionStatement","src":"11642:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11764:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11777:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11788:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:16"},"nodeType":"YulFunctionCall","src":"11773:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11722:41:16"},"nodeType":"YulFunctionCall","src":"11722:70:16"},"nodeType":"YulExpressionStatement","src":"11722:70:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11844:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11857:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11868:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11853:3:16"},"nodeType":"YulFunctionCall","src":"11853:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11802:41:16"},"nodeType":"YulFunctionCall","src":"11802:70:16"},"nodeType":"YulExpressionStatement","src":"11802:70:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11924:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11937:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11948:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11933:3:16"},"nodeType":"YulFunctionCall","src":"11933:19:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11882:41:16"},"nodeType":"YulFunctionCall","src":"11882:71:16"},"nodeType":"YulExpressionStatement","src":"11882:71:16"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12005:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12018:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12029:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12014:3:16"},"nodeType":"YulFunctionCall","src":"12014:19:16"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"11963:41:16"},"nodeType":"YulFunctionCall","src":"11963:71:16"},"nodeType":"YulExpressionStatement","src":"11963:71:16"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"12086:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12099:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12110:3:16","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12095:3:16"},"nodeType":"YulFunctionCall","src":"12095:19:16"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12044:41:16"},"nodeType":"YulFunctionCall","src":"12044:71:16"},"nodeType":"YulExpressionStatement","src":"12044:71:16"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"12167:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12180:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12191:3:16","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12176:3:16"},"nodeType":"YulFunctionCall","src":"12176:19:16"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12125:41:16"},"nodeType":"YulFunctionCall","src":"12125:71:16"},"nodeType":"YulExpressionStatement","src":"12125:71:16"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"12248:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12261:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12272:3:16","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12257:3:16"},"nodeType":"YulFunctionCall","src":"12257:19:16"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12206:41:16"},"nodeType":"YulFunctionCall","src":"12206:71:16"},"nodeType":"YulExpressionStatement","src":"12206:71:16"}]},"name":"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11424:9:16","type":""},{"name":"value8","nodeType":"YulTypedName","src":"11436:6:16","type":""},{"name":"value7","nodeType":"YulTypedName","src":"11444:6:16","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11452:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11460:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11468:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11476:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11484:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11492:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11500:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11511:4:16","type":""}],"src":"11212:1072:16"},{"body":{"nodeType":"YulBlock","src":"12386:122:16","statements":[{"nodeType":"YulAssignment","src":"12396:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12408:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12404:3:16"},"nodeType":"YulFunctionCall","src":"12404:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12396:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12474:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12498:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:16"},"nodeType":"YulFunctionCall","src":"12483:17:16"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"12432:41:16"},"nodeType":"YulFunctionCall","src":"12432:69:16"},"nodeType":"YulExpressionStatement","src":"12432:69:16"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12358:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12370:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12381:4:16","type":""}],"src":"12290:218:16"},{"body":{"nodeType":"YulBlock","src":"12597:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"12643:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12645:77:16"},"nodeType":"YulFunctionCall","src":"12645:79:16"},"nodeType":"YulExpressionStatement","src":"12645:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12618:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12627:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12614:3:16"},"nodeType":"YulFunctionCall","src":"12614:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"12639:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12610:3:16"},"nodeType":"YulFunctionCall","src":"12610:32:16"},"nodeType":"YulIf","src":"12607:119:16"},{"nodeType":"YulBlock","src":"12736:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12751:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12765:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12755:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12780:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12815:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12826:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12811:3:16"},"nodeType":"YulFunctionCall","src":"12811:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12835:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12790:20:16"},"nodeType":"YulFunctionCall","src":"12790:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12780:6:16"}]}]},{"nodeType":"YulBlock","src":"12863:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12878:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12892:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12882:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12908:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12943:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12954:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12939:3:16"},"nodeType":"YulFunctionCall","src":"12939:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12963:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12918:20:16"},"nodeType":"YulFunctionCall","src":"12918:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12908:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12559:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12570:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12582:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12590:6:16","type":""}],"src":"12514:474:16"},{"body":{"nodeType":"YulBlock","src":"13059:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"13105:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13107:77:16"},"nodeType":"YulFunctionCall","src":"13107:79:16"},"nodeType":"YulExpressionStatement","src":"13107:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13080:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13089:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13076:3:16"},"nodeType":"YulFunctionCall","src":"13076:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"13101:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13072:3:16"},"nodeType":"YulFunctionCall","src":"13072:32:16"},"nodeType":"YulIf","src":"13069:119:16"},{"nodeType":"YulBlock","src":"13198:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"13213:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13227:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13217:6:16","type":""}]},{"nodeType":"YulAssignment","src":"13242:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13276:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"13287:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13272:3:16"},"nodeType":"YulFunctionCall","src":"13272:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13296:7:16"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"13252:19:16"},"nodeType":"YulFunctionCall","src":"13252:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13242:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13029:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13040:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13052:6:16","type":""}],"src":"12994:327:16"},{"body":{"nodeType":"YulBlock","src":"13390:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13407:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13429:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13412:16:16"},"nodeType":"YulFunctionCall","src":"13412:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13400:6:16"},"nodeType":"YulFunctionCall","src":"13400:36:16"},"nodeType":"YulExpressionStatement","src":"13400:36:16"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13378:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13385:3:16","type":""}],"src":"13327:115:16"},{"body":{"nodeType":"YulBlock","src":"13544:122:16","statements":[{"nodeType":"YulAssignment","src":"13554:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13566:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13577:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13562:3:16"},"nodeType":"YulFunctionCall","src":"13562:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13554:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13632:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13645:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13656:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13641:3:16"},"nodeType":"YulFunctionCall","src":"13641:17:16"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13590:41:16"},"nodeType":"YulFunctionCall","src":"13590:69:16"},"nodeType":"YulExpressionStatement","src":"13590:69:16"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13516:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13528:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13539:4:16","type":""}],"src":"13448:218:16"},{"body":{"nodeType":"YulBlock","src":"13737:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13754:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13777:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13759:17:16"},"nodeType":"YulFunctionCall","src":"13759:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13747:6:16"},"nodeType":"YulFunctionCall","src":"13747:37:16"},"nodeType":"YulExpressionStatement","src":"13747:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13725:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13732:3:16","type":""}],"src":"13672:118:16"},{"body":{"nodeType":"YulBlock","src":"13870:40:16","statements":[{"nodeType":"YulAssignment","src":"13881:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13897:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13891:5:16"},"nodeType":"YulFunctionCall","src":"13891:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13881:6:16"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13853:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13863:6:16","type":""}],"src":"13796:114:16"},{"body":{"nodeType":"YulBlock","src":"14027:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14044:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14049:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:16"},"nodeType":"YulFunctionCall","src":"14037:19:16"},"nodeType":"YulExpressionStatement","src":"14037:19:16"},{"nodeType":"YulAssignment","src":"14065:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14084:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14089:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14080:3:16"},"nodeType":"YulFunctionCall","src":"14080:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14065:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13999:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"14004:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14015:11:16","type":""}],"src":"13916:184:16"},{"body":{"nodeType":"YulBlock","src":"14178:60:16","statements":[{"nodeType":"YulAssignment","src":"14188:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14196:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14188:4:16"}]},{"nodeType":"YulAssignment","src":"14209:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14221:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14226:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14217:3:16"},"nodeType":"YulFunctionCall","src":"14217:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14209:4:16"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14165:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14173:4:16","type":""}],"src":"14106:132:16"},{"body":{"nodeType":"YulBlock","src":"14299:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14316:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14339:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14321:17:16"},"nodeType":"YulFunctionCall","src":"14321:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14309:6:16"},"nodeType":"YulFunctionCall","src":"14309:37:16"},"nodeType":"YulExpressionStatement","src":"14309:37:16"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14287:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14294:3:16","type":""}],"src":"14244:108:16"},{"body":{"nodeType":"YulBlock","src":"14438:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14482:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"14490:3:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14448:33:16"},"nodeType":"YulFunctionCall","src":"14448:46:16"},"nodeType":"YulExpressionStatement","src":"14448:46:16"},{"nodeType":"YulAssignment","src":"14503:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14521:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14526:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14517:3:16"},"nodeType":"YulFunctionCall","src":"14517:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14503:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14411:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14419:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14427:10:16","type":""}],"src":"14358:179:16"},{"body":{"nodeType":"YulBlock","src":"14618:38:16","statements":[{"nodeType":"YulAssignment","src":"14628:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14640:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14645:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14636:3:16"},"nodeType":"YulFunctionCall","src":"14636:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14628:4:16"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14605:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14613:4:16","type":""}],"src":"14543:113:16"},{"body":{"nodeType":"YulBlock","src":"14816:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14826:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14888:5:16"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14840:47:16"},"nodeType":"YulFunctionCall","src":"14840:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14830:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14903:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14984:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14989:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14910:73:16"},"nodeType":"YulFunctionCall","src":"14910:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14903:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"15005:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15070:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15020:49:16"},"nodeType":"YulFunctionCall","src":"15020:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15009:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15085:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15099:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15089:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15175:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15189:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15210:5:16"},"nodeType":"YulFunctionCall","src":"15210:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15193:13:16","type":""}]},{"nodeType":"YulAssignment","src":"15236:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15287:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"15302:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"15243:43:16"},"nodeType":"YulFunctionCall","src":"15243:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15236:3:16"}]},{"nodeType":"YulAssignment","src":"15319:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15382:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15329:52:16"},"nodeType":"YulFunctionCall","src":"15329:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15319:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15137:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"15140:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15134:2:16"},"nodeType":"YulFunctionCall","src":"15134:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15148:18:16","statements":[{"nodeType":"YulAssignment","src":"15150:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15159:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"15162:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15155:3:16"},"nodeType":"YulFunctionCall","src":"15155:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15150:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"15119:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15121:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15130:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15125:1:16","type":""}]}]},"src":"15115:284:16"},{"nodeType":"YulAssignment","src":"15408:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"15415:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15408:3:16"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14795:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14802:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14811:3:16","type":""}],"src":"14692:732:16"},{"body":{"nodeType":"YulBlock","src":"15658:468:16","statements":[{"nodeType":"YulAssignment","src":"15668:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15680:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15691:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15676:3:16"},"nodeType":"YulFunctionCall","src":"15676:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15668:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15747:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15760:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15771:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15756:3:16"},"nodeType":"YulFunctionCall","src":"15756:17:16"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"15705:41:16"},"nodeType":"YulFunctionCall","src":"15705:69:16"},"nodeType":"YulExpressionStatement","src":"15705:69:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15826:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15839:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15850:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15835:3:16"},"nodeType":"YulFunctionCall","src":"15835:18:16"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"15784:41:16"},"nodeType":"YulFunctionCall","src":"15784:70:16"},"nodeType":"YulExpressionStatement","src":"15784:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15908:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15921:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15932:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15917:3:16"},"nodeType":"YulFunctionCall","src":"15917:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15864:43:16"},"nodeType":"YulFunctionCall","src":"15864:72:16"},"nodeType":"YulExpressionStatement","src":"15864:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15957:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15968:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15953:3:16"},"nodeType":"YulFunctionCall","src":"15953:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15977:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15983:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15973:3:16"},"nodeType":"YulFunctionCall","src":"15973:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15946:6:16"},"nodeType":"YulFunctionCall","src":"15946:48:16"},"nodeType":"YulExpressionStatement","src":"15946:48:16"},{"nodeType":"YulAssignment","src":"16003:116:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16105:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"16114:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16011:93:16"},"nodeType":"YulFunctionCall","src":"16011:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16003:4:16"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15606:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15618:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15626:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15634:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15642:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15653:4:16","type":""}],"src":"15430:696:16"},{"body":{"nodeType":"YulBlock","src":"16174:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"16230:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16239:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16242:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16232:6:16"},"nodeType":"YulFunctionCall","src":"16232:12:16"},"nodeType":"YulExpressionStatement","src":"16232:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16197:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16221:5:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"16204:16:16"},"nodeType":"YulFunctionCall","src":"16204:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16194:2:16"},"nodeType":"YulFunctionCall","src":"16194:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16187:6:16"},"nodeType":"YulFunctionCall","src":"16187:42:16"},"nodeType":"YulIf","src":"16184:62:16"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16167:5:16","type":""}],"src":"16132:120:16"},{"body":{"nodeType":"YulBlock","src":"16309:86:16","statements":[{"nodeType":"YulAssignment","src":"16319:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16341:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16328:12:16"},"nodeType":"YulFunctionCall","src":"16328:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16319:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16383:5:16"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"16357:25:16"},"nodeType":"YulFunctionCall","src":"16357:32:16"},"nodeType":"YulExpressionStatement","src":"16357:32:16"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16287:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"16295:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16303:5:16","type":""}],"src":"16258:137:16"},{"body":{"nodeType":"YulBlock","src":"16482:389:16","statements":[{"body":{"nodeType":"YulBlock","src":"16528:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16530:77:16"},"nodeType":"YulFunctionCall","src":"16530:79:16"},"nodeType":"YulExpressionStatement","src":"16530:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16499:3:16"},"nodeType":"YulFunctionCall","src":"16499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"16524:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16495:3:16"},"nodeType":"YulFunctionCall","src":"16495:32:16"},"nodeType":"YulIf","src":"16492:119:16"},{"nodeType":"YulBlock","src":"16621:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16636:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16650:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16640:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16665:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16699:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16710:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16695:3:16"},"nodeType":"YulFunctionCall","src":"16695:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16719:7:16"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"16675:19:16"},"nodeType":"YulFunctionCall","src":"16675:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16665:6:16"}]}]},{"nodeType":"YulBlock","src":"16747:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16762:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"16776:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16766:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16792:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16826:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"16837:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16822:3:16"},"nodeType":"YulFunctionCall","src":"16822:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16846:7:16"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"16802:19:16"},"nodeType":"YulFunctionCall","src":"16802:52:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16792:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16444:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16455:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16467:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16475:6:16","type":""}],"src":"16401:470:16"},{"body":{"nodeType":"YulBlock","src":"17051:363:16","statements":[{"nodeType":"YulAssignment","src":"17061:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17073:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17084:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17069:3:16"},"nodeType":"YulFunctionCall","src":"17069:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17061:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17140:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17153:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17164:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17149:3:16"},"nodeType":"YulFunctionCall","src":"17149:17:16"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"17098:41:16"},"nodeType":"YulFunctionCall","src":"17098:69:16"},"nodeType":"YulExpressionStatement","src":"17098:69:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17219:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17232:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17243:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17228:3:16"},"nodeType":"YulFunctionCall","src":"17228:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17177:41:16"},"nodeType":"YulFunctionCall","src":"17177:70:16"},"nodeType":"YulExpressionStatement","src":"17177:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17299:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17312:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17323:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17308:3:16"},"nodeType":"YulFunctionCall","src":"17308:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17257:41:16"},"nodeType":"YulFunctionCall","src":"17257:70:16"},"nodeType":"YulExpressionStatement","src":"17257:70:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17379:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17392:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17403:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17388:3:16"},"nodeType":"YulFunctionCall","src":"17388:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17337:41:16"},"nodeType":"YulFunctionCall","src":"17337:70:16"},"nodeType":"YulExpressionStatement","src":"17337:70:16"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16999:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17011:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17019:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17027:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17035:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17046:4:16","type":""}],"src":"16877:537:16"},{"body":{"nodeType":"YulBlock","src":"17462:48:16","statements":[{"nodeType":"YulAssignment","src":"17472:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17497:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17490:6:16"},"nodeType":"YulFunctionCall","src":"17490:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17483:6:16"},"nodeType":"YulFunctionCall","src":"17483:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17472:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17444:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17454:7:16","type":""}],"src":"17420:90:16"},{"body":{"nodeType":"YulBlock","src":"17575:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17592:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17612:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"17597:14:16"},"nodeType":"YulFunctionCall","src":"17597:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17585:6:16"},"nodeType":"YulFunctionCall","src":"17585:34:16"},"nodeType":"YulExpressionStatement","src":"17585:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17563:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17570:3:16","type":""}],"src":"17516:109:16"},{"body":{"nodeType":"YulBlock","src":"17723:118:16","statements":[{"nodeType":"YulAssignment","src":"17733:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17745:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17756:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17741:3:16"},"nodeType":"YulFunctionCall","src":"17741:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17733:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17807:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17820:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17831:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17816:3:16"},"nodeType":"YulFunctionCall","src":"17816:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"17769:37:16"},"nodeType":"YulFunctionCall","src":"17769:65:16"},"nodeType":"YulExpressionStatement","src":"17769:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17695:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17707:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17718:4:16","type":""}],"src":"17631:210:16"},{"body":{"nodeType":"YulBlock","src":"17943:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17960:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"17965:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17953:6:16"},"nodeType":"YulFunctionCall","src":"17953:19:16"},"nodeType":"YulExpressionStatement","src":"17953:19:16"},{"nodeType":"YulAssignment","src":"17981:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18000:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18005:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17996:3:16"},"nodeType":"YulFunctionCall","src":"17996:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17981:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17915:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"17920:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17931:11:16","type":""}],"src":"17847:169:16"},{"body":{"nodeType":"YulBlock","src":"18128:59:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18150:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18158:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18146:3:16"},"nodeType":"YulFunctionCall","src":"18146:14:16"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"18162:17:16","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18139:6:16"},"nodeType":"YulFunctionCall","src":"18139:41:16"},"nodeType":"YulExpressionStatement","src":"18139:41:16"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18120:6:16","type":""}],"src":"18022:165:16"},{"body":{"nodeType":"YulBlock","src":"18339:220:16","statements":[{"nodeType":"YulAssignment","src":"18349:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18415:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18420:2:16","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18356:58:16"},"nodeType":"YulFunctionCall","src":"18356:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18349:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18521:3:16"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"18432:88:16"},"nodeType":"YulFunctionCall","src":"18432:93:16"},"nodeType":"YulExpressionStatement","src":"18432:93:16"},{"nodeType":"YulAssignment","src":"18534:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18545:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18550:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18541:3:16"},"nodeType":"YulFunctionCall","src":"18541:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18534:3:16"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18327:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18335:3:16","type":""}],"src":"18193:366:16"},{"body":{"nodeType":"YulBlock","src":"18736:248:16","statements":[{"nodeType":"YulAssignment","src":"18746:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18758:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18769:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18754:3:16"},"nodeType":"YulFunctionCall","src":"18754:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18746:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18793:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18804:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18789:3:16"},"nodeType":"YulFunctionCall","src":"18789:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18812:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"18818:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18808:3:16"},"nodeType":"YulFunctionCall","src":"18808:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18782:6:16"},"nodeType":"YulFunctionCall","src":"18782:47:16"},"nodeType":"YulExpressionStatement","src":"18782:47:16"},{"nodeType":"YulAssignment","src":"18838:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18972:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18846:124:16"},"nodeType":"YulFunctionCall","src":"18846:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18838:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18716:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18731:4:16","type":""}],"src":"18565:419:16"},{"body":{"nodeType":"YulBlock","src":"19096:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19118:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19126:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19114:3:16"},"nodeType":"YulFunctionCall","src":"19114:14:16"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"19130:21:16","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19107:6:16"},"nodeType":"YulFunctionCall","src":"19107:45:16"},"nodeType":"YulExpressionStatement","src":"19107:45:16"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19088:6:16","type":""}],"src":"18990:169:16"},{"body":{"nodeType":"YulBlock","src":"19311:220:16","statements":[{"nodeType":"YulAssignment","src":"19321:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19387:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19392:2:16","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19328:58:16"},"nodeType":"YulFunctionCall","src":"19328:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19321:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19493:3:16"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"19404:88:16"},"nodeType":"YulFunctionCall","src":"19404:93:16"},"nodeType":"YulExpressionStatement","src":"19404:93:16"},{"nodeType":"YulAssignment","src":"19506:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19517:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19522:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19513:3:16"},"nodeType":"YulFunctionCall","src":"19513:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19506:3:16"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19299:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19307:3:16","type":""}],"src":"19165:366:16"},{"body":{"nodeType":"YulBlock","src":"19708:248:16","statements":[{"nodeType":"YulAssignment","src":"19718:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19730:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19741:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19726:3:16"},"nodeType":"YulFunctionCall","src":"19726:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19718:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19765:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19776:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19761:3:16"},"nodeType":"YulFunctionCall","src":"19761:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19784:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19790:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19780:3:16"},"nodeType":"YulFunctionCall","src":"19780:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19754:6:16"},"nodeType":"YulFunctionCall","src":"19754:47:16"},"nodeType":"YulExpressionStatement","src":"19754:47:16"},{"nodeType":"YulAssignment","src":"19810:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19944:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19818:124:16"},"nodeType":"YulFunctionCall","src":"19818:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19810:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19688:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19703:4:16","type":""}],"src":"19537:419:16"},{"body":{"nodeType":"YulBlock","src":"20088:206:16","statements":[{"nodeType":"YulAssignment","src":"20098:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20110:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20121:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20106:3:16"},"nodeType":"YulFunctionCall","src":"20106:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20098:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20178:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20191:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20202:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20187:3:16"},"nodeType":"YulFunctionCall","src":"20187:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20134:43:16"},"nodeType":"YulFunctionCall","src":"20134:71:16"},"nodeType":"YulExpressionStatement","src":"20134:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20259:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20272:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20283:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20268:3:16"},"nodeType":"YulFunctionCall","src":"20268:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20215:43:16"},"nodeType":"YulFunctionCall","src":"20215:72:16"},"nodeType":"YulExpressionStatement","src":"20215:72:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20052:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20064:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20072:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20083:4:16","type":""}],"src":"19962:332:16"},{"body":{"nodeType":"YulBlock","src":"20328:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20345:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20348:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20338:6:16"},"nodeType":"YulFunctionCall","src":"20338:88:16"},"nodeType":"YulExpressionStatement","src":"20338:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20442:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20445:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20435:6:16"},"nodeType":"YulFunctionCall","src":"20435:15:16"},"nodeType":"YulExpressionStatement","src":"20435:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20466:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20469:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20459:6:16"},"nodeType":"YulFunctionCall","src":"20459:15:16"},"nodeType":"YulExpressionStatement","src":"20459:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20300:180:16"},{"body":{"nodeType":"YulBlock","src":"20514:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20531:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20534:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20524:6:16"},"nodeType":"YulFunctionCall","src":"20524:88:16"},"nodeType":"YulExpressionStatement","src":"20524:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20628:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20631:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20621:6:16"},"nodeType":"YulFunctionCall","src":"20621:15:16"},"nodeType":"YulExpressionStatement","src":"20621:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20652:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20655:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20645:6:16"},"nodeType":"YulFunctionCall","src":"20645:15:16"},"nodeType":"YulExpressionStatement","src":"20645:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20486:180:16"},{"body":{"nodeType":"YulBlock","src":"20715:190:16","statements":[{"nodeType":"YulAssignment","src":"20725:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20752:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20734:17:16"},"nodeType":"YulFunctionCall","src":"20734:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20725:5:16"}]},{"body":{"nodeType":"YulBlock","src":"20848:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20850:16:16"},"nodeType":"YulFunctionCall","src":"20850:18:16"},"nodeType":"YulExpressionStatement","src":"20850:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20773:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"20780:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20770:2:16"},"nodeType":"YulFunctionCall","src":"20770:77:16"},"nodeType":"YulIf","src":"20767:103:16"},{"nodeType":"YulAssignment","src":"20879:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20890:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"20897:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20886:3:16"},"nodeType":"YulFunctionCall","src":"20886:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20879:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20701:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20711:3:16","type":""}],"src":"20672:233:16"},{"body":{"nodeType":"YulBlock","src":"20985:40:16","statements":[{"nodeType":"YulAssignment","src":"20996:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21012:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21006:5:16"},"nodeType":"YulFunctionCall","src":"21006:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20996:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20968:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20978:6:16","type":""}],"src":"20911:114:16"},{"body":{"nodeType":"YulBlock","src":"21142:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21159:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"21164:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21152:6:16"},"nodeType":"YulFunctionCall","src":"21152:19:16"},"nodeType":"YulExpressionStatement","src":"21152:19:16"},{"nodeType":"YulAssignment","src":"21180:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21199:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21204:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21195:3:16"},"nodeType":"YulFunctionCall","src":"21195:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21180:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21114:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"21119:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21130:11:16","type":""}],"src":"21031:184:16"},{"body":{"nodeType":"YulBlock","src":"21293:60:16","statements":[{"nodeType":"YulAssignment","src":"21303:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21311:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21303:4:16"}]},{"nodeType":"YulAssignment","src":"21324:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21336:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21341:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21332:3:16"},"nodeType":"YulFunctionCall","src":"21332:14:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21324:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21280:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21288:4:16","type":""}],"src":"21221:132:16"},{"body":{"nodeType":"YulBlock","src":"21414:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21431:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21454:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21436:17:16"},"nodeType":"YulFunctionCall","src":"21436:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21424:6:16"},"nodeType":"YulFunctionCall","src":"21424:37:16"},"nodeType":"YulExpressionStatement","src":"21424:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21402:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21409:3:16","type":""}],"src":"21359:108:16"},{"body":{"nodeType":"YulBlock","src":"21553:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21597:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"21605:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21563:33:16"},"nodeType":"YulFunctionCall","src":"21563:46:16"},"nodeType":"YulExpressionStatement","src":"21563:46:16"},{"nodeType":"YulAssignment","src":"21618:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21636:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21641:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21632:3:16"},"nodeType":"YulFunctionCall","src":"21632:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"21618:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"21526:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21534:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"21542:10:16","type":""}],"src":"21473:179:16"},{"body":{"nodeType":"YulBlock","src":"21733:38:16","statements":[{"nodeType":"YulAssignment","src":"21743:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21755:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21760:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21751:3:16"},"nodeType":"YulFunctionCall","src":"21751:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"21743:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21720:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"21728:4:16","type":""}],"src":"21658:113:16"},{"body":{"nodeType":"YulBlock","src":"21931:608:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21941:68:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22003:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21955:47:16"},"nodeType":"YulFunctionCall","src":"21955:54:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21945:6:16","type":""}]},{"nodeType":"YulAssignment","src":"22018:93:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22099:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"22104:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22025:73:16"},"nodeType":"YulFunctionCall","src":"22025:86:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22018:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"22120:71:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22185:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22135:49:16"},"nodeType":"YulFunctionCall","src":"22135:56:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22124:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22200:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22214:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22204:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"22290:224:16","statements":[{"nodeType":"YulVariableDeclaration","src":"22304:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22331:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22325:5:16"},"nodeType":"YulFunctionCall","src":"22325:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22308:13:16","type":""}]},{"nodeType":"YulAssignment","src":"22351:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"22402:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"22417:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22358:43:16"},"nodeType":"YulFunctionCall","src":"22358:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22351:3:16"}]},{"nodeType":"YulAssignment","src":"22434:70:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22497:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22444:52:16"},"nodeType":"YulFunctionCall","src":"22444:60:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22434:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22252:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"22255:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22249:2:16"},"nodeType":"YulFunctionCall","src":"22249:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22263:18:16","statements":[{"nodeType":"YulAssignment","src":"22265:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22274:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"22277:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22270:3:16"},"nodeType":"YulFunctionCall","src":"22270:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22265:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"22234:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"22236:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"22245:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22240:1:16","type":""}]}]},"src":"22230:284:16"},{"nodeType":"YulAssignment","src":"22523:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"22530:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22523:3:16"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21910:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21917:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21926:3:16","type":""}],"src":"21807:732:16"},{"body":{"nodeType":"YulBlock","src":"22721:307:16","statements":[{"nodeType":"YulAssignment","src":"22731:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22743:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22754:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22739:3:16"},"nodeType":"YulFunctionCall","src":"22739:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22731:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22811:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22824:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22835:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22820:3:16"},"nodeType":"YulFunctionCall","src":"22820:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22767:43:16"},"nodeType":"YulFunctionCall","src":"22767:71:16"},"nodeType":"YulExpressionStatement","src":"22767:71:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22859:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22870:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22855:3:16"},"nodeType":"YulFunctionCall","src":"22855:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22879:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22885:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22875:3:16"},"nodeType":"YulFunctionCall","src":"22875:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22848:6:16"},"nodeType":"YulFunctionCall","src":"22848:48:16"},"nodeType":"YulExpressionStatement","src":"22848:48:16"},{"nodeType":"YulAssignment","src":"22905:116:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23007:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"23016:4:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22913:93:16"},"nodeType":"YulFunctionCall","src":"22913:108:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22905:4:16"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22685:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22697:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22705:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22716:4:16","type":""}],"src":"22545:483:16"},{"body":{"nodeType":"YulBlock","src":"23092:40:16","statements":[{"nodeType":"YulAssignment","src":"23103:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23119:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23113:5:16"},"nodeType":"YulFunctionCall","src":"23113:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23103:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23075:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23085:6:16","type":""}],"src":"23034:98:16"},{"body":{"nodeType":"YulBlock","src":"23251:34:16","statements":[{"nodeType":"YulAssignment","src":"23261:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"23276:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23261:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23223:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"23228:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23239:11:16","type":""}],"src":"23138:147:16"},{"body":{"nodeType":"YulBlock","src":"23340:258:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23350:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"23359:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23354:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"23419:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23444:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"23449:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23440:3:16"},"nodeType":"YulFunctionCall","src":"23440:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23463:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"23468:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23459:3:16"},"nodeType":"YulFunctionCall","src":"23459:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23453:5:16"},"nodeType":"YulFunctionCall","src":"23453:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23433:6:16"},"nodeType":"YulFunctionCall","src":"23433:39:16"},"nodeType":"YulExpressionStatement","src":"23433:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23380:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"23383:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23377:2:16"},"nodeType":"YulFunctionCall","src":"23377:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23391:19:16","statements":[{"nodeType":"YulAssignment","src":"23393:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23402:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"23405:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23398:3:16"},"nodeType":"YulFunctionCall","src":"23398:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23393:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"23373:3:16","statements":[]},"src":"23369:113:16"},{"body":{"nodeType":"YulBlock","src":"23516:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23566:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23571:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23562:3:16"},"nodeType":"YulFunctionCall","src":"23562:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"23580:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23555:6:16"},"nodeType":"YulFunctionCall","src":"23555:27:16"},"nodeType":"YulExpressionStatement","src":"23555:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23497:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"23500:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23494:2:16"},"nodeType":"YulFunctionCall","src":"23494:13:16"},"nodeType":"YulIf","src":"23491:101:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"23322:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"23327:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"23332:6:16","type":""}],"src":"23291:307:16"},{"body":{"nodeType":"YulBlock","src":"23712:265:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23722:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23768:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23736:31:16"},"nodeType":"YulFunctionCall","src":"23736:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23726:6:16","type":""}]},{"nodeType":"YulAssignment","src":"23783:95:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23866:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23871:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23790:75:16"},"nodeType":"YulFunctionCall","src":"23790:88:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23783:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23913:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"23920:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23909:3:16"},"nodeType":"YulFunctionCall","src":"23909:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"23927:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23932:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23887:21:16"},"nodeType":"YulFunctionCall","src":"23887:52:16"},"nodeType":"YulExpressionStatement","src":"23887:52:16"},{"nodeType":"YulAssignment","src":"23948:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23959:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"23964:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23955:3:16"},"nodeType":"YulFunctionCall","src":"23955:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23948:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23693:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23700:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23708:3:16","type":""}],"src":"23604:373:16"},{"body":{"nodeType":"YulBlock","src":"24117:137:16","statements":[{"nodeType":"YulAssignment","src":"24128:100:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24215:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"24224:3:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24135:79:16"},"nodeType":"YulFunctionCall","src":"24135:93:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24128:3:16"}]},{"nodeType":"YulAssignment","src":"24238:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"24245:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24238:3:16"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24096:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24102:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24113:3:16","type":""}],"src":"23983:271:16"},{"body":{"nodeType":"YulBlock","src":"24305:146:16","statements":[{"nodeType":"YulAssignment","src":"24315:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24338:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24320:17:16"},"nodeType":"YulFunctionCall","src":"24320:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24315:1:16"}]},{"nodeType":"YulAssignment","src":"24349:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24372:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24354:17:16"},"nodeType":"YulFunctionCall","src":"24354:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24349:1:16"}]},{"body":{"nodeType":"YulBlock","src":"24396:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24398:16:16"},"nodeType":"YulFunctionCall","src":"24398:18:16"},"nodeType":"YulExpressionStatement","src":"24398:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24390:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"24393:1:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24387:2:16"},"nodeType":"YulFunctionCall","src":"24387:8:16"},"nodeType":"YulIf","src":"24384:34:16"},{"nodeType":"YulAssignment","src":"24428:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24440:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"24443:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24436:3:16"},"nodeType":"YulFunctionCall","src":"24436:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24428:4:16"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24291:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"24294:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24300:4:16","type":""}],"src":"24260:191:16"},{"body":{"nodeType":"YulBlock","src":"24505:300:16","statements":[{"nodeType":"YulAssignment","src":"24515:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24538:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24520:17:16"},"nodeType":"YulFunctionCall","src":"24520:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24515:1:16"}]},{"nodeType":"YulAssignment","src":"24549:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24572:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24554:17:16"},"nodeType":"YulFunctionCall","src":"24554:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24549:1:16"}]},{"body":{"nodeType":"YulBlock","src":"24747:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24749:16:16"},"nodeType":"YulFunctionCall","src":"24749:18:16"},"nodeType":"YulExpressionStatement","src":"24749:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24659:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24652:6:16"},"nodeType":"YulFunctionCall","src":"24652:9:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24645:6:16"},"nodeType":"YulFunctionCall","src":"24645:17:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24667:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24674:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"24742:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24670:3:16"},"nodeType":"YulFunctionCall","src":"24670:74:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24664:2:16"},"nodeType":"YulFunctionCall","src":"24664:81:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24641:3:16"},"nodeType":"YulFunctionCall","src":"24641:105:16"},"nodeType":"YulIf","src":"24638:131:16"},{"nodeType":"YulAssignment","src":"24779:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24794:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"24797:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24790:3:16"},"nodeType":"YulFunctionCall","src":"24790:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"24779:7:16"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24488:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"24491:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"24497:7:16","type":""}],"src":"24457:348:16"},{"body":{"nodeType":"YulBlock","src":"24855:261:16","statements":[{"nodeType":"YulAssignment","src":"24865:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24888:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24870:17:16"},"nodeType":"YulFunctionCall","src":"24870:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24865:1:16"}]},{"nodeType":"YulAssignment","src":"24899:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24922:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24904:17:16"},"nodeType":"YulFunctionCall","src":"24904:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24899:1:16"}]},{"body":{"nodeType":"YulBlock","src":"25062:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25064:16:16"},"nodeType":"YulFunctionCall","src":"25064:18:16"},"nodeType":"YulExpressionStatement","src":"25064:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24983:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24990:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"25058:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24986:3:16"},"nodeType":"YulFunctionCall","src":"24986:74:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24980:2:16"},"nodeType":"YulFunctionCall","src":"24980:81:16"},"nodeType":"YulIf","src":"24977:107:16"},{"nodeType":"YulAssignment","src":"25094:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25105:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"25108:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25101:3:16"},"nodeType":"YulFunctionCall","src":"25101:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"25094:3:16"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24842:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"24845:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24851:3:16","type":""}],"src":"24811:305:16"},{"body":{"nodeType":"YulBlock","src":"25166:144:16","statements":[{"nodeType":"YulAssignment","src":"25176:24:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25198:1:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"25181:16:16"},"nodeType":"YulFunctionCall","src":"25181:19:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25176:1:16"}]},{"nodeType":"YulAssignment","src":"25209:24:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25231:1:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"25214:16:16"},"nodeType":"YulFunctionCall","src":"25214:19:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25209:1:16"}]},{"body":{"nodeType":"YulBlock","src":"25255:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25257:16:16"},"nodeType":"YulFunctionCall","src":"25257:18:16"},"nodeType":"YulExpressionStatement","src":"25257:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25249:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"25252:1:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25246:2:16"},"nodeType":"YulFunctionCall","src":"25246:8:16"},"nodeType":"YulIf","src":"25243:34:16"},{"nodeType":"YulAssignment","src":"25287:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25299:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"25302:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25295:3:16"},"nodeType":"YulFunctionCall","src":"25295:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25287:4:16"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25152:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"25155:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25161:4:16","type":""}],"src":"25122:188:16"},{"body":{"nodeType":"YulBlock","src":"25462:280:16","statements":[{"nodeType":"YulAssignment","src":"25472:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25484:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25495:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25480:3:16"},"nodeType":"YulFunctionCall","src":"25480:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25472:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25552:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25565:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25576:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25561:3:16"},"nodeType":"YulFunctionCall","src":"25561:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25508:43:16"},"nodeType":"YulFunctionCall","src":"25508:71:16"},"nodeType":"YulExpressionStatement","src":"25508:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25631:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25644:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25655:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25640:3:16"},"nodeType":"YulFunctionCall","src":"25640:18:16"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"25589:41:16"},"nodeType":"YulFunctionCall","src":"25589:70:16"},"nodeType":"YulExpressionStatement","src":"25589:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25707:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25720:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25731:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25716:3:16"},"nodeType":"YulFunctionCall","src":"25716:18:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25669:37:16"},"nodeType":"YulFunctionCall","src":"25669:66:16"},"nodeType":"YulExpressionStatement","src":"25669:66:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25418:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25430:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25438:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25446:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25457:4:16","type":""}],"src":"25316:426:16"},{"body":{"nodeType":"YulBlock","src":"25952:448:16","statements":[{"nodeType":"YulAssignment","src":"25962:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25974:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25985:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25970:3:16"},"nodeType":"YulFunctionCall","src":"25970:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25962:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26043:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26056:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26067:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26052:3:16"},"nodeType":"YulFunctionCall","src":"26052:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25999:43:16"},"nodeType":"YulFunctionCall","src":"25999:71:16"},"nodeType":"YulExpressionStatement","src":"25999:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26124:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26137:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26148:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26133:3:16"},"nodeType":"YulFunctionCall","src":"26133:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26080:43:16"},"nodeType":"YulFunctionCall","src":"26080:72:16"},"nodeType":"YulExpressionStatement","src":"26080:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26204:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26217:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26228:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26213:3:16"},"nodeType":"YulFunctionCall","src":"26213:18:16"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"26162:41:16"},"nodeType":"YulFunctionCall","src":"26162:70:16"},"nodeType":"YulExpressionStatement","src":"26162:70:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26284:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26297:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26308:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26293:3:16"},"nodeType":"YulFunctionCall","src":"26293:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26242:41:16"},"nodeType":"YulFunctionCall","src":"26242:70:16"},"nodeType":"YulExpressionStatement","src":"26242:70:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"26364:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26377:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26388:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26373:3:16"},"nodeType":"YulFunctionCall","src":"26373:19:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26322:41:16"},"nodeType":"YulFunctionCall","src":"26322:71:16"},"nodeType":"YulExpressionStatement","src":"26322:71:16"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25892:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25904:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25912:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25920:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25928:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25936:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25947:4:16","type":""}],"src":"25748:652:16"},{"body":{"nodeType":"YulBlock","src":"26504:124:16","statements":[{"nodeType":"YulAssignment","src":"26514:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26526:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26537:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26522:3:16"},"nodeType":"YulFunctionCall","src":"26522:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26514:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26594:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26607:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26618:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26603:3:16"},"nodeType":"YulFunctionCall","src":"26603:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26550:43:16"},"nodeType":"YulFunctionCall","src":"26550:71:16"},"nodeType":"YulExpressionStatement","src":"26550:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26476:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26488:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26499:4:16","type":""}],"src":"26406:222:16"},{"body":{"nodeType":"YulBlock","src":"26662:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26679:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26682:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26672:6:16"},"nodeType":"YulFunctionCall","src":"26672:88:16"},"nodeType":"YulExpressionStatement","src":"26672:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26776:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26779:4:16","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26769:6:16"},"nodeType":"YulFunctionCall","src":"26769:15:16"},"nodeType":"YulExpressionStatement","src":"26769:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26800:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26803:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26793:6:16"},"nodeType":"YulFunctionCall","src":"26793:15:16"},"nodeType":"YulExpressionStatement","src":"26793:15:16"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"26634:180:16"},{"body":{"nodeType":"YulBlock","src":"26862:141:16","statements":[{"nodeType":"YulAssignment","src":"26872:32:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26898:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"26881:16:16"},"nodeType":"YulFunctionCall","src":"26881:23:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26872:5:16"}]},{"body":{"nodeType":"YulBlock","src":"26946:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26948:16:16"},"nodeType":"YulFunctionCall","src":"26948:18:16"},"nodeType":"YulExpressionStatement","src":"26948:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26919:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26926:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26916:2:16"},"nodeType":"YulFunctionCall","src":"26916:29:16"},"nodeType":"YulIf","src":"26913:55:16"},{"nodeType":"YulAssignment","src":"26977:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26988:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26995:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26984:3:16"},"nodeType":"YulFunctionCall","src":"26984:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26977:3:16"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26848:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26858:3:16","type":""}],"src":"26820:183:16"},{"body":{"nodeType":"YulBlock","src":"27052:219:16","statements":[{"nodeType":"YulAssignment","src":"27062:24:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27084:1:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27067:16:16"},"nodeType":"YulFunctionCall","src":"27067:19:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27062:1:16"}]},{"nodeType":"YulAssignment","src":"27095:24:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27117:1:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27100:16:16"},"nodeType":"YulFunctionCall","src":"27100:19:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27095:1:16"}]},{"body":{"nodeType":"YulBlock","src":"27217:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27219:16:16"},"nodeType":"YulFunctionCall","src":"27219:18:16"},"nodeType":"YulExpressionStatement","src":"27219:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27178:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27185:26:16","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"27213:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27181:3:16"},"nodeType":"YulFunctionCall","src":"27181:34:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27175:2:16"},"nodeType":"YulFunctionCall","src":"27175:41:16"},"nodeType":"YulIf","src":"27172:67:16"},{"nodeType":"YulAssignment","src":"27249:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27260:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"27263:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27256:3:16"},"nodeType":"YulFunctionCall","src":"27256:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27249:3:16"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27039:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"27042:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27048:3:16","type":""}],"src":"27009:262:16"},{"body":{"nodeType":"YulBlock","src":"27309:28:16","statements":[{"nodeType":"YulAssignment","src":"27319:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"27326:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27319:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27295:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27305:3:16","type":""}],"src":"27277:60:16"},{"body":{"nodeType":"YulBlock","src":"27402:81:16","statements":[{"nodeType":"YulAssignment","src":"27412:65:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27469:5:16"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27452:16:16"},"nodeType":"YulFunctionCall","src":"27452:23:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27443:8:16"},"nodeType":"YulFunctionCall","src":"27443:33:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27425:17:16"},"nodeType":"YulFunctionCall","src":"27425:52:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27412:9:16"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27382:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27392:9:16","type":""}],"src":"27343:140:16"},{"body":{"nodeType":"YulBlock","src":"27553:65:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27570:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27605:5:16"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"27575:29:16"},"nodeType":"YulFunctionCall","src":"27575:36:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27563:6:16"},"nodeType":"YulFunctionCall","src":"27563:49:16"},"nodeType":"YulExpressionStatement","src":"27563:49:16"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27541:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27548:3:16","type":""}],"src":"27489:129:16"},{"body":{"nodeType":"YulBlock","src":"27748:204:16","statements":[{"nodeType":"YulAssignment","src":"27758:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27770:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27781:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27766:3:16"},"nodeType":"YulFunctionCall","src":"27766:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27758:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27837:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27850:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27861:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27846:3:16"},"nodeType":"YulFunctionCall","src":"27846:17:16"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27794:42:16"},"nodeType":"YulFunctionCall","src":"27794:70:16"},"nodeType":"YulExpressionStatement","src":"27794:70:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27917:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27930:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27941:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27926:3:16"},"nodeType":"YulFunctionCall","src":"27926:18:16"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27874:42:16"},"nodeType":"YulFunctionCall","src":"27874:71:16"},"nodeType":"YulExpressionStatement","src":"27874:71:16"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27712:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27724:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27732:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27743:4:16","type":""}],"src":"27624:328:16"},{"body":{"nodeType":"YulBlock","src":"28083:205:16","statements":[{"nodeType":"YulAssignment","src":"28093:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28105:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28116:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28101:3:16"},"nodeType":"YulFunctionCall","src":"28101:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28093:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28173:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28186:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28197:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28182:3:16"},"nodeType":"YulFunctionCall","src":"28182:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28129:43:16"},"nodeType":"YulFunctionCall","src":"28129:71:16"},"nodeType":"YulExpressionStatement","src":"28129:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28253:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28266:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28277:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28262:3:16"},"nodeType":"YulFunctionCall","src":"28262:18:16"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28210:42:16"},"nodeType":"YulFunctionCall","src":"28210:71:16"},"nodeType":"YulExpressionStatement","src":"28210:71:16"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28047:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28059:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28067:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28078:4:16","type":""}],"src":"27958:330:16"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"257":[{"length":32,"start":2020},{"length":32,"start":2547}],"259":[{"length":32,"start":1951},{"length":32,"start":5412}],"262":[{"length":32,"start":3255},{"length":32,"start":3586}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012b5760003560e01c806382359740116100ad578063afc69b5311610071578063afc69b5314610317578063c3f909d414610333578063d7ae1d3014610354578063e82ad7d414610370578063ed5eb06d146103a05761012b565b806382359740146102705780639f87fad71461028c578063a21a23e4146102a8578063a410347f146102c6578063a47c7696146102e45761012b565b80635d3b1d30116100f45780635d3b1d30146101c45780635fbbc0d2146101f457806364d51a2a1461021a5780637341c10c14610238578063808974ff146102545761012b565b80620122911461013057806304c357cb1461015057806308e3898e1461016c578063356dac71146101885780633d18651e146101a6575b600080fd5b6101386103d0565b60405161014793929190611dd1565b60405180910390f35b61016a60048036038101906101659190611ec1565b610430565b005b61018660048036038101906101819190612090565b61046b565b005b6101906109e2565b60405161019d9190612118565b60405180910390f35b6101ae6109f1565b6040516101bb919061215a565b60405180910390f35b6101de60048036038101906101d991906121f9565b610a15565b6040516101eb9190612283565b60405180910390f35b6101fc610c76565b604051610211999897969594939291906122bc565b60405180910390f35b610222610cb5565b60405161022f9190612349565b60405180910390f35b610252600480360381019061024d9190611ec1565b610cd9565b005b61026e60048036038101906102699190612364565b610f6d565b005b61028a600480360381019061028591906123a4565b610fc5565b005b6102a660048036038101906102a19190611ec1565b611000565b005b6102b061136d565b6040516102bd91906123e0565b60405180910390f35b6102ce611522565b6040516102db919061215a565b60405180910390f35b6102fe60048036038101906102f991906123a4565b611546565b60405161030e94939291906124c8565b60405180910390f35b610331600480360381019061032c9190612540565b61174c565b005b61033b611917565b60405161034b9493929190612580565b60405180910390f35b61036e60048036038101906103699190611ec1565b611937565b005b61038a600480360381019061038591906123a4565b611b5a565b60405161039791906125e0565b60405180910390f35b6103ba60048036038101906103b59190611ec1565b611b97565b6040516103c791906125e0565b60405180910390f35b60008060606003621e8480600067ffffffffffffffff8111156103f6576103f5611f4d565b5b6040519080825280602002602001820160405280156104245781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290612658565b60405180910390fd5b60005a905060006005600086815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156104e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df906126c4565b60405180910390fd5b6000600560008681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008351141561066057806040015163ffffffff1667ffffffffffffffff8111156105b6576105b5611f4d565b5b6040519080825280602002602001820160405280156105e45781602001602082028036833780820191505090505b50925060005b816040015163ffffffff1681101561065a57858160405160200161060f9291906126e4565b6040516020818303038152906040528051906020012060001c84828151811061063b5761063a61270d565b5b60200260200101818152505080806106529061276b565b9150506105ea565b506106a5565b806040015163ffffffff168351146106a4576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b87866040516024016106c3929190612872565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff1683604051610754919061291c565b60006040518083038160008787f1925050503d8060008114610792576040519150601f19603f3d011682016040523d82523d6000602084013e610797565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a876107d89190612933565b6107e29190612967565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff1661081b91906129c1565b9050806bffffffffffffffffffffffff1660036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1610156108b9576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff1661090e9190612a17565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600560008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a83856040516109cf93929190612a4b565b60405180910390a2505050505050505050565b6000660e35fa931a0000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008433610a238282611b97565b610a59576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b0a576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000815480929190610b1f9061276b565b919050559050600060026000815480929190610b3a9061276b565b91905055905060405180606001604052808a67ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff168152506005600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168967ffffffffffffffff168b7f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858d8d8d604051610c5e959493929190612a82565b60405180910390a48194505050505095945050505050565b6000806000806000806000806000620186a080620186a080620186a0600080600080985098509850985098509850985098509850909192939495969798565b7f000000000000000000000000000000000000000000000000000000000000000081565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d90576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0057806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401610df79190612ad5565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff16600460008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805490501415610e88576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e928484611b97565b15610e9c57610f67565b600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc384604051610f5e9190612ad5565b60405180910390a25b50505050565b610fc18282600067ffffffffffffffff811115610f8d57610f8c611f4d565b5b604051908082528060200260200182016040528015610fbb5781602001602082028036833780820191505090505b5061046b565b5050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790612658565b60405180910390fd5b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110b7576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112757806040517fd8a3fb5200000000000000000000000000000000000000000000000000000000815260040161111e9190612ad5565b60405180910390fd5b83836111338282611b97565b611169576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008867ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060005b8180549050811015611321578673ffffffffffffffffffffffffffffffffffffffff168282815481106111cd576111cc61270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561130e57600082600184805490506112289190612933565b815481106112395761123861270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061127a5761127961270d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806112d3576112d2612af0565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550611321565b80806113199061276b565b915050611197565b508667ffffffffffffffff167ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc8760405161135c9190612ad5565b60405180910390a250505050505050565b600080600081819054906101000a900467ffffffffffffffff168092919061139490612b1f565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf336040516115009190612ad5565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156115fe576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008967ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208080548060200260200160405190810160405280929190818152602001828054801561173657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116ec575b5050505050905093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117fd576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166118959190612b50565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88284846118fc9190612b50565b60405161190a929190612bcd565b60405180910390a2505050565b6000806000806004622625a0610a8c618205935093509350935090919293565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119ee576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a5e57806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611a559190612ad5565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16604051611adc929190612bf6565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8e90612658565b60405180910390fd5b600080600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c4157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bf7575b5050505050905060005b8151811015611cc0578373ffffffffffffffffffffffffffffffffffffffff16828281518110611c7e57611c7d61270d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611cad57600192505050611cc7565b8080611cb89061276b565b915050611c4b565b5060009150505b92915050565b600061ffff82169050919050565b611ce481611ccd565b82525050565b600063ffffffff82169050919050565b611d0381611cea565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611d4881611d35565b82525050565b6000611d5a8383611d3f565b60208301905092915050565b6000602082019050919050565b6000611d7e82611d09565b611d888185611d14565b9350611d9383611d25565b8060005b83811015611dc4578151611dab8882611d4e565b9750611db683611d66565b925050600181019050611d97565b5085935050505092915050565b6000606082019050611de66000830186611cdb565b611df36020830185611cfa565b8181036040830152611e058184611d73565b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b611e4081611e23565b8114611e4b57600080fd5b50565b600081359050611e5d81611e37565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e8e82611e63565b9050919050565b611e9e81611e83565b8114611ea957600080fd5b50565b600081359050611ebb81611e95565b92915050565b60008060408385031215611ed857611ed7611e19565b5b6000611ee685828601611e4e565b9250506020611ef785828601611eac565b9150509250929050565b6000819050919050565b611f1481611f01565b8114611f1f57600080fd5b50565b600081359050611f3181611f0b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f8582611f3c565b810181811067ffffffffffffffff82111715611fa457611fa3611f4d565b5b80604052505050565b6000611fb7611e0f565b9050611fc38282611f7c565b919050565b600067ffffffffffffffff821115611fe357611fe2611f4d565b5b602082029050602081019050919050565b600080fd5b600061200c61200784611fc8565b611fad565b9050808382526020820190506020840283018581111561202f5761202e611ff4565b5b835b8181101561205857806120448882611f22565b845260208401935050602081019050612031565b5050509392505050565b600082601f83011261207757612076611f37565b5b8135612087848260208601611ff9565b91505092915050565b6000806000606084860312156120a9576120a8611e19565b5b60006120b786828701611f22565b93505060206120c886828701611eac565b925050604084013567ffffffffffffffff8111156120e9576120e8611e1e565b5b6120f586828701612062565b9150509250925092565b6000819050919050565b612112816120ff565b82525050565b600060208201905061212d6000830184612109565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61215481612133565b82525050565b600060208201905061216f600083018461214b565b92915050565b61217e81611d35565b811461218957600080fd5b50565b60008135905061219b81612175565b92915050565b6121aa81611ccd565b81146121b557600080fd5b50565b6000813590506121c7816121a1565b92915050565b6121d681611cea565b81146121e157600080fd5b50565b6000813590506121f3816121cd565b92915050565b600080600080600060a0868803121561221557612214611e19565b5b60006122238882890161218c565b955050602061223488828901611e4e565b9450506040612245888289016121b8565b9350506060612256888289016121e4565b9250506080612267888289016121e4565b9150509295509295909350565b61227d81611f01565b82525050565b60006020820190506122986000830184612274565b92915050565b600062ffffff82169050919050565b6122b68161229e565b82525050565b6000610120820190506122d2600083018c611cfa565b6122df602083018b611cfa565b6122ec604083018a611cfa565b6122f96060830189611cfa565b6123066080830188611cfa565b61231360a08301876122ad565b61232060c08301866122ad565b61232d60e08301856122ad565b61233b6101008301846122ad565b9a9950505050505050505050565b600060208201905061235e6000830184611cdb565b92915050565b6000806040838503121561237b5761237a611e19565b5b600061238985828601611f22565b925050602061239a85828601611eac565b9150509250929050565b6000602082840312156123ba576123b9611e19565b5b60006123c884828501611e4e565b91505092915050565b6123da81611e23565b82525050565b60006020820190506123f560008301846123d1565b92915050565b61240481611e83565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61243f81611e83565b82525050565b60006124518383612436565b60208301905092915050565b6000602082019050919050565b60006124758261240a565b61247f8185612415565b935061248a83612426565b8060005b838110156124bb5781516124a28882612445565b97506124ad8361245d565b92505060018101905061248e565b5085935050505092915050565b60006080820190506124dd600083018761214b565b6124ea60208301866123d1565b6124f760408301856123fb565b8181036060830152612509818461246a565b905095945050505050565b61251d81612133565b811461252857600080fd5b50565b60008135905061253a81612514565b92915050565b6000806040838503121561255757612556611e19565b5b600061256585828601611e4e565b92505060206125768582860161252b565b9150509250929050565b60006080820190506125956000830187611cdb565b6125a26020830186611cfa565b6125af6040830185611cfa565b6125bc6060830184611cfa565b95945050505050565b60008115159050919050565b6125da816125c5565b82525050565b60006020820190506125f560008301846125d1565b92915050565b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b6000612642600f836125fb565b915061264d8261260c565b602082019050919050565b6000602082019050818103600083015261267181612635565b9050919050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b60006126ae6013836125fb565b91506126b982612678565b602082019050919050565b600060208201905081810360008301526126dd816126a1565b9050919050565b60006040820190506126f96000830185612274565b6127066020830184612274565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061277682611f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127a9576127a861273c565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127e981611f01565b82525050565b60006127fb83836127e0565b60208301905092915050565b6000602082019050919050565b600061281f826127b4565b61282981856127bf565b9350612834836127d0565b8060005b8381101561286557815161284c88826127ef565b975061285783612807565b925050600181019050612838565b5085935050505092915050565b60006040820190506128876000830185612274565b81810360208301526128998184612814565b90509392505050565b600081519050919050565b600081905092915050565b60005b838110156128d65780820151818401526020810190506128bb565b838111156128e5576000848401525b50505050565b60006128f6826128a2565b61290081856128ad565b93506129108185602086016128b8565b80840191505092915050565b600061292882846128eb565b915081905092915050565b600061293e82611f01565b915061294983611f01565b92508282101561295c5761295b61273c565b5b828203905092915050565b600061297282611f01565b915061297d83611f01565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129b6576129b561273c565b5b828202905092915050565b60006129cc82611f01565b91506129d783611f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a0c57612a0b61273c565b5b828201905092915050565b6000612a2282612133565b9150612a2d83612133565b925082821015612a4057612a3f61273c565b5b828203905092915050565b6000606082019050612a606000830186612274565b612a6d602083018561214b565b612a7a60408301846125d1565b949350505050565b600060a082019050612a976000830188612274565b612aa46020830187612274565b612ab16040830186611cdb565b612abe6060830185611cfa565b612acb6080830184611cfa565b9695505050505050565b6000602082019050612aea60008301846123fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612b2a82611e23565b915067ffffffffffffffff821415612b4557612b4461273c565b5b600182019050919050565b6000612b5b82612133565b9150612b6683612133565b9250826bffffffffffffffffffffffff03821115612b8757612b8661273c565b5b828201905092915050565b6000819050919050565b6000612bb7612bb2612bad84612133565b612b92565b611f01565b9050919050565b612bc781612b9c565b82525050565b6000604082019050612be26000830185612bbe565b612bef6020830184612bbe565b9392505050565b6000604082019050612c0b60008301856123fb565b612c186020830184612bbe565b939250505056fea26469706673582212209ec8bf9b554c0e3c3674cd2e4e3cf8e74730d2169c8e9f10840fb177e0e577be64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAFC69B53 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xED5EB06D EQ PUSH2 0x3A0 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x2E4 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x5D3B1D30 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x254 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x1A6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2090 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1937 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3F5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x424 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x65A JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60F SWAP3 SWAP2 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x652 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP PUSH2 0x6A5 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x797 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP8 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xE35FA931A0000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER PUSH2 0xA23 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB1F SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB3A SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0xC5E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE00 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE92 DUP5 DUP5 PUSH2 0x1B97 JUMP JUMPDEST ISZERO PUSH2 0xE9C JUMPI PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x752EAD9F4536EC1319EE3A5A604E1D65EDED22E0924251552BA14AE4FAA1BBC3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFC1 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8C PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFBB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x46B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1127 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x1133 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1321 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x127A JUMPI PUSH2 0x1279 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x2AF0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x1321 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1319 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1197 JUMP JUMPDEST POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xF9BC9D5B5733D904409DEF43A5ECC888DBDAC9A95687780D8FD489D3BB3813FC DUP8 PUSH1 0x40 MLOAD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1736 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x16EC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH3 0x2625A0 PUSH2 0xA8C PUSH2 0x8205 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A5E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1ADC SWAP3 SWAP2 SWAP1 PUSH2 0x2BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8E SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BF7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1CC0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CAD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1CC7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1CB8 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C4B JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE4 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D03 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP4 DUP4 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7E DUP3 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x1D88 DUP2 DUP6 PUSH2 0x1D14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D93 DUP4 PUSH2 0x1D25 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI DUP2 MLOAD PUSH2 0x1DAB DUP9 DUP3 PUSH2 0x1D4E JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB6 DUP4 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D97 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1DF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E05 DUP2 DUP5 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E40 DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9E DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBB DUP2 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F14 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F31 DUP2 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F85 DUP3 PUSH2 0x1F3C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FA4 JUMPI PUSH2 0x1FA3 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH2 0x1FC3 DUP3 DUP3 PUSH2 0x1F7C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE3 JUMPI PUSH2 0x1FE2 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200C PUSH2 0x2007 DUP5 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1FAD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2058 JUMPI DUP1 PUSH2 0x2044 DUP9 DUP3 PUSH2 0x1F22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2031 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1F37 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2087 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x20A8 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B7 DUP7 DUP3 DUP8 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20C8 DUP7 DUP3 DUP8 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E9 JUMPI PUSH2 0x20E8 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x20F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2112 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP2 EQ PUSH2 0x2189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x219B DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21AA DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21C7 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D6 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP2 EQ PUSH2 0x21E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F3 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2223 DUP9 DUP3 DUP10 ADD PUSH2 0x218C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2234 DUP9 DUP3 DUP10 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2245 DUP9 DUP3 DUP10 ADD PUSH2 0x21B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2256 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2267 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x227D DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2298 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B6 DUP2 PUSH2 0x229E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x22D2 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22DF PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22EC PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22F9 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2306 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2313 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x2320 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x232D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x233B PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x22AD JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237B JUMPI PUSH2 0x237A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2389 DUP6 DUP3 DUP7 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x239A DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23C8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2404 DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243F DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2451 DUP4 DUP4 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x247F DUP2 DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP4 POP PUSH2 0x248A DUP4 PUSH2 0x2426 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24BB JUMPI DUP2 MLOAD PUSH2 0x24A2 DUP9 DUP3 PUSH2 0x2445 JUMP JUMPDEST SWAP8 POP PUSH2 0x24AD DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x248E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24DD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x24EA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x24F7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x251D DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP2 EQ PUSH2 0x2528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253A DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH2 0x2556 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2565 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2576 DUP6 DUP3 DUP7 ADD PUSH2 0x252B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2595 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x25A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25BC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25DA DUP2 PUSH2 0x25C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2642 PUSH1 0xF DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x264D DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2671 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE PUSH1 0x13 DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26DD DUP2 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2706 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2776 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A8 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E9 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FB DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281F DUP3 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x2829 DUP2 DUP6 PUSH2 0x27BF JUMP JUMPDEST SWAP4 POP PUSH2 0x2834 DUP4 PUSH2 0x27D0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2865 JUMPI DUP2 MLOAD PUSH2 0x284C DUP9 DUP3 PUSH2 0x27EF JUMP JUMPDEST SWAP8 POP PUSH2 0x2857 DUP4 PUSH2 0x2807 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2838 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2887 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2899 DUP2 DUP5 PUSH2 0x2814 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28BB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F6 DUP3 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x2900 DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST SWAP4 POP PUSH2 0x2910 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28B8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2928 DUP3 DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293E DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2949 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x297D DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29B6 JUMPI PUSH2 0x29B5 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CC DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D7 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A22 DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2D DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2A6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x2A7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2A97 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AA4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AB1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x2ABE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2ACB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B2A DUP3 PUSH2 0x1E23 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2B45 JUMPI PUSH2 0x2B44 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B66 DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB7 PUSH2 0x2BB2 PUSH2 0x2BAD DUP5 PUSH2 0x2133 JUMP JUMPDEST PUSH2 0x2B92 JUMP JUMPDEST PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC7 DUP2 PUSH2 0x2B9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BE2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x2BEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST PUSH2 0x2C18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xC8 0xBF SWAP12 SSTORE 0x4C 0xE EXTCODECOPY CALLDATASIZE PUSH21 0xCD2E4E3CF8E74730D2169C8E9F10840FB177E0E577 0xBE PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"254:9107:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6986:184;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8985:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3391:1142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8864:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;317:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5081:756;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8270:590;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;395:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7174:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2953:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9124:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7523:489;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5841:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6114:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4735:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8016:250;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6517:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9243:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1947:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6986:184;7069:6;7083;7097:16;7136:1;7139:7;7162:1;7148:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:37;;;;;;6986:184;;;:::o;8985:135::-;9090:25;;;;;;;;;;:::i;:::-;;;;;;;;3391:1142;3524:16;3543:9;3524:28;;3594:1;3562:10;:22;3573:10;3562:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;3558:83;;;3605:29;;;;;;;;;;:::i;:::-;;;;;;;;3558:83;3646:18;3667:10;:22;3678:10;3667:22;;;;;;;;;;;3646:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3717:1;3700:6;:13;:18;3696:284;;;3751:3;:12;;;3737:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3728:36;;3777:9;3772:119;3796:3;:12;;;3792:16;;:1;:16;3772:119;;;3866:10;3878:1;3855:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3845:36;;;;;;3837:45;;3825:6;3832:1;3825:9;;;;;;;;:::i;:::-;;;;;;;:57;;;;;3810:3;;;;;:::i;:::-;;;;3772:119;;;;3696:284;;;3924:3;:12;;;3907:29;;:6;:13;:29;3903:77;;3953:20;;;;;;;;;;;;;;3903:77;3696:284;3986:19;4011:20;4057:32;;;4091:10;4103:6;4034:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4011:99;;4117:12;4135:9;:14;;4155:3;:20;;;4135:50;;4177:7;4135:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4116:69;;;4192:14;4253;4228:39;;4240:9;4229:8;:20;;;;:::i;:::-;4228:39;;;;:::i;:::-;4216:8;:52;;;;;;:::i;:::-;4192:77;;4316:7;4279:44;;:15;:26;4295:3;:9;;;4279:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;4275:93;;;4340:21;;;;;;;;;;;;;;4275:93;4411:7;4373:15;:26;4389:3;:9;;;4373:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4432:10;:22;4443:10;4432:22;;;;;;;;;;;;4424:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4487:10;4466:62;4499:10;4511:7;4520;4466:62;;;;;;;;:::i;:::-;;;;;;;;3518:1015;;;;;;3391:1142;;;:::o;8864:117::-;8924:6;8945:16;8938:23;;8864:117;:::o;317:32::-;;;:::o;5081:756::-;5312:7;5283:6;5291:10;2313:34;2329:6;2337:9;2313:15;:34::i;:::-;2308:80;;2364:17;;;;;;;;;;;;;;2308:80;5372:1:::1;5331:43;;:15;:23;5347:6;5331:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;5327:92;;;5391:21;;;;;;;;;;;;;;5327:92;5425:17;5445:15;;:17;;;;;;;;;:::i;:::-;;;;;5425:37;;5468:15;5486:13;;:15;;;;;;;;;:::i;:::-;;;;;5468:33;;5532:82;;;;;;;;5548:6;5532:82;;;;;;5574:17;5532:82;;;;;;5603:9;5532:82;;;;::::0;5508:10:::1;:21;5519:9;5508:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5794:10;5626:184;;5702:6;5626:184;;5654:8;5626:184;5670:9;5687:7;5716:28;5752:17;5777:9;5626:184;;;;;;;;;;:::i;:::-;;;;;;;;5823:9;5816:16;;;;5081:756:::0;;;;;;;;;:::o;8270:590::-;8336:37;8381;8426;8471;8516;8561:19;8588;8615;8642;8691:6;8717;8743;8769;8795;8821:1;8830;8839;8848;8676:179;;;;;;;;;;;;;;;;;;8270:590;;;;;;;;;:::o;395:43::-;;;:::o;7174:345::-;7260:6;6779:13;6795:15;:23;6811:6;6795:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6779:45;;6851:1;6834:19;;:5;:19;;;6830:68;;;6870:21;;;;;;;;;;;;;;6830:68;6921:5;6907:19;;:10;:19;;;6903:68;;6958:5;6943:21;;;;;;;;;;;:::i;:::-;;;;;;;;6903:68;7308:13:::1;7278:43;;:11;:19;7290:6;7278:19;;;;;;;;;;;;;;;:26;;;;:43;7274:89;;;7338:18;;;;;;;;;;;;;;7274:89;7373:34;7389:6;7397:9;7373:15;:34::i;:::-;7369:61;;;7417:7;;7369:61;7436:11;:19;7448:6;7436:19;;;;;;;;;;;;;;;7461:9;7436:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7496:6;7482:32;;;7504:9;7482:32;;;;;;:::i;:::-;;;;;;;;6976:1;6773:209:::0;7174:345;;;:::o;2953:158::-;3035:71;3066:10;3078:9;3103:1;3089:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3035:30;:71::i;:::-;2953:158;;:::o;9124:115::-;9209:25;;;;;;;;;;:::i;:::-;;;;;;;;7523:489;7624:6;6779:13;6795:15;:23;6811:6;6795:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6779:45;;6851:1;6834:19;;:5;:19;;;6830:68;;;6870:21;;;;;;;;;;;;;;6830:68;6921:5;6907:19;;:10;:19;;;6903:68;;6958:5;6943:21;;;;;;;;;;;:::i;:::-;;;;;;;;6903:68;7654:6:::1;7662:9;2313:34;2329:6;2337:9;2313:15;:34::i;:::-;2308:80;;2364:17;;;;;;;;;;;;;;2308:80;7681:27:::2;7711:11;:19;7723:6;7711:19;;;;;;;;;;;;;;;7681:49;;7741:9;7736:226;7760:9;:16;;;;7756:1;:20;7736:226;;;7811:9;7795:25;;:9;7805:1;7795:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:25;;;7791:165;;;7832:12;7847:9;7876:1;7857:9;:16;;;;:20;;;;:::i;:::-;7847:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7832:46;;7903:4;7888:9;7898:1;7888:12;;;;;;;;:::i;:::-;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;7917:9;:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7942:5;;;7791:165;7778:3;;;;;:::i;:::-;;;;7736:226;;;;7989:6;7973:34;;;7997:9;7973:34;;;;;;:::i;:::-;;;;;;;;7675:337;6976:1:::1;;6773:209:::0;7523:489;;;:::o;5841:269::-;5898:13;5919:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5975:45;;;;;;;;5996:10;5975:45;;;;;;6017:1;5975:45;;;;;5941:15;:31;5957:14;;;;;;;;;;;5941:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6051:14;;;;;;;;;;6031:47;;;6067:10;6031:47;;;;;;:::i;:::-;;;;;;;;6091:14;;;;;;;;;;6084:21;;5841:269;:::o;353:38::-;;;:::o;6114:399::-;6209:14;6231:15;6254:13;6275:26;6361:1;6320:43;;:15;:23;6336:6;6320:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;6316:92;;;6380:21;;;;;;;;;;;;;;6316:92;6421:15;:23;6437:6;6421:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;6454:1;6457:15;:23;6473:6;6457:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6488:11;:19;6500:6;6488:19;;;;;;;;;;;;;;;6413:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6114:399;;;;;:::o;4735:342::-;4850:1;4809:43;;:15;:23;4825:6;4809:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;4805:92;;;4869:21;;;;;;;;;;;;;;4805:92;4902:17;4922:15;:23;4938:6;4922:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;4902:51;;4994:7;4959:15;:23;4975:6;4959:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5031:6;5012:60;;;5039:10;5064:7;5051:10;:20;;;;:::i;:::-;5012:60;;;;;;;:::i;:::-;;;;;;;;4799:278;4735:342;;:::o;8016:250::-;8079:34;8121:18;8147:23;8178:33;8234:1;8237:9;8248:5;8255;8226:35;;;;;;;;8016:250;;;;:::o;6517:215::-;6604:6;6779:13;6795:15;:23;6811:6;6795:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6779:45;;6851:1;6834:19;;:5;:19;;;6830:68;;;6870:21;;;;;;;;;;;;;;6830:68;6921:5;6907:19;;:10;:19;;;6903:68;;6958:5;6943:21;;;;;;;;;;;:::i;:::-;;;;;;;;6903:68;6644:6:::1;6623:66;;;6652:3;6657:15;:23;6673:6;6657:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;6623:66;;;;;;;:::i;:::-;;;;;;;;6703:15;:23;6719:6;6703:23;;;;;;;;;;;;;;;;6695:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6773:209:::0;6517:215;;;:::o;9243:116::-;9317:4;9329:25;;;;;;;;;;:::i;:::-;;;;;;;;1947:290;2027:4;2039:26;2068:11;:19;2080:6;2068:19;;;;;;;;;;;;;;;2039:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:9;2093:122;2117:9;:16;2113:1;:20;2093:122;;;2168:9;2152:25;;:9;2162:1;2152:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;2148:61;;;2196:4;2189:11;;;;;;2148:61;2135:3;;;;;:::i;:::-;;;;2093:122;;;;2227:5;2220:12;;;1947:290;;;;;:::o;7:89:16:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:114::-;510:6;544:5;538:12;528:22;;443:114;;;:::o;563:184::-;662:11;696:6;691:3;684:19;736:4;731:3;727:14;712:29;;563:184;;;;:::o;753:132::-;820:4;843:3;835:11;;873:4;868:3;864:14;856:22;;753:132;;;:::o;891:77::-;928:7;957:5;946:16;;891:77;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:179::-;1157:10;1178:46;1220:3;1212:6;1178:46;:::i;:::-;1256:4;1251:3;1247:14;1233:28;;1088:179;;;;:::o;1273:113::-;1343:4;1375;1370:3;1366:14;1358:22;;1273:113;;;:::o;1422:732::-;1541:3;1570:54;1618:5;1570:54;:::i;:::-;1640:86;1719:6;1714:3;1640:86;:::i;:::-;1633:93;;1750:56;1800:5;1750:56;:::i;:::-;1829:7;1860:1;1845:284;1870:6;1867:1;1864:13;1845:284;;;1946:6;1940:13;1973:63;2032:3;2017:13;1973:63;:::i;:::-;1966:70;;2059:60;2112:6;2059:60;:::i;:::-;2049:70;;1905:224;1892:1;1889;1885:9;1880:14;;1845:284;;;1849:14;2145:3;2138:10;;1546:608;;;1422:732;;;;:::o;2160:585::-;2355:4;2393:2;2382:9;2378:18;2370:26;;2406:69;2472:1;2461:9;2457:17;2448:6;2406:69;:::i;:::-;2485:70;2551:2;2540:9;2536:18;2527:6;2485:70;:::i;:::-;2602:9;2596:4;2592:20;2587:2;2576:9;2572:18;2565:48;2630:108;2733:4;2724:6;2630:108;:::i;:::-;2622:116;;2160:585;;;;;;:::o;2751:75::-;2784:6;2817:2;2811:9;2801:19;;2751:75;:::o;2832:117::-;2941:1;2938;2931:12;2955:117;3064:1;3061;3054:12;3078:101;3114:7;3154:18;3147:5;3143:30;3132:41;;3078:101;;;:::o;3185:120::-;3257:23;3274:5;3257:23;:::i;:::-;3250:5;3247:34;3237:62;;3295:1;3292;3285:12;3237:62;3185:120;:::o;3311:137::-;3356:5;3394:6;3381:20;3372:29;;3410:32;3436:5;3410:32;:::i;:::-;3311:137;;;;:::o;3454:126::-;3491:7;3531:42;3524:5;3520:54;3509:65;;3454:126;;;:::o;3586:96::-;3623:7;3652:24;3670:5;3652:24;:::i;:::-;3641:35;;3586:96;;;:::o;3688:122::-;3761:24;3779:5;3761:24;:::i;:::-;3754:5;3751:35;3741:63;;3800:1;3797;3790:12;3741:63;3688:122;:::o;3816:139::-;3862:5;3900:6;3887:20;3878:29;;3916:33;3943:5;3916:33;:::i;:::-;3816:139;;;;:::o;3961:472::-;4028:6;4036;4085:2;4073:9;4064:7;4060:23;4056:32;4053:119;;;4091:79;;:::i;:::-;4053:119;4211:1;4236:52;4280:7;4271:6;4260:9;4256:22;4236:52;:::i;:::-;4226:62;;4182:116;4337:2;4363:53;4408:7;4399:6;4388:9;4384:22;4363:53;:::i;:::-;4353:63;;4308:118;3961:472;;;;;:::o;4439:77::-;4476:7;4505:5;4494:16;;4439:77;;;:::o;4522:122::-;4595:24;4613:5;4595:24;:::i;:::-;4588:5;4585:35;4575:63;;4634:1;4631;4624:12;4575:63;4522:122;:::o;4650:139::-;4696:5;4734:6;4721:20;4712:29;;4750:33;4777:5;4750:33;:::i;:::-;4650:139;;;;:::o;4795:117::-;4904:1;4901;4894:12;4918:102;4959:6;5010:2;5006:7;5001:2;4994:5;4990:14;4986:28;4976:38;;4918:102;;;:::o;5026:180::-;5074:77;5071:1;5064:88;5171:4;5168:1;5161:15;5195:4;5192:1;5185:15;5212:281;5295:27;5317:4;5295:27;:::i;:::-;5287:6;5283:40;5425:6;5413:10;5410:22;5389:18;5377:10;5374:34;5371:62;5368:88;;;5436:18;;:::i;:::-;5368:88;5476:10;5472:2;5465:22;5255:238;5212:281;;:::o;5499:129::-;5533:6;5560:20;;:::i;:::-;5550:30;;5589:33;5617:4;5609:6;5589:33;:::i;:::-;5499:129;;;:::o;5634:311::-;5711:4;5801:18;5793:6;5790:30;5787:56;;;5823:18;;:::i;:::-;5787:56;5873:4;5865:6;5861:17;5853:25;;5933:4;5927;5923:15;5915:23;;5634:311;;;:::o;5951:117::-;6060:1;6057;6050:12;6091:710;6187:5;6212:81;6228:64;6285:6;6228:64;:::i;:::-;6212:81;:::i;:::-;6203:90;;6313:5;6342:6;6335:5;6328:21;6376:4;6369:5;6365:16;6358:23;;6429:4;6421:6;6417:17;6409:6;6405:30;6458:3;6450:6;6447:15;6444:122;;;6477:79;;:::i;:::-;6444:122;6592:6;6575:220;6609:6;6604:3;6601:15;6575:220;;;6684:3;6713:37;6746:3;6734:10;6713:37;:::i;:::-;6708:3;6701:50;6780:4;6775:3;6771:14;6764:21;;6651:144;6635:4;6630:3;6626:14;6619:21;;6575:220;;;6579:21;6193:608;;6091:710;;;;;:::o;6824:370::-;6895:5;6944:3;6937:4;6929:6;6925:17;6921:27;6911:122;;6952:79;;:::i;:::-;6911:122;7069:6;7056:20;7094:94;7184:3;7176:6;7169:4;7161:6;7157:17;7094:94;:::i;:::-;7085:103;;6901:293;6824:370;;;;:::o;7200:829::-;7302:6;7310;7318;7367:2;7355:9;7346:7;7342:23;7338:32;7335:119;;;7373:79;;:::i;:::-;7335:119;7493:1;7518:53;7563:7;7554:6;7543:9;7539:22;7518:53;:::i;:::-;7508:63;;7464:117;7620:2;7646:53;7691:7;7682:6;7671:9;7667:22;7646:53;:::i;:::-;7636:63;;7591:118;7776:2;7765:9;7761:18;7748:32;7807:18;7799:6;7796:30;7793:117;;;7829:79;;:::i;:::-;7793:117;7934:78;8004:7;7995:6;7984:9;7980:22;7934:78;:::i;:::-;7924:88;;7719:303;7200:829;;;;;:::o;8035:76::-;8071:7;8100:5;8089:16;;8035:76;;;:::o;8117:115::-;8202:23;8219:5;8202:23;:::i;:::-;8197:3;8190:36;8117:115;;:::o;8238:218::-;8329:4;8367:2;8356:9;8352:18;8344:26;;8380:69;8446:1;8435:9;8431:17;8422:6;8380:69;:::i;:::-;8238:218;;;;:::o;8462:109::-;8498:7;8538:26;8531:5;8527:38;8516:49;;8462:109;;;:::o;8577:115::-;8662:23;8679:5;8662:23;:::i;:::-;8657:3;8650:36;8577:115;;:::o;8698:218::-;8789:4;8827:2;8816:9;8812:18;8804:26;;8840:69;8906:1;8895:9;8891:17;8882:6;8840:69;:::i;:::-;8698:218;;;;:::o;8922:122::-;8995:24;9013:5;8995:24;:::i;:::-;8988:5;8985:35;8975:63;;9034:1;9031;9024:12;8975:63;8922:122;:::o;9050:139::-;9096:5;9134:6;9121:20;9112:29;;9150:33;9177:5;9150:33;:::i;:::-;9050:139;;;;:::o;9195:120::-;9267:23;9284:5;9267:23;:::i;:::-;9260:5;9257:34;9247:62;;9305:1;9302;9295:12;9247:62;9195:120;:::o;9321:137::-;9366:5;9404:6;9391:20;9382:29;;9420:32;9446:5;9420:32;:::i;:::-;9321:137;;;;:::o;9464:120::-;9536:23;9553:5;9536:23;:::i;:::-;9529:5;9526:34;9516:62;;9574:1;9571;9564:12;9516:62;9464:120;:::o;9590:137::-;9635:5;9673:6;9660:20;9651:29;;9689:32;9715:5;9689:32;:::i;:::-;9590:137;;;;:::o;9733:903::-;9824:6;9832;9840;9848;9856;9905:3;9893:9;9884:7;9880:23;9876:33;9873:120;;;9912:79;;:::i;:::-;9873:120;10032:1;10057:53;10102:7;10093:6;10082:9;10078:22;10057:53;:::i;:::-;10047:63;;10003:117;10159:2;10185:52;10229:7;10220:6;10209:9;10205:22;10185:52;:::i;:::-;10175:62;;10130:117;10286:2;10312:52;10356:7;10347:6;10336:9;10332:22;10312:52;:::i;:::-;10302:62;;10257:117;10413:2;10439:52;10483:7;10474:6;10463:9;10459:22;10439:52;:::i;:::-;10429:62;;10384:117;10540:3;10567:52;10611:7;10602:6;10591:9;10587:22;10567:52;:::i;:::-;10557:62;;10511:118;9733:903;;;;;;;;:::o;10642:118::-;10729:24;10747:5;10729:24;:::i;:::-;10724:3;10717:37;10642:118;;:::o;10766:222::-;10859:4;10897:2;10886:9;10882:18;10874:26;;10910:71;10978:1;10967:9;10963:17;10954:6;10910:71;:::i;:::-;10766:222;;;;:::o;10994:91::-;11030:7;11070:8;11063:5;11059:20;11048:31;;10994:91;;;:::o;11091:115::-;11176:23;11193:5;11176:23;:::i;:::-;11171:3;11164:36;11091:115;;:::o;11212:1072::-;11511:4;11549:3;11538:9;11534:19;11526:27;;11563:69;11629:1;11618:9;11614:17;11605:6;11563:69;:::i;:::-;11642:70;11708:2;11697:9;11693:18;11684:6;11642:70;:::i;:::-;11722;11788:2;11777:9;11773:18;11764:6;11722:70;:::i;:::-;11802;11868:2;11857:9;11853:18;11844:6;11802:70;:::i;:::-;11882:71;11948:3;11937:9;11933:19;11924:6;11882:71;:::i;:::-;11963;12029:3;12018:9;12014:19;12005:6;11963:71;:::i;:::-;12044;12110:3;12099:9;12095:19;12086:6;12044:71;:::i;:::-;12125;12191:3;12180:9;12176:19;12167:6;12125:71;:::i;:::-;12206;12272:3;12261:9;12257:19;12248:6;12206:71;:::i;:::-;11212:1072;;;;;;;;;;;;:::o;12290:218::-;12381:4;12419:2;12408:9;12404:18;12396:26;;12432:69;12498:1;12487:9;12483:17;12474:6;12432:69;:::i;:::-;12290:218;;;;:::o;12514:474::-;12582:6;12590;12639:2;12627:9;12618:7;12614:23;12610:32;12607:119;;;12645:79;;:::i;:::-;12607:119;12765:1;12790:53;12835:7;12826:6;12815:9;12811:22;12790:53;:::i;:::-;12780:63;;12736:117;12892:2;12918:53;12963:7;12954:6;12943:9;12939:22;12918:53;:::i;:::-;12908:63;;12863:118;12514:474;;;;;:::o;12994:327::-;13052:6;13101:2;13089:9;13080:7;13076:23;13072:32;13069:119;;;13107:79;;:::i;:::-;13069:119;13227:1;13252:52;13296:7;13287:6;13276:9;13272:22;13252:52;:::i;:::-;13242:62;;13198:116;12994:327;;;;:::o;13327:115::-;13412:23;13429:5;13412:23;:::i;:::-;13407:3;13400:36;13327:115;;:::o;13448:218::-;13539:4;13577:2;13566:9;13562:18;13554:26;;13590:69;13656:1;13645:9;13641:17;13632:6;13590:69;:::i;:::-;13448:218;;;;:::o;13672:118::-;13759:24;13777:5;13759:24;:::i;:::-;13754:3;13747:37;13672:118;;:::o;13796:114::-;13863:6;13897:5;13891:12;13881:22;;13796:114;;;:::o;13916:184::-;14015:11;14049:6;14044:3;14037:19;14089:4;14084:3;14080:14;14065:29;;13916:184;;;;:::o;14106:132::-;14173:4;14196:3;14188:11;;14226:4;14221:3;14217:14;14209:22;;14106:132;;;:::o;14244:108::-;14321:24;14339:5;14321:24;:::i;:::-;14316:3;14309:37;14244:108;;:::o;14358:179::-;14427:10;14448:46;14490:3;14482:6;14448:46;:::i;:::-;14526:4;14521:3;14517:14;14503:28;;14358:179;;;;:::o;14543:113::-;14613:4;14645;14640:3;14636:14;14628:22;;14543:113;;;:::o;14692:732::-;14811:3;14840:54;14888:5;14840:54;:::i;:::-;14910:86;14989:6;14984:3;14910:86;:::i;:::-;14903:93;;15020:56;15070:5;15020:56;:::i;:::-;15099:7;15130:1;15115:284;15140:6;15137:1;15134:13;15115:284;;;15216:6;15210:13;15243:63;15302:3;15287:13;15243:63;:::i;:::-;15236:70;;15329:60;15382:6;15329:60;:::i;:::-;15319:70;;15175:224;15162:1;15159;15155:9;15150:14;;15115:284;;;15119:14;15415:3;15408:10;;14816:608;;;14692:732;;;;:::o;15430:696::-;15653:4;15691:3;15680:9;15676:19;15668:27;;15705:69;15771:1;15760:9;15756:17;15747:6;15705:69;:::i;:::-;15784:70;15850:2;15839:9;15835:18;15826:6;15784:70;:::i;:::-;15864:72;15932:2;15921:9;15917:18;15908:6;15864:72;:::i;:::-;15983:9;15977:4;15973:20;15968:2;15957:9;15953:18;15946:48;16011:108;16114:4;16105:6;16011:108;:::i;:::-;16003:116;;15430:696;;;;;;;:::o;16132:120::-;16204:23;16221:5;16204:23;:::i;:::-;16197:5;16194:34;16184:62;;16242:1;16239;16232:12;16184:62;16132:120;:::o;16258:137::-;16303:5;16341:6;16328:20;16319:29;;16357:32;16383:5;16357:32;:::i;:::-;16258:137;;;;:::o;16401:470::-;16467:6;16475;16524:2;16512:9;16503:7;16499:23;16495:32;16492:119;;;16530:79;;:::i;:::-;16492:119;16650:1;16675:52;16719:7;16710:6;16699:9;16695:22;16675:52;:::i;:::-;16665:62;;16621:116;16776:2;16802:52;16846:7;16837:6;16826:9;16822:22;16802:52;:::i;:::-;16792:62;;16747:117;16401:470;;;;;:::o;16877:537::-;17046:4;17084:3;17073:9;17069:19;17061:27;;17098:69;17164:1;17153:9;17149:17;17140:6;17098:69;:::i;:::-;17177:70;17243:2;17232:9;17228:18;17219:6;17177:70;:::i;:::-;17257;17323:2;17312:9;17308:18;17299:6;17257:70;:::i;:::-;17337;17403:2;17392:9;17388:18;17379:6;17337:70;:::i;:::-;16877:537;;;;;;;:::o;17420:90::-;17454:7;17497:5;17490:13;17483:21;17472:32;;17420:90;;;:::o;17516:109::-;17597:21;17612:5;17597:21;:::i;:::-;17592:3;17585:34;17516:109;;:::o;17631:210::-;17718:4;17756:2;17745:9;17741:18;17733:26;;17769:65;17831:1;17820:9;17816:17;17807:6;17769:65;:::i;:::-;17631:210;;;;:::o;17847:169::-;17931:11;17965:6;17960:3;17953:19;18005:4;18000:3;17996:14;17981:29;;17847:169;;;;:::o;18022:165::-;18162:17;18158:1;18150:6;18146:14;18139:41;18022:165;:::o;18193:366::-;18335:3;18356:67;18420:2;18415:3;18356:67;:::i;:::-;18349:74;;18432:93;18521:3;18432:93;:::i;:::-;18550:2;18545:3;18541:12;18534:19;;18193:366;;;:::o;18565:419::-;18731:4;18769:2;18758:9;18754:18;18746:26;;18818:9;18812:4;18808:20;18804:1;18793:9;18789:17;18782:47;18846:131;18972:4;18846:131;:::i;:::-;18838:139;;18565:419;;;:::o;18990:169::-;19130:21;19126:1;19118:6;19114:14;19107:45;18990:169;:::o;19165:366::-;19307:3;19328:67;19392:2;19387:3;19328:67;:::i;:::-;19321:74;;19404:93;19493:3;19404:93;:::i;:::-;19522:2;19517:3;19513:12;19506:19;;19165:366;;;:::o;19537:419::-;19703:4;19741:2;19730:9;19726:18;19718:26;;19790:9;19784:4;19780:20;19776:1;19765:9;19761:17;19754:47;19818:131;19944:4;19818:131;:::i;:::-;19810:139;;19537:419;;;:::o;19962:332::-;20083:4;20121:2;20110:9;20106:18;20098:26;;20134:71;20202:1;20191:9;20187:17;20178:6;20134:71;:::i;:::-;20215:72;20283:2;20272:9;20268:18;20259:6;20215:72;:::i;:::-;19962:332;;;;;:::o;20300:180::-;20348:77;20345:1;20338:88;20445:4;20442:1;20435:15;20469:4;20466:1;20459:15;20486:180;20534:77;20531:1;20524:88;20631:4;20628:1;20621:15;20655:4;20652:1;20645:15;20672:233;20711:3;20734:24;20752:5;20734:24;:::i;:::-;20725:33;;20780:66;20773:5;20770:77;20767:103;;;20850:18;;:::i;:::-;20767:103;20897:1;20890:5;20886:13;20879:20;;20672:233;;;:::o;20911:114::-;20978:6;21012:5;21006:12;20996:22;;20911:114;;;:::o;21031:184::-;21130:11;21164:6;21159:3;21152:19;21204:4;21199:3;21195:14;21180:29;;21031:184;;;;:::o;21221:132::-;21288:4;21311:3;21303:11;;21341:4;21336:3;21332:14;21324:22;;21221:132;;;:::o;21359:108::-;21436:24;21454:5;21436:24;:::i;:::-;21431:3;21424:37;21359:108;;:::o;21473:179::-;21542:10;21563:46;21605:3;21597:6;21563:46;:::i;:::-;21641:4;21636:3;21632:14;21618:28;;21473:179;;;;:::o;21658:113::-;21728:4;21760;21755:3;21751:14;21743:22;;21658:113;;;:::o;21807:732::-;21926:3;21955:54;22003:5;21955:54;:::i;:::-;22025:86;22104:6;22099:3;22025:86;:::i;:::-;22018:93;;22135:56;22185:5;22135:56;:::i;:::-;22214:7;22245:1;22230:284;22255:6;22252:1;22249:13;22230:284;;;22331:6;22325:13;22358:63;22417:3;22402:13;22358:63;:::i;:::-;22351:70;;22444:60;22497:6;22444:60;:::i;:::-;22434:70;;22290:224;22277:1;22274;22270:9;22265:14;;22230:284;;;22234:14;22530:3;22523:10;;21931:608;;;21807:732;;;;:::o;22545:483::-;22716:4;22754:2;22743:9;22739:18;22731:26;;22767:71;22835:1;22824:9;22820:17;22811:6;22767:71;:::i;:::-;22885:9;22879:4;22875:20;22870:2;22859:9;22855:18;22848:48;22913:108;23016:4;23007:6;22913:108;:::i;:::-;22905:116;;22545:483;;;;;:::o;23034:98::-;23085:6;23119:5;23113:12;23103:22;;23034:98;;;:::o;23138:147::-;23239:11;23276:3;23261:18;;23138:147;;;;:::o;23291:307::-;23359:1;23369:113;23383:6;23380:1;23377:13;23369:113;;;23468:1;23463:3;23459:11;23453:18;23449:1;23444:3;23440:11;23433:39;23405:2;23402:1;23398:10;23393:15;;23369:113;;;23500:6;23497:1;23494:13;23491:101;;;23580:1;23571:6;23566:3;23562:16;23555:27;23491:101;23340:258;23291:307;;;:::o;23604:373::-;23708:3;23736:38;23768:5;23736:38;:::i;:::-;23790:88;23871:6;23866:3;23790:88;:::i;:::-;23783:95;;23887:52;23932:6;23927:3;23920:4;23913:5;23909:16;23887:52;:::i;:::-;23964:6;23959:3;23955:16;23948:23;;23712:265;23604:373;;;;:::o;23983:271::-;24113:3;24135:93;24224:3;24215:6;24135:93;:::i;:::-;24128:100;;24245:3;24238:10;;23983:271;;;;:::o;24260:191::-;24300:4;24320:20;24338:1;24320:20;:::i;:::-;24315:25;;24354:20;24372:1;24354:20;:::i;:::-;24349:25;;24393:1;24390;24387:8;24384:34;;;24398:18;;:::i;:::-;24384:34;24443:1;24440;24436:9;24428:17;;24260:191;;;;:::o;24457:348::-;24497:7;24520:20;24538:1;24520:20;:::i;:::-;24515:25;;24554:20;24572:1;24554:20;:::i;:::-;24549:25;;24742:1;24674:66;24670:74;24667:1;24664:81;24659:1;24652:9;24645:17;24641:105;24638:131;;;24749:18;;:::i;:::-;24638:131;24797:1;24794;24790:9;24779:20;;24457:348;;;;:::o;24811:305::-;24851:3;24870:20;24888:1;24870:20;:::i;:::-;24865:25;;24904:20;24922:1;24904:20;:::i;:::-;24899:25;;25058:1;24990:66;24986:74;24983:1;24980:81;24977:107;;;25064:18;;:::i;:::-;24977:107;25108:1;25105;25101:9;25094:16;;24811:305;;;;:::o;25122:188::-;25161:4;25181:19;25198:1;25181:19;:::i;:::-;25176:24;;25214:19;25231:1;25214:19;:::i;:::-;25209:24;;25252:1;25249;25246:8;25243:34;;;25257:18;;:::i;:::-;25243:34;25302:1;25299;25295:9;25287:17;;25122:188;;;;:::o;25316:426::-;25457:4;25495:2;25484:9;25480:18;25472:26;;25508:71;25576:1;25565:9;25561:17;25552:6;25508:71;:::i;:::-;25589:70;25655:2;25644:9;25640:18;25631:6;25589:70;:::i;:::-;25669:66;25731:2;25720:9;25716:18;25707:6;25669:66;:::i;:::-;25316:426;;;;;;:::o;25748:652::-;25947:4;25985:3;25974:9;25970:19;25962:27;;25999:71;26067:1;26056:9;26052:17;26043:6;25999:71;:::i;:::-;26080:72;26148:2;26137:9;26133:18;26124:6;26080:72;:::i;:::-;26162:70;26228:2;26217:9;26213:18;26204:6;26162:70;:::i;:::-;26242;26308:2;26297:9;26293:18;26284:6;26242:70;:::i;:::-;26322:71;26388:3;26377:9;26373:19;26364:6;26322:71;:::i;:::-;25748:652;;;;;;;;:::o;26406:222::-;26499:4;26537:2;26526:9;26522:18;26514:26;;26550:71;26618:1;26607:9;26603:17;26594:6;26550:71;:::i;:::-;26406:222;;;;:::o;26634:180::-;26682:77;26679:1;26672:88;26779:4;26776:1;26769:15;26803:4;26800:1;26793:15;26820:183;26858:3;26881:23;26898:5;26881:23;:::i;:::-;26872:32;;26926:18;26919:5;26916:29;26913:55;;;26948:18;;:::i;:::-;26913:55;26995:1;26988:5;26984:13;26977:20;;26820:183;;;:::o;27009:262::-;27048:3;27067:19;27084:1;27067:19;:::i;:::-;27062:24;;27100:19;27117:1;27100:19;:::i;:::-;27095:24;;27213:1;27185:26;27181:34;27178:1;27175:41;27172:67;;;27219:18;;:::i;:::-;27172:67;27263:1;27260;27256:9;27249:16;;27009:262;;;;:::o;27277:60::-;27305:3;27326:5;27319:12;;27277:60;;;:::o;27343:140::-;27392:9;27425:52;27443:33;27452:23;27469:5;27452:23;:::i;:::-;27443:33;:::i;:::-;27425:52;:::i;:::-;27412:65;;27343:140;;;:::o;27489:129::-;27575:36;27605:5;27575:36;:::i;:::-;27570:3;27563:49;27489:129;;:::o;27624:328::-;27743:4;27781:2;27770:9;27766:18;27758:26;;27794:70;27861:1;27850:9;27846:17;27837:6;27794:70;:::i;:::-;27874:71;27941:2;27930:9;27926:18;27917:6;27874:71;:::i;:::-;27624:328;;;;;:::o;27958:330::-;28078:4;28116:2;28105:9;28101:18;28093:26;;28129:71;28197:1;28186:9;28182:17;28173:6;28129:71;:::i;:::-;28210;28277:2;28266:9;28262:18;28253:6;28210:71;:::i;:::-;27958:330;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2269800","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","MAX_CONSUMERS()":"infinite","acceptSubscriptionOwnerTransfer(uint64)":"723","addConsumer(uint64,address)":"infinite","cancelSubscription(uint64,address)":"infinite","consumerIsAdded(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"infinite","fundSubscription(uint64,uint96)":"infinite","getConfig()":"infinite","getFallbackWeiPerUnitLink()":"427","getFeeConfig()":"infinite","getRequestConfig()":"908","getSubscription(uint64)":"infinite","pendingRequestExists(uint64)":"791","removeConsumer(uint64,address)":"infinite","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"966"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","MAX_CONSUMERS()":"64d51a2a","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","consumerIsAdded(uint64,address)":"ed5eb06d","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"08e3898e","fundSubscription(uint64,uint96)":"afc69b53","getConfig()":"c3f909d4","getFallbackWeiPerUnitLink()":"356dac71","getFeeConfig()":"5fbbc0d2","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackWeiPerUnitLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n  uint16 public immutable MAX_CONSUMERS = 100;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n  error TooManyConsumers();\\n  error InvalidConsumer();\\n  error InvalidRandomWords();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n  event ConsumerAdded(uint64 indexed subId, address consumer);\\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n  mapping(uint64 => address[]) s_consumers; /* subId */ /* consumers */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\\n    address[] memory consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(\\n    uint256 _requestId,\\n    address _consumer,\\n    uint256[] memory _words\\n  ) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override onlyValidConsumer(_subId, msg.sender) returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n\\n    if (consumerIsAdded(_subId, _consumer)) {\\n      return;\\n    }\\n\\n    s_consumers[_subId].push(_consumer);\\n    emit ConsumerAdded(_subId, _consumer);\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer)\\n    external\\n    override\\n    onlySubOwner(_subId)\\n    onlyValidConsumer(_subId, _consumer)\\n  {\\n    address[] storage consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[consumers.length - 1];\\n        consumers[i] = last;\\n        consumers.pop();\\n        break;\\n      }\\n    }\\n\\n    emit ConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  function getConfig()\\n    external\\n    view\\n    returns (\\n      uint16 minimumRequestConfirmations,\\n      uint32 maxGasLimit,\\n      uint32 stalenessSeconds,\\n      uint32 gasAfterPaymentCalculation\\n    )\\n  {\\n    return (4, 2_500_000, 2_700, 33285);\\n  }\\n\\n  function getFeeConfig()\\n    external\\n    view\\n    returns (\\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\\n      uint24 reqsForTier2,\\n      uint24 reqsForTier3,\\n      uint24 reqsForTier4,\\n      uint24 reqsForTier5\\n    )\\n  {\\n    return (\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      0,\\n      0,\\n      0,\\n      0\\n    );\\n  }\\n\\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\\n    return 4000000000000000; // 0.004 Ether\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0x05006a64339914b08f67180caf5dd29f95e74fe3993021ff839a98029f399e63\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":340,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"0","type":"t_uint64"},{"astId":343,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":346,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"2","type":"t_uint256"},{"astId":356,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(Subscription)351_storage)"},{"astId":361,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_uint64,t_array(t_address)dyn_storage)"},{"astId":373,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(Request)368_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_uint256,t_struct(Request)368_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)368_storage"},"t_mapping(t_uint64,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint64,t_struct(Subscription)351_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)351_storage"},"t_struct(Request)368_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":363,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":365,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":367,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)351_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":348,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":350,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"notice":"fulfillRandomWordsWithOverride allows the user to pass in their own random words."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"}},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1174":{"entryPoint":null,"id":1174,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1659:258:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:16"},"nodeType":"YulFunctionCall","src":"1759:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:16"},"nodeType":"YulFunctionCall","src":"1778:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:16"},"nodeType":"YulFunctionCall","src":"1772:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:16"},"nodeType":"YulFunctionCall","src":"1752:39:16"},"nodeType":"YulExpressionStatement","src":"1752:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:16"},"nodeType":"YulFunctionCall","src":"1696:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:16","statements":[{"nodeType":"YulAssignment","src":"1712:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:16"},"nodeType":"YulFunctionCall","src":"1717:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:16","statements":[]},"src":"1688:113:16"},{"body":{"nodeType":"YulBlock","src":"1835:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:16"},"nodeType":"YulFunctionCall","src":"1881:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:16"},"nodeType":"YulFunctionCall","src":"1874:27:16"},"nodeType":"YulExpressionStatement","src":"1874:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:16"},"nodeType":"YulFunctionCall","src":"1813:13:16"},"nodeType":"YulIf","src":"1810:101:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:16","type":""}],"src":"1610:307:16"},{"body":{"nodeType":"YulBlock","src":"2018:326:16","statements":[{"nodeType":"YulAssignment","src":"2028:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:16"},"nodeType":"YulFunctionCall","src":"2053:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:16"},"nodeType":"YulFunctionCall","src":"2037:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:16"},"nodeType":"YulFunctionCall","src":"2112:21:16"},"nodeType":"YulExpressionStatement","src":"2112:21:16"},{"nodeType":"YulVariableDeclaration","src":"2142:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:16"},"nodeType":"YulFunctionCall","src":"2153:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:16"},"nodeType":"YulFunctionCall","src":"2209:79:16"},"nodeType":"YulExpressionStatement","src":"2209:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:16"},"nodeType":"YulFunctionCall","src":"2184:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:16"},"nodeType":"YulFunctionCall","src":"2181:25:16"},"nodeType":"YulIf","src":"2178:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:16"},"nodeType":"YulFunctionCall","src":"2299:39:16"},"nodeType":"YulExpressionStatement","src":"2299:39:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:16","type":""}],"src":"1923:421:16"},{"body":{"nodeType":"YulBlock","src":"2437:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:16"},"nodeType":"YulFunctionCall","src":"2488:79:16"},"nodeType":"YulExpressionStatement","src":"2488:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:16"},"nodeType":"YulFunctionCall","src":"2461:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:16"},"nodeType":"YulFunctionCall","src":"2457:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:16"},"nodeType":"YulFunctionCall","src":"2450:35:16"},"nodeType":"YulIf","src":"2447:122:16"},{"nodeType":"YulVariableDeclaration","src":"2578:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:16"},"nodeType":"YulFunctionCall","src":"2592:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:16"},"nodeType":"YulFunctionCall","src":"2682:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:16"},"nodeType":"YulFunctionCall","src":"2623:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:16","type":""}],"src":"2364:355:16"},{"body":{"nodeType":"YulBlock","src":"2839:739:16","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:16"},"nodeType":"YulFunctionCall","src":"2887:79:16"},"nodeType":"YulExpressionStatement","src":"2887:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:16"},"nodeType":"YulFunctionCall","src":"2856:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:16"},"nodeType":"YulFunctionCall","src":"2852:32:16"},"nodeType":"YulIf","src":"2849:119:16"},{"nodeType":"YulBlock","src":"2978:291:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:16"},"nodeType":"YulFunctionCall","src":"3013:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:16"},"nodeType":"YulFunctionCall","src":"3007:24:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:16"},"nodeType":"YulFunctionCall","src":"3080:79:16"},"nodeType":"YulExpressionStatement","src":"3080:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:16"},"nodeType":"YulFunctionCall","src":"3047:30:16"},"nodeType":"YulIf","src":"3044:117:16"},{"nodeType":"YulAssignment","src":"3175:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:16"},"nodeType":"YulFunctionCall","src":"3227:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:16"},"nodeType":"YulFunctionCall","src":"3185:74:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:16"}]}]},{"nodeType":"YulBlock","src":"3279:292:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:16"},"nodeType":"YulFunctionCall","src":"3314:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:16"},"nodeType":"YulFunctionCall","src":"3308:25:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:16"},"nodeType":"YulFunctionCall","src":"3382:79:16"},"nodeType":"YulExpressionStatement","src":"3382:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:16"},"nodeType":"YulFunctionCall","src":"3349:30:16"},"nodeType":"YulIf","src":"3346:117:16"},{"nodeType":"YulAssignment","src":"3477:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:16"},"nodeType":"YulFunctionCall","src":"3529:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:16"},"nodeType":"YulFunctionCall","src":"3487:74:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:16","type":""}],"src":"2725:853:16"},{"body":{"nodeType":"YulBlock","src":"3612:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:16"},"nodeType":"YulFunctionCall","src":"3622:88:16"},"nodeType":"YulExpressionStatement","src":"3622:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:16"},"nodeType":"YulFunctionCall","src":"3719:15:16"},"nodeType":"YulExpressionStatement","src":"3719:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:16"},"nodeType":"YulFunctionCall","src":"3743:15:16"},"nodeType":"YulExpressionStatement","src":"3743:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:16"},{"body":{"nodeType":"YulBlock","src":"3821:269:16","statements":[{"nodeType":"YulAssignment","src":"3831:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:16"},"nodeType":"YulFunctionCall","src":"3841:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:16"},"nodeType":"YulFunctionCall","src":"3888:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:16","statements":[{"nodeType":"YulAssignment","src":"3953:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:16"},"nodeType":"YulFunctionCall","src":"3963:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:16"},"nodeType":"YulFunctionCall","src":"3912:26:16"},"nodeType":"YulIf","src":"3909:81:16"},{"body":{"nodeType":"YulBlock","src":"4042:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:16"},"nodeType":"YulFunctionCall","src":"4056:18:16"},"nodeType":"YulExpressionStatement","src":"4056:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:16"},"nodeType":"YulFunctionCall","src":"4026:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:16"},"nodeType":"YulFunctionCall","src":"4003:38:16"},"nodeType":"YulIf","src":"4000:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:16","type":""}],"src":"3770:320:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002501380380620025018339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61214980620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611513565b6102bc565b6040516100fb919061155b565b60405180910390f35b61010c61039e565b604051610119919061160f565b60405180910390f35b61013c60048036038101906101379190611667565b610430565b60405161014991906116d5565b60405180910390f35b61016c6004803603810190610167919061171c565b610476565b005b6101886004803603810190610183919061175c565b61058e565b005b6101a4600480360381019061019f919061175c565b6105ee565b005b6101c060048036038101906101bb9190611667565b61060e565b6040516101cd91906116d5565b60405180910390f35b6101f060048036038101906101eb91906117af565b610695565b6040516101fd91906117eb565b60405180910390f35b61020e61074d565b60405161021b919061160f565b60405180910390f35b61023e60048036038101906102399190611832565b6107df565b005b61025a600480360381019061025591906119a7565b6107f5565b005b61027660048036038101906102719190611667565b610857565b604051610283919061160f565b60405180910390f35b6102a660048036038101906102a19190611a2a565b6108bf565b6040516102b3919061155b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611a99565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a99565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b3d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611bcf565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611c61565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ccd565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611d5f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611a99565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611a99565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611c61565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611dbb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ccd565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611e51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611ee3565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611e51565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611f4f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061155b565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611fe1565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a261187c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612001565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190612085565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e91906120e6565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611fe1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384612001565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1612001565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0612001565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419612001565b5b0492506008810190505b612710831061144957612710838161143f5761143e612001565b5b0492506004810190505b6064831061146c576064838161146257611461612001565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114f0816114bb565b81146114fb57600080fd5b50565b60008135905061150d816114e7565b92915050565b600060208284031215611529576115286114b1565b5b6000611537848285016114fe565b91505092915050565b60008115159050919050565b61155581611540565b82525050565b6000602082019050611570600083018461154c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115b0578082015181840152602081019050611595565b838111156115bf576000848401525b50505050565b6000601f19601f8301169050919050565b60006115e182611576565b6115eb8185611581565b93506115fb818560208601611592565b611604816115c5565b840191505092915050565b6000602082019050818103600083015261162981846115d6565b905092915050565b6000819050919050565b61164481611631565b811461164f57600080fd5b50565b6000813590506116618161163b565b92915050565b60006020828403121561167d5761167c6114b1565b5b600061168b84828501611652565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116bf82611694565b9050919050565b6116cf816116b4565b82525050565b60006020820190506116ea60008301846116c6565b92915050565b6116f9816116b4565b811461170457600080fd5b50565b600081359050611716816116f0565b92915050565b60008060408385031215611733576117326114b1565b5b600061174185828601611707565b925050602061175285828601611652565b9150509250929050565b600080600060608486031215611775576117746114b1565b5b600061178386828701611707565b935050602061179486828701611707565b92505060406117a586828701611652565b9150509250925092565b6000602082840312156117c5576117c46114b1565b5b60006117d384828501611707565b91505092915050565b6117e581611631565b82525050565b600060208201905061180060008301846117dc565b92915050565b61180f81611540565b811461181a57600080fd5b50565b60008135905061182c81611806565b92915050565b60008060408385031215611849576118486114b1565b5b600061185785828601611707565b92505060206118688582860161181d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118b4826115c5565b810181811067ffffffffffffffff821117156118d3576118d261187c565b5b80604052505050565b60006118e66114a7565b90506118f282826118ab565b919050565b600067ffffffffffffffff8211156119125761191161187c565b5b61191b826115c5565b9050602081019050919050565b82818337600083830152505050565b600061194a611945846118f7565b6118dc565b90508281526020810184848401111561196657611965611877565b5b611971848285611928565b509392505050565b600082601f83011261198e5761198d611872565b5b813561199e848260208601611937565b91505092915050565b600080600080608085870312156119c1576119c06114b1565b5b60006119cf87828801611707565b94505060206119e087828801611707565b93505060406119f187828801611652565b925050606085013567ffffffffffffffff811115611a1257611a116114b6565b5b611a1e87828801611979565b91505092959194509250565b60008060408385031215611a4157611a406114b1565b5b6000611a4f85828601611707565b9250506020611a6085828601611707565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ab157607f821691505b60208210811415611ac557611ac4611a6a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b27602183611581565b9150611b3282611acb565b604082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611bb9603d83611581565b9150611bc482611b5d565b604082019050919050565b60006020820190508181036000830152611be881611bac565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c4b602d83611581565b9150611c5682611bef565b604082019050919050565b60006020820190508181036000830152611c7a81611c3e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611cb7601883611581565b9150611cc282611c81565b602082019050919050565b60006020820190508181036000830152611ce681611caa565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d49602983611581565b9150611d5482611ced565b604082019050919050565b60006020820190508181036000830152611d7881611d3c565b9050919050565b600081905092915050565b6000611d9582611576565b611d9f8185611d7f565b9350611daf818560208601611592565b80840191505092915050565b6000611dc78285611d8a565b9150611dd38284611d8a565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e3b602583611581565b9150611e4682611ddf565b604082019050919050565b60006020820190508181036000830152611e6a81611e2e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ecd602483611581565b9150611ed882611e71565b604082019050919050565b60006020820190508181036000830152611efc81611ec0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f39601983611581565b9150611f4482611f03565b602082019050919050565b60006020820190508181036000830152611f6881611f2c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fcb603283611581565b9150611fd682611f6f565b604082019050919050565b60006020820190508181036000830152611ffa81611fbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061205782612030565b612061818561203b565b9350612071818560208601611592565b61207a816115c5565b840191505092915050565b600060808201905061209a60008301876116c6565b6120a760208301866116c6565b6120b460408301856117dc565b81810360608301526120c6818461204c565b905095945050505050565b6000815190506120e0816114e7565b92915050565b6000602082840312156120fc576120fb6114b1565b5b600061210a848285016120d1565b9150509291505056fea26469706673582212209ac6e78aee6ff3667130b784a600785604544a8e059f588b19b414358310e4c964736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2501 CODESIZE SUB DUP1 PUSH3 0x2501 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2149 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP5 DUP3 DUP6 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1570 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1595 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x15EB DUP2 DUP6 PUSH2 0x1581 JUMP JUMPDEST SWAP4 POP PUSH2 0x15FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x1604 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1629 DUP2 DUP5 PUSH2 0x15D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP2 EQ PUSH2 0x164F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1661 DUP2 PUSH2 0x163B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168B DUP5 DUP3 DUP6 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F9 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1716 DUP2 PUSH2 0x16F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1741 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1752 DUP6 DUP3 DUP7 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1783 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1794 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17A5 DUP7 DUP3 DUP8 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP2 EQ PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182C DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1857 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1868 DUP6 DUP3 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18B4 DUP3 PUSH2 0x15C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 PUSH2 0x14A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F2 DUP3 DUP3 PUSH2 0x18AB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH2 0x191B DUP3 PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194A PUSH2 0x1945 DUP5 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x1877 JUMP JUMPDEST JUMPDEST PUSH2 0x1971 DUP5 DUP3 DUP6 PUSH2 0x1928 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x1872 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x199E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CF DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19E0 DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x14B6 JUMP JUMPDEST JUMPDEST PUSH2 0x1A1E DUP8 DUP3 DUP9 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x21 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB9 PUSH1 0x3D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC4 DUP3 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE8 DUP2 PUSH2 0x1BAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4B PUSH1 0x2D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C56 DUP3 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7A DUP2 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 PUSH1 0x18 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE6 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D49 PUSH1 0x29 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D54 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D95 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x1D9F DUP2 DUP6 PUSH2 0x1D7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 DUP3 DUP6 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP3 DUP5 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3B PUSH1 0x25 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E46 DUP3 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E6A DUP2 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECD PUSH1 0x24 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED8 DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F39 PUSH1 0x19 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F44 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F68 DUP2 PUSH2 0x1F2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCB PUSH1 0x32 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD6 DUP3 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFA DUP2 PUSH2 0x1FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2057 DUP3 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x2061 DUP2 DUP6 PUSH2 0x203B JUMP JUMPDEST SWAP4 POP PUSH2 0x2071 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x207A DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20C6 DUP2 DUP5 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20E0 DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210A DUP5 DUP3 DUP6 ADD PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xC6 0xE7 DUP11 0xEE PUSH16 0xF3667130B784A600785604544A8E059F PC DUP12 NOT 0xB4 EQ CALLDATALOAD DUP4 LT 0xE4 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"628:16679:4:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16679;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:16679:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2022":{"entryPoint":4500,"id":2022,"parameterSlots":4,"returnSlots":0},"@_approve_1888":{"entryPoint":2576,"id":1888,"parameterSlots":2,"returnSlots":0},"@_baseURI_1325":{"entryPoint":4190,"id":1325,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2009":{"entryPoint":4494,"id":2009,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1996":{"entryPoint":4506,"id":1996,"parameterSlots":4,"returnSlots":1},"@_exists_1557":{"entryPoint":4429,"id":1557,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1591":{"entryPoint":2761,"id":1591,"parameterSlots":2,"returnSlots":1},"@_msgSender_2666":{"entryPoint":2568,"id":2666,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1539":{"entryPoint":3672,"id":1539,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1934":{"entryPoint":2493,"id":1934,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1526":{"entryPoint":4098,"id":1526,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1920":{"entryPoint":3733,"id":1920,"parameterSlots":3,"returnSlots":0},"@_transfer_1864":{"entryPoint":2910,"id":1864,"parameterSlots":3,"returnSlots":0},"@approve_1368":{"entryPoint":1142,"id":1368,"parameterSlots":2,"returnSlots":0},"@balanceOf_1229":{"entryPoint":1685,"id":1229,"parameterSlots":1,"returnSlots":1},"@getApproved_1386":{"entryPoint":1072,"id":1386,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1421":{"entryPoint":2239,"id":1421,"parameterSlots":2,"returnSlots":1},"@isContract_2342":{"entryPoint":5252,"id":2342,"parameterSlots":1,"returnSlots":1},"@log10_3589":{"entryPoint":4913,"id":3589,"parameterSlots":1,"returnSlots":1},"@name_1267":{"entryPoint":926,"id":1267,"parameterSlots":0,"returnSlots":1},"@ownerOf_1257":{"entryPoint":1550,"id":1257,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1467":{"entryPoint":1518,"id":1467,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1497":{"entryPoint":2037,"id":1497,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1403":{"entryPoint":2015,"id":1403,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1205":{"entryPoint":700,"id":1205,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2874":{"entryPoint":2387,"id":2874,"parameterSlots":1,"returnSlots":1},"@symbol_1277":{"entryPoint":1869,"id":1277,"parameterSlots":0,"returnSlots":1},"@toString_2734":{"entryPoint":4213,"id":2734,"parameterSlots":1,"returnSlots":1},"@tokenURI_1316":{"entryPoint":2135,"id":1316,"parameterSlots":1,"returnSlots":1},"@transferFrom_1448":{"entryPoint":1422,"id":1448,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6455,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6698,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5980,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6567,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6194,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5452,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7230,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7872,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7980,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7611,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8325,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7265,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7907,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6123,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6364,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5287,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6391,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8240,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5494,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8251,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5505,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7551,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5812,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5440,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5780,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5681,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6440,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6809,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6315,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6762,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6268,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6258,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6263,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5302,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5297,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5573,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7151,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7647,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7793,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7939,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7405,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7297,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7005,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6150,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5351,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5691,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23167:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:105:16","statements":[{"nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:16"},"nodeType":"YulFunctionCall","src":"589:12:16"},"nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:16"},"nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:16"},"nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:16"},"nodeType":"YulFunctionCall","src":"544:42:16"},"nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nodeType":"YulBlock","src":"666:86:16","statements":[{"nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:16"},"nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:16"},"nodeType":"YulFunctionCall","src":"871:79:16"},"nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:16"},"nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:16"},"nodeType":"YulFunctionCall","src":"836:32:16"},"nodeType":"YulIf","src":"833:119:16"},{"nodeType":"YulBlock","src":"962:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:16"},"nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:16"},"nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nodeType":"YulBlock","src":"1133:48:16","statements":[{"nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:16"},"nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:16"},"nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:16"},"nodeType":"YulFunctionCall","src":"1256:34:16"},"nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nodeType":"YulBlock","src":"1394:118:16","statements":[{"nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:16"},"nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:16"},"nodeType":"YulFunctionCall","src":"1440:65:16"},"nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nodeType":"YulBlock","src":"1577:40:16","statements":[{"nodeType":"YulAssignment","src":"1588:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:16"},"nodeType":"YulFunctionCall","src":"1598:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:16","type":""}],"src":"1518:99:16"},{"body":{"nodeType":"YulBlock","src":"1719:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:16"},"nodeType":"YulFunctionCall","src":"1729:19:16"},"nodeType":"YulExpressionStatement","src":"1729:19:16"},{"nodeType":"YulAssignment","src":"1757:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:16","type":""}],"src":"1623:169:16"},{"body":{"nodeType":"YulBlock","src":"1847:258:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:16"},"nodeType":"YulFunctionCall","src":"1947:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:16"},"nodeType":"YulFunctionCall","src":"1966:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:16"},"nodeType":"YulFunctionCall","src":"1960:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:16"},"nodeType":"YulFunctionCall","src":"1940:39:16"},"nodeType":"YulExpressionStatement","src":"1940:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:16"},"nodeType":"YulFunctionCall","src":"1884:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:16","statements":[{"nodeType":"YulAssignment","src":"1900:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:16"},"nodeType":"YulFunctionCall","src":"1905:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:16","statements":[]},"src":"1876:113:16"},{"body":{"nodeType":"YulBlock","src":"2023:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:16"},"nodeType":"YulFunctionCall","src":"2069:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:16"},"nodeType":"YulFunctionCall","src":"2062:27:16"},"nodeType":"YulExpressionStatement","src":"2062:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:16"},"nodeType":"YulFunctionCall","src":"2001:13:16"},"nodeType":"YulIf","src":"1998:101:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:16","type":""}],"src":"1798:307:16"},{"body":{"nodeType":"YulBlock","src":"2159:54:16","statements":[{"nodeType":"YulAssignment","src":"2169:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:16"},"nodeType":"YulFunctionCall","src":"2183:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:16"},"nodeType":"YulFunctionCall","src":"2199:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:16"},"nodeType":"YulFunctionCall","src":"2179:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:16","type":""}],"src":"2111:102:16"},{"body":{"nodeType":"YulBlock","src":"2311:272:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:16"},"nodeType":"YulFunctionCall","src":"2335:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:16"},"nodeType":"YulFunctionCall","src":"2390:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:16"},"nodeType":"YulFunctionCall","src":"2492:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:16"},"nodeType":"YulFunctionCall","src":"2470:52:16"},"nodeType":"YulExpressionStatement","src":"2470:52:16"},{"nodeType":"YulAssignment","src":"2531:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:16"},"nodeType":"YulFunctionCall","src":"2547:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:16"},"nodeType":"YulFunctionCall","src":"2538:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:16","type":""}],"src":"2219:364:16"},{"body":{"nodeType":"YulBlock","src":"2707:195:16","statements":[{"nodeType":"YulAssignment","src":"2717:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:16"},"nodeType":"YulFunctionCall","src":"2725:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:16"},"nodeType":"YulFunctionCall","src":"2760:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:16"},"nodeType":"YulFunctionCall","src":"2779:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:16"},"nodeType":"YulFunctionCall","src":"2753:47:16"},"nodeType":"YulExpressionStatement","src":"2753:47:16"},{"nodeType":"YulAssignment","src":"2809:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:16"},"nodeType":"YulFunctionCall","src":"2817:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:16","type":""}],"src":"2589:313:16"},{"body":{"nodeType":"YulBlock","src":"2953:32:16","statements":[{"nodeType":"YulAssignment","src":"2963:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:16","type":""}],"src":"2908:77:16"},{"body":{"nodeType":"YulBlock","src":"3034:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:16"},"nodeType":"YulFunctionCall","src":"3093:12:16"},"nodeType":"YulExpressionStatement","src":"3093:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:16"},"nodeType":"YulFunctionCall","src":"3064:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:16"},"nodeType":"YulFunctionCall","src":"3054:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:16"},"nodeType":"YulFunctionCall","src":"3047:43:16"},"nodeType":"YulIf","src":"3044:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:16","type":""}],"src":"2991:122:16"},{"body":{"nodeType":"YulBlock","src":"3171:87:16","statements":[{"nodeType":"YulAssignment","src":"3181:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:16"},"nodeType":"YulFunctionCall","src":"3190:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:16"},"nodeType":"YulFunctionCall","src":"3219:33:16"},"nodeType":"YulExpressionStatement","src":"3219:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:16","type":""}],"src":"3119:139:16"},{"body":{"nodeType":"YulBlock","src":"3330:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:16"},"nodeType":"YulFunctionCall","src":"3378:79:16"},"nodeType":"YulExpressionStatement","src":"3378:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:16"},"nodeType":"YulFunctionCall","src":"3347:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:16"},"nodeType":"YulFunctionCall","src":"3343:32:16"},"nodeType":"YulIf","src":"3340:119:16"},{"nodeType":"YulBlock","src":"3469:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:16"},"nodeType":"YulFunctionCall","src":"3544:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:16"},"nodeType":"YulFunctionCall","src":"3523:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:16","type":""}],"src":"3264:329:16"},{"body":{"nodeType":"YulBlock","src":"3644:81:16","statements":[{"nodeType":"YulAssignment","src":"3654:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:16"},"nodeType":"YulFunctionCall","src":"3665:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:16","type":""}],"src":"3599:126:16"},{"body":{"nodeType":"YulBlock","src":"3776:51:16","statements":[{"nodeType":"YulAssignment","src":"3786:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:16"},"nodeType":"YulFunctionCall","src":"3797:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:16","type":""}],"src":"3731:96:16"},{"body":{"nodeType":"YulBlock","src":"3898:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:16"},"nodeType":"YulFunctionCall","src":"3920:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:16"},"nodeType":"YulFunctionCall","src":"3908:37:16"},"nodeType":"YulExpressionStatement","src":"3908:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:16","type":""}],"src":"3833:118:16"},{"body":{"nodeType":"YulBlock","src":"4055:124:16","statements":[{"nodeType":"YulAssignment","src":"4065:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:16"},"nodeType":"YulFunctionCall","src":"4073:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:16"},"nodeType":"YulFunctionCall","src":"4154:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:16"},"nodeType":"YulFunctionCall","src":"4101:71:16"},"nodeType":"YulExpressionStatement","src":"4101:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:16","type":""}],"src":"3957:222:16"},{"body":{"nodeType":"YulBlock","src":"4228:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:16"},"nodeType":"YulFunctionCall","src":"4287:12:16"},"nodeType":"YulExpressionStatement","src":"4287:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:16"},"nodeType":"YulFunctionCall","src":"4258:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:16"},"nodeType":"YulFunctionCall","src":"4248:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:16"},"nodeType":"YulFunctionCall","src":"4241:43:16"},"nodeType":"YulIf","src":"4238:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:16","type":""}],"src":"4185:122:16"},{"body":{"nodeType":"YulBlock","src":"4365:87:16","statements":[{"nodeType":"YulAssignment","src":"4375:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:16"},"nodeType":"YulFunctionCall","src":"4384:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:16"},"nodeType":"YulFunctionCall","src":"4413:33:16"},"nodeType":"YulExpressionStatement","src":"4413:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:16","type":""}],"src":"4313:139:16"},{"body":{"nodeType":"YulBlock","src":"4541:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:16"},"nodeType":"YulFunctionCall","src":"4589:79:16"},"nodeType":"YulExpressionStatement","src":"4589:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:16"},"nodeType":"YulFunctionCall","src":"4558:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:16"},"nodeType":"YulFunctionCall","src":"4554:32:16"},"nodeType":"YulIf","src":"4551:119:16"},{"nodeType":"YulBlock","src":"4680:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:16"},"nodeType":"YulFunctionCall","src":"4755:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:16"},"nodeType":"YulFunctionCall","src":"4734:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:16"}]}]},{"nodeType":"YulBlock","src":"4807:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:16"},"nodeType":"YulFunctionCall","src":"4883:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:16"},"nodeType":"YulFunctionCall","src":"4862:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:16","type":""}],"src":"4458:474:16"},{"body":{"nodeType":"YulBlock","src":"5038:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:16"},"nodeType":"YulFunctionCall","src":"5086:79:16"},"nodeType":"YulExpressionStatement","src":"5086:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:16"},"nodeType":"YulFunctionCall","src":"5055:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:16"},"nodeType":"YulFunctionCall","src":"5051:32:16"},"nodeType":"YulIf","src":"5048:119:16"},{"nodeType":"YulBlock","src":"5177:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:16"},"nodeType":"YulFunctionCall","src":"5252:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:16"},"nodeType":"YulFunctionCall","src":"5231:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:16"}]}]},{"nodeType":"YulBlock","src":"5304:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:16"},"nodeType":"YulFunctionCall","src":"5380:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:16"},"nodeType":"YulFunctionCall","src":"5359:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:16"}]}]},{"nodeType":"YulBlock","src":"5432:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:16"},"nodeType":"YulFunctionCall","src":"5508:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:16"},"nodeType":"YulFunctionCall","src":"5487:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:16","type":""}],"src":"4938:619:16"},{"body":{"nodeType":"YulBlock","src":"5629:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:16"},"nodeType":"YulFunctionCall","src":"5677:79:16"},"nodeType":"YulExpressionStatement","src":"5677:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:16"},"nodeType":"YulFunctionCall","src":"5646:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:16"},"nodeType":"YulFunctionCall","src":"5642:32:16"},"nodeType":"YulIf","src":"5639:119:16"},{"nodeType":"YulBlock","src":"5768:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:16"},"nodeType":"YulFunctionCall","src":"5843:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:16"},"nodeType":"YulFunctionCall","src":"5822:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:16","type":""}],"src":"5563:329:16"},{"body":{"nodeType":"YulBlock","src":"5963:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:16"},"nodeType":"YulFunctionCall","src":"5985:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:16"},"nodeType":"YulFunctionCall","src":"5973:37:16"},"nodeType":"YulExpressionStatement","src":"5973:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:16","type":""}],"src":"5898:118:16"},{"body":{"nodeType":"YulBlock","src":"6120:124:16","statements":[{"nodeType":"YulAssignment","src":"6130:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:16"},"nodeType":"YulFunctionCall","src":"6138:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:16"},"nodeType":"YulFunctionCall","src":"6219:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:16"},"nodeType":"YulFunctionCall","src":"6166:71:16"},"nodeType":"YulExpressionStatement","src":"6166:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:16","type":""}],"src":"6022:222:16"},{"body":{"nodeType":"YulBlock","src":"6290:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:16"},"nodeType":"YulFunctionCall","src":"6346:12:16"},"nodeType":"YulExpressionStatement","src":"6346:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:16"},"nodeType":"YulFunctionCall","src":"6320:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:16"},"nodeType":"YulFunctionCall","src":"6310:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:16"},"nodeType":"YulFunctionCall","src":"6303:40:16"},"nodeType":"YulIf","src":"6300:60:16"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:16","type":""}],"src":"6250:116:16"},{"body":{"nodeType":"YulBlock","src":"6421:84:16","statements":[{"nodeType":"YulAssignment","src":"6431:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:16"},"nodeType":"YulFunctionCall","src":"6440:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:16"},"nodeType":"YulFunctionCall","src":"6469:30:16"},"nodeType":"YulExpressionStatement","src":"6469:30:16"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:16","type":""}],"src":"6372:133:16"},{"body":{"nodeType":"YulBlock","src":"6591:388:16","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:16"},"nodeType":"YulFunctionCall","src":"6639:79:16"},"nodeType":"YulExpressionStatement","src":"6639:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:16"},"nodeType":"YulFunctionCall","src":"6608:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:16"},"nodeType":"YulFunctionCall","src":"6604:32:16"},"nodeType":"YulIf","src":"6601:119:16"},{"nodeType":"YulBlock","src":"6730:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:16"},"nodeType":"YulFunctionCall","src":"6805:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:16"},"nodeType":"YulFunctionCall","src":"6784:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:16"}]}]},{"nodeType":"YulBlock","src":"6857:115:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:16"},"nodeType":"YulFunctionCall","src":"6930:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:16"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:16"},"nodeType":"YulFunctionCall","src":"6912:50:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:16","type":""}],"src":"6511:468:16"},{"body":{"nodeType":"YulBlock","src":"7074:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:16"},"nodeType":"YulFunctionCall","src":"7084:12:16"},"nodeType":"YulExpressionStatement","src":"7084:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:16"},{"body":{"nodeType":"YulBlock","src":"7197:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:16"},"nodeType":"YulFunctionCall","src":"7207:12:16"},"nodeType":"YulExpressionStatement","src":"7207:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:16"},{"body":{"nodeType":"YulBlock","src":"7259:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:16"},"nodeType":"YulFunctionCall","src":"7269:88:16"},"nodeType":"YulExpressionStatement","src":"7269:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:16"},"nodeType":"YulFunctionCall","src":"7366:15:16"},"nodeType":"YulExpressionStatement","src":"7366:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:16"},"nodeType":"YulFunctionCall","src":"7390:15:16"},"nodeType":"YulExpressionStatement","src":"7390:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:16"},{"body":{"nodeType":"YulBlock","src":"7460:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:16"},"nodeType":"YulFunctionCall","src":"7500:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:16"},"nodeType":"YulFunctionCall","src":"7488:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:16"},"nodeType":"YulFunctionCall","src":"7641:18:16"},"nodeType":"YulExpressionStatement","src":"7641:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:16"},"nodeType":"YulFunctionCall","src":"7579:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:16"},"nodeType":"YulFunctionCall","src":"7615:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:16"},"nodeType":"YulFunctionCall","src":"7576:62:16"},"nodeType":"YulIf","src":"7573:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:16"},"nodeType":"YulFunctionCall","src":"7670:22:16"},"nodeType":"YulExpressionStatement","src":"7670:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:16","type":""}],"src":"7417:281:16"},{"body":{"nodeType":"YulBlock","src":"7745:88:16","statements":[{"nodeType":"YulAssignment","src":"7755:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:16"},"nodeType":"YulFunctionCall","src":"7765:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:16"},"nodeType":"YulFunctionCall","src":"7794:33:16"},"nodeType":"YulExpressionStatement","src":"7794:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:16","type":""}],"src":"7704:129:16"},{"body":{"nodeType":"YulBlock","src":"7905:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:16"},"nodeType":"YulFunctionCall","src":"8012:18:16"},"nodeType":"YulExpressionStatement","src":"8012:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:16"},"nodeType":"YulFunctionCall","src":"7979:30:16"},"nodeType":"YulIf","src":"7976:56:16"},{"nodeType":"YulAssignment","src":"8042:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:16"},"nodeType":"YulFunctionCall","src":"8050:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:16"}]},{"nodeType":"YulAssignment","src":"8116:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:16"},"nodeType":"YulFunctionCall","src":"8124:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:16","type":""}],"src":"7839:307:16"},{"body":{"nodeType":"YulBlock","src":"8203:103:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:16"},"nodeType":"YulFunctionCall","src":"8213:30:16"},"nodeType":"YulExpressionStatement","src":"8213:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:16"},"nodeType":"YulFunctionCall","src":"8280:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:16"},"nodeType":"YulFunctionCall","src":"8273:27:16"},"nodeType":"YulExpressionStatement","src":"8273:27:16"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:16","type":""}],"src":"8152:154:16"},{"body":{"nodeType":"YulBlock","src":"8395:327:16","statements":[{"nodeType":"YulAssignment","src":"8405:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:16"},"nodeType":"YulFunctionCall","src":"8430:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:16"},"nodeType":"YulFunctionCall","src":"8414:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:16"},"nodeType":"YulFunctionCall","src":"8488:21:16"},"nodeType":"YulExpressionStatement","src":"8488:21:16"},{"nodeType":"YulVariableDeclaration","src":"8518:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:16"},"nodeType":"YulFunctionCall","src":"8529:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:16"},"nodeType":"YulFunctionCall","src":"8585:79:16"},"nodeType":"YulExpressionStatement","src":"8585:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:16"},"nodeType":"YulFunctionCall","src":"8560:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:16"},"nodeType":"YulFunctionCall","src":"8557:25:16"},"nodeType":"YulIf","src":"8554:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:16"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:16"},"nodeType":"YulFunctionCall","src":"8675:41:16"},"nodeType":"YulExpressionStatement","src":"8675:41:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:16","type":""}],"src":"8312:410:16"},{"body":{"nodeType":"YulBlock","src":"8802:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:16"},"nodeType":"YulFunctionCall","src":"8853:79:16"},"nodeType":"YulExpressionStatement","src":"8853:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:16"},"nodeType":"YulFunctionCall","src":"8826:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:16"},"nodeType":"YulFunctionCall","src":"8822:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:16"},"nodeType":"YulFunctionCall","src":"8815:35:16"},"nodeType":"YulIf","src":"8812:122:16"},{"nodeType":"YulVariableDeclaration","src":"8943:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:16"},"nodeType":"YulFunctionCall","src":"8957:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:16"},"nodeType":"YulFunctionCall","src":"9042:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:16"},"nodeType":"YulFunctionCall","src":"8995:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:16","type":""}],"src":"8741:338:16"},{"body":{"nodeType":"YulBlock","src":"9211:817:16","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:16"},"nodeType":"YulFunctionCall","src":"9260:79:16"},"nodeType":"YulExpressionStatement","src":"9260:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:16"},"nodeType":"YulFunctionCall","src":"9228:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:16"},"nodeType":"YulFunctionCall","src":"9224:33:16"},"nodeType":"YulIf","src":"9221:120:16"},{"nodeType":"YulBlock","src":"9351:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:16"},"nodeType":"YulFunctionCall","src":"9426:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:16"},"nodeType":"YulFunctionCall","src":"9405:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:16"}]}]},{"nodeType":"YulBlock","src":"9478:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:16"},"nodeType":"YulFunctionCall","src":"9554:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:16"},"nodeType":"YulFunctionCall","src":"9533:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:16"}]}]},{"nodeType":"YulBlock","src":"9606:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:16"},"nodeType":"YulFunctionCall","src":"9682:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:16"},"nodeType":"YulFunctionCall","src":"9661:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:16"}]}]},{"nodeType":"YulBlock","src":"9734:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:16"},"nodeType":"YulFunctionCall","src":"9776:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:16"},"nodeType":"YulFunctionCall","src":"9763:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:16"},"nodeType":"YulFunctionCall","src":"9844:79:16"},"nodeType":"YulExpressionStatement","src":"9844:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:16"},"nodeType":"YulFunctionCall","src":"9811:30:16"},"nodeType":"YulIf","src":"9808:117:16"},{"nodeType":"YulAssignment","src":"9939:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:16"},"nodeType":"YulFunctionCall","src":"9979:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:16"},"nodeType":"YulFunctionCall","src":"9949:62:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:16","type":""}],"src":"9085:943:16"},{"body":{"nodeType":"YulBlock","src":"10117:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:16"},"nodeType":"YulFunctionCall","src":"10165:79:16"},"nodeType":"YulExpressionStatement","src":"10165:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:16"},"nodeType":"YulFunctionCall","src":"10134:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:16"},"nodeType":"YulFunctionCall","src":"10130:32:16"},"nodeType":"YulIf","src":"10127:119:16"},{"nodeType":"YulBlock","src":"10256:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:16"},"nodeType":"YulFunctionCall","src":"10331:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:16"},"nodeType":"YulFunctionCall","src":"10310:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:16"}]}]},{"nodeType":"YulBlock","src":"10383:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:16"},"nodeType":"YulFunctionCall","src":"10459:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:16"},"nodeType":"YulFunctionCall","src":"10438:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:16","type":""}],"src":"10034:474:16"},{"body":{"nodeType":"YulBlock","src":"10542:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:16"},"nodeType":"YulFunctionCall","src":"10552:88:16"},"nodeType":"YulExpressionStatement","src":"10552:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:16"},"nodeType":"YulFunctionCall","src":"10649:15:16"},"nodeType":"YulExpressionStatement","src":"10649:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:16"},"nodeType":"YulFunctionCall","src":"10673:15:16"},"nodeType":"YulExpressionStatement","src":"10673:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:16"},{"body":{"nodeType":"YulBlock","src":"10751:269:16","statements":[{"nodeType":"YulAssignment","src":"10761:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:16"},"nodeType":"YulFunctionCall","src":"10771:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:16"},"nodeType":"YulFunctionCall","src":"10818:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:16","statements":[{"nodeType":"YulAssignment","src":"10883:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:16"},"nodeType":"YulFunctionCall","src":"10893:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:16"},"nodeType":"YulFunctionCall","src":"10842:26:16"},"nodeType":"YulIf","src":"10839:81:16"},{"body":{"nodeType":"YulBlock","src":"10972:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:16"},"nodeType":"YulFunctionCall","src":"10986:18:16"},"nodeType":"YulExpressionStatement","src":"10986:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:16"},"nodeType":"YulFunctionCall","src":"10956:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:16"},"nodeType":"YulFunctionCall","src":"10933:38:16"},"nodeType":"YulIf","src":"10930:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:16","type":""}],"src":"10700:320:16"},{"body":{"nodeType":"YulBlock","src":"11132:114:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:16"},"nodeType":"YulFunctionCall","src":"11150:14:16"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:16","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:16"},"nodeType":"YulFunctionCall","src":"11143:58:16"},"nodeType":"YulExpressionStatement","src":"11143:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:16"},"nodeType":"YulFunctionCall","src":"11218:15:16"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:16","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:16"},"nodeType":"YulFunctionCall","src":"11211:28:16"},"nodeType":"YulExpressionStatement","src":"11211:28:16"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:16","type":""}],"src":"11026:220:16"},{"body":{"nodeType":"YulBlock","src":"11398:220:16","statements":[{"nodeType":"YulAssignment","src":"11408:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:16","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:16"},"nodeType":"YulFunctionCall","src":"11415:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:16"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:16"},"nodeType":"YulFunctionCall","src":"11491:93:16"},"nodeType":"YulExpressionStatement","src":"11491:93:16"},{"nodeType":"YulAssignment","src":"11593:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:16"},"nodeType":"YulFunctionCall","src":"11600:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:16"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:16","type":""}],"src":"11252:366:16"},{"body":{"nodeType":"YulBlock","src":"11795:248:16","statements":[{"nodeType":"YulAssignment","src":"11805:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:16"},"nodeType":"YulFunctionCall","src":"11813:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:16"},"nodeType":"YulFunctionCall","src":"11848:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:16"},"nodeType":"YulFunctionCall","src":"11867:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:16"},"nodeType":"YulFunctionCall","src":"11841:47:16"},"nodeType":"YulExpressionStatement","src":"11841:47:16"},{"nodeType":"YulAssignment","src":"11897:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:16"},"nodeType":"YulFunctionCall","src":"11905:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:16","type":""}],"src":"11624:419:16"},{"body":{"nodeType":"YulBlock","src":"12155:142:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:16"},"nodeType":"YulFunctionCall","src":"12173:14:16"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:16","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:16"},"nodeType":"YulFunctionCall","src":"12166:58:16"},"nodeType":"YulExpressionStatement","src":"12166:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:16"},"nodeType":"YulFunctionCall","src":"12241:15:16"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:16","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:16"},"nodeType":"YulFunctionCall","src":"12234:56:16"},"nodeType":"YulExpressionStatement","src":"12234:56:16"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:16","type":""}],"src":"12049:248:16"},{"body":{"nodeType":"YulBlock","src":"12449:220:16","statements":[{"nodeType":"YulAssignment","src":"12459:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:16","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:16"},"nodeType":"YulFunctionCall","src":"12466:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:16"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:16"},"nodeType":"YulFunctionCall","src":"12542:93:16"},"nodeType":"YulExpressionStatement","src":"12542:93:16"},{"nodeType":"YulAssignment","src":"12644:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:16"},"nodeType":"YulFunctionCall","src":"12651:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:16"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:16","type":""}],"src":"12303:366:16"},{"body":{"nodeType":"YulBlock","src":"12846:248:16","statements":[{"nodeType":"YulAssignment","src":"12856:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:16"},"nodeType":"YulFunctionCall","src":"12864:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:16"},"nodeType":"YulFunctionCall","src":"12899:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:16"},"nodeType":"YulFunctionCall","src":"12918:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:16"},"nodeType":"YulFunctionCall","src":"12892:47:16"},"nodeType":"YulExpressionStatement","src":"12892:47:16"},{"nodeType":"YulAssignment","src":"12948:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:16"},"nodeType":"YulFunctionCall","src":"12956:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:16","type":""}],"src":"12675:419:16"},{"body":{"nodeType":"YulBlock","src":"13206:126:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:16"},"nodeType":"YulFunctionCall","src":"13224:14:16"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:16","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:16"},"nodeType":"YulFunctionCall","src":"13217:58:16"},"nodeType":"YulExpressionStatement","src":"13217:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:16"},"nodeType":"YulFunctionCall","src":"13292:15:16"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:16","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:16"},"nodeType":"YulFunctionCall","src":"13285:40:16"},"nodeType":"YulExpressionStatement","src":"13285:40:16"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:16","type":""}],"src":"13100:232:16"},{"body":{"nodeType":"YulBlock","src":"13484:220:16","statements":[{"nodeType":"YulAssignment","src":"13494:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:16","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:16"},"nodeType":"YulFunctionCall","src":"13501:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:16"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:16"},"nodeType":"YulFunctionCall","src":"13577:93:16"},"nodeType":"YulExpressionStatement","src":"13577:93:16"},{"nodeType":"YulAssignment","src":"13679:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:16"},"nodeType":"YulFunctionCall","src":"13686:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:16"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:16","type":""}],"src":"13338:366:16"},{"body":{"nodeType":"YulBlock","src":"13881:248:16","statements":[{"nodeType":"YulAssignment","src":"13891:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:16"},"nodeType":"YulFunctionCall","src":"13899:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:16"},"nodeType":"YulFunctionCall","src":"13934:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:16"},"nodeType":"YulFunctionCall","src":"13953:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:16"},"nodeType":"YulFunctionCall","src":"13927:47:16"},"nodeType":"YulExpressionStatement","src":"13927:47:16"},{"nodeType":"YulAssignment","src":"13983:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:16"},"nodeType":"YulFunctionCall","src":"13991:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:16","type":""}],"src":"13710:419:16"},{"body":{"nodeType":"YulBlock","src":"14241:68:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:16"},"nodeType":"YulFunctionCall","src":"14259:14:16"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:16","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:16"},"nodeType":"YulFunctionCall","src":"14252:50:16"},"nodeType":"YulExpressionStatement","src":"14252:50:16"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:16","type":""}],"src":"14135:174:16"},{"body":{"nodeType":"YulBlock","src":"14461:220:16","statements":[{"nodeType":"YulAssignment","src":"14471:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:16","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:16"},"nodeType":"YulFunctionCall","src":"14478:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:16"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:16"},"nodeType":"YulFunctionCall","src":"14554:93:16"},"nodeType":"YulExpressionStatement","src":"14554:93:16"},{"nodeType":"YulAssignment","src":"14656:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:16"},"nodeType":"YulFunctionCall","src":"14663:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:16"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:16","type":""}],"src":"14315:366:16"},{"body":{"nodeType":"YulBlock","src":"14858:248:16","statements":[{"nodeType":"YulAssignment","src":"14868:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:16"},"nodeType":"YulFunctionCall","src":"14876:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:16"},"nodeType":"YulFunctionCall","src":"14911:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:16"},"nodeType":"YulFunctionCall","src":"14930:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:16"},"nodeType":"YulFunctionCall","src":"14904:47:16"},"nodeType":"YulExpressionStatement","src":"14904:47:16"},{"nodeType":"YulAssignment","src":"14960:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:16"},"nodeType":"YulFunctionCall","src":"14968:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:16","type":""}],"src":"14687:419:16"},{"body":{"nodeType":"YulBlock","src":"15218:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:16"},"nodeType":"YulFunctionCall","src":"15236:14:16"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:16","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:16"},"nodeType":"YulFunctionCall","src":"15229:58:16"},"nodeType":"YulExpressionStatement","src":"15229:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:16"},"nodeType":"YulFunctionCall","src":"15304:15:16"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:16","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:16"},"nodeType":"YulFunctionCall","src":"15297:36:16"},"nodeType":"YulExpressionStatement","src":"15297:36:16"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:16","type":""}],"src":"15112:228:16"},{"body":{"nodeType":"YulBlock","src":"15492:220:16","statements":[{"nodeType":"YulAssignment","src":"15502:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:16","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:16"},"nodeType":"YulFunctionCall","src":"15509:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:16"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:16"},"nodeType":"YulFunctionCall","src":"15585:93:16"},"nodeType":"YulExpressionStatement","src":"15585:93:16"},{"nodeType":"YulAssignment","src":"15687:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:16"},"nodeType":"YulFunctionCall","src":"15694:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:16"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:16","type":""}],"src":"15346:366:16"},{"body":{"nodeType":"YulBlock","src":"15889:248:16","statements":[{"nodeType":"YulAssignment","src":"15899:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:16"},"nodeType":"YulFunctionCall","src":"15907:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:16"},"nodeType":"YulFunctionCall","src":"15942:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:16"},"nodeType":"YulFunctionCall","src":"15961:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:16"},"nodeType":"YulFunctionCall","src":"15935:47:16"},"nodeType":"YulExpressionStatement","src":"15935:47:16"},{"nodeType":"YulAssignment","src":"15991:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:16"},"nodeType":"YulFunctionCall","src":"15999:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:16","type":""}],"src":"15718:419:16"},{"body":{"nodeType":"YulBlock","src":"16257:34:16","statements":[{"nodeType":"YulAssignment","src":"16267:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"16282:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16267:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16229:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"16234:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16245:11:16","type":""}],"src":"16143:148:16"},{"body":{"nodeType":"YulBlock","src":"16407:267:16","statements":[{"nodeType":"YulVariableDeclaration","src":"16417:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16464:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16431:32:16"},"nodeType":"YulFunctionCall","src":"16431:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16421:6:16","type":""}]},{"nodeType":"YulAssignment","src":"16479:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16563:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"16568:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16486:76:16"},"nodeType":"YulFunctionCall","src":"16486:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16479:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16610:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"16617:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16606:3:16"},"nodeType":"YulFunctionCall","src":"16606:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"16624:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"16629:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16584:21:16"},"nodeType":"YulFunctionCall","src":"16584:52:16"},"nodeType":"YulExpressionStatement","src":"16584:52:16"},{"nodeType":"YulAssignment","src":"16645:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16656:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"16661:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16652:3:16"},"nodeType":"YulFunctionCall","src":"16652:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16645:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16388:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16395:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16403:3:16","type":""}],"src":"16297:377:16"},{"body":{"nodeType":"YulBlock","src":"16864:251:16","statements":[{"nodeType":"YulAssignment","src":"16875:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16964:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"16973:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16882:81:16"},"nodeType":"YulFunctionCall","src":"16882:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16875:3:16"}]},{"nodeType":"YulAssignment","src":"16987:102:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17076:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"17085:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16994:81:16"},"nodeType":"YulFunctionCall","src":"16994:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16987:3:16"}]},{"nodeType":"YulAssignment","src":"17099:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"17106:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17099:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16835:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16841:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16849:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16860:3:16","type":""}],"src":"16680:435:16"},{"body":{"nodeType":"YulBlock","src":"17227:118:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17249:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17257:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:16"},"nodeType":"YulFunctionCall","src":"17245:14:16"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17261:34:16","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17238:6:16"},"nodeType":"YulFunctionCall","src":"17238:58:16"},"nodeType":"YulExpressionStatement","src":"17238:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17317:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:16"},"nodeType":"YulFunctionCall","src":"17313:15:16"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17330:7:16","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17306:6:16"},"nodeType":"YulFunctionCall","src":"17306:32:16"},"nodeType":"YulExpressionStatement","src":"17306:32:16"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17219:6:16","type":""}],"src":"17121:224:16"},{"body":{"nodeType":"YulBlock","src":"17497:220:16","statements":[{"nodeType":"YulAssignment","src":"17507:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17573:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17578:2:16","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17514:58:16"},"nodeType":"YulFunctionCall","src":"17514:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17507:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17679:3:16"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17590:88:16"},"nodeType":"YulFunctionCall","src":"17590:93:16"},"nodeType":"YulExpressionStatement","src":"17590:93:16"},{"nodeType":"YulAssignment","src":"17692:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17703:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17708:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:16"},"nodeType":"YulFunctionCall","src":"17699:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17692:3:16"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17485:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17493:3:16","type":""}],"src":"17351:366:16"},{"body":{"nodeType":"YulBlock","src":"17894:248:16","statements":[{"nodeType":"YulAssignment","src":"17904:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17916:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17927:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17912:3:16"},"nodeType":"YulFunctionCall","src":"17912:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17951:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17962:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:16"},"nodeType":"YulFunctionCall","src":"17947:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17970:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17976:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17966:3:16"},"nodeType":"YulFunctionCall","src":"17966:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:16"},"nodeType":"YulFunctionCall","src":"17940:47:16"},"nodeType":"YulExpressionStatement","src":"17940:47:16"},{"nodeType":"YulAssignment","src":"17996:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18130:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18004:124:16"},"nodeType":"YulFunctionCall","src":"18004:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17996:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17874:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17889:4:16","type":""}],"src":"17723:419:16"},{"body":{"nodeType":"YulBlock","src":"18254:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18276:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18284:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:16"},"nodeType":"YulFunctionCall","src":"18272:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18288:34:16","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:16"},"nodeType":"YulFunctionCall","src":"18265:58:16"},"nodeType":"YulExpressionStatement","src":"18265:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18344:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18352:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18340:3:16"},"nodeType":"YulFunctionCall","src":"18340:15:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18357:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18333:6:16"},"nodeType":"YulFunctionCall","src":"18333:31:16"},"nodeType":"YulExpressionStatement","src":"18333:31:16"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18246:6:16","type":""}],"src":"18148:223:16"},{"body":{"nodeType":"YulBlock","src":"18523:220:16","statements":[{"nodeType":"YulAssignment","src":"18533:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18599:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18604:2:16","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18540:58:16"},"nodeType":"YulFunctionCall","src":"18540:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18533:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18705:3:16"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18616:88:16"},"nodeType":"YulFunctionCall","src":"18616:93:16"},"nodeType":"YulExpressionStatement","src":"18616:93:16"},{"nodeType":"YulAssignment","src":"18718:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18729:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18734:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18725:3:16"},"nodeType":"YulFunctionCall","src":"18725:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18718:3:16"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18511:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18519:3:16","type":""}],"src":"18377:366:16"},{"body":{"nodeType":"YulBlock","src":"18920:248:16","statements":[{"nodeType":"YulAssignment","src":"18930:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18942:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18953:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18938:3:16"},"nodeType":"YulFunctionCall","src":"18938:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18930:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18977:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18988:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18973:3:16"},"nodeType":"YulFunctionCall","src":"18973:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18996:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19002:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18992:3:16"},"nodeType":"YulFunctionCall","src":"18992:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18966:6:16"},"nodeType":"YulFunctionCall","src":"18966:47:16"},"nodeType":"YulExpressionStatement","src":"18966:47:16"},{"nodeType":"YulAssignment","src":"19022:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19156:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19030:124:16"},"nodeType":"YulFunctionCall","src":"19030:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19022:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18900:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18915:4:16","type":""}],"src":"18749:419:16"},{"body":{"nodeType":"YulBlock","src":"19280:69:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19302:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19310:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:16"},"nodeType":"YulFunctionCall","src":"19298:14:16"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19314:27:16","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19291:6:16"},"nodeType":"YulFunctionCall","src":"19291:51:16"},"nodeType":"YulExpressionStatement","src":"19291:51:16"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19272:6:16","type":""}],"src":"19174:175:16"},{"body":{"nodeType":"YulBlock","src":"19501:220:16","statements":[{"nodeType":"YulAssignment","src":"19511:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19577:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19582:2:16","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19518:58:16"},"nodeType":"YulFunctionCall","src":"19518:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19511:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19683:3:16"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19594:88:16"},"nodeType":"YulFunctionCall","src":"19594:93:16"},"nodeType":"YulExpressionStatement","src":"19594:93:16"},{"nodeType":"YulAssignment","src":"19696:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19707:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19712:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:16"},"nodeType":"YulFunctionCall","src":"19703:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19696:3:16"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19489:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19497:3:16","type":""}],"src":"19355:366:16"},{"body":{"nodeType":"YulBlock","src":"19898:248:16","statements":[{"nodeType":"YulAssignment","src":"19908:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:16"},"nodeType":"YulFunctionCall","src":"19916:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19908:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19955:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19966:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19951:3:16"},"nodeType":"YulFunctionCall","src":"19951:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19980:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19970:3:16"},"nodeType":"YulFunctionCall","src":"19970:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:16"},"nodeType":"YulFunctionCall","src":"19944:47:16"},"nodeType":"YulExpressionStatement","src":"19944:47:16"},{"nodeType":"YulAssignment","src":"20000:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20134:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20008:124:16"},"nodeType":"YulFunctionCall","src":"20008:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20000:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19878:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19893:4:16","type":""}],"src":"19727:419:16"},{"body":{"nodeType":"YulBlock","src":"20258:131:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20280:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20288:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20276:3:16"},"nodeType":"YulFunctionCall","src":"20276:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20292:34:16","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20269:6:16"},"nodeType":"YulFunctionCall","src":"20269:58:16"},"nodeType":"YulExpressionStatement","src":"20269:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20348:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20356:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20344:3:16"},"nodeType":"YulFunctionCall","src":"20344:15:16"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20361:20:16","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20337:6:16"},"nodeType":"YulFunctionCall","src":"20337:45:16"},"nodeType":"YulExpressionStatement","src":"20337:45:16"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20250:6:16","type":""}],"src":"20152:237:16"},{"body":{"nodeType":"YulBlock","src":"20541:220:16","statements":[{"nodeType":"YulAssignment","src":"20551:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20617:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"20622:2:16","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20558:58:16"},"nodeType":"YulFunctionCall","src":"20558:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20551:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20723:3:16"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20634:88:16"},"nodeType":"YulFunctionCall","src":"20634:93:16"},"nodeType":"YulExpressionStatement","src":"20634:93:16"},{"nodeType":"YulAssignment","src":"20736:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20747:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"20752:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20743:3:16"},"nodeType":"YulFunctionCall","src":"20743:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20736:3:16"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20529:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20537:3:16","type":""}],"src":"20395:366:16"},{"body":{"nodeType":"YulBlock","src":"20938:248:16","statements":[{"nodeType":"YulAssignment","src":"20948:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20960:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20956:3:16"},"nodeType":"YulFunctionCall","src":"20956:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20948:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20995:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21006:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20991:3:16"},"nodeType":"YulFunctionCall","src":"20991:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"21020:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21010:3:16"},"nodeType":"YulFunctionCall","src":"21010:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20984:6:16"},"nodeType":"YulFunctionCall","src":"20984:47:16"},"nodeType":"YulExpressionStatement","src":"20984:47:16"},{"nodeType":"YulAssignment","src":"21040:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21174:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21048:124:16"},"nodeType":"YulFunctionCall","src":"21048:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21040:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20918:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20933:4:16","type":""}],"src":"20767:419:16"},{"body":{"nodeType":"YulBlock","src":"21220:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21237:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21240:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21230:6:16"},"nodeType":"YulFunctionCall","src":"21230:88:16"},"nodeType":"YulExpressionStatement","src":"21230:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21334:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21337:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:16"},"nodeType":"YulFunctionCall","src":"21327:15:16"},"nodeType":"YulExpressionStatement","src":"21327:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21358:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21361:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21351:6:16"},"nodeType":"YulFunctionCall","src":"21351:15:16"},"nodeType":"YulExpressionStatement","src":"21351:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21192:180:16"},{"body":{"nodeType":"YulBlock","src":"21436:40:16","statements":[{"nodeType":"YulAssignment","src":"21447:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21463:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21457:5:16"},"nodeType":"YulFunctionCall","src":"21457:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21447:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21419:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21429:6:16","type":""}],"src":"21378:98:16"},{"body":{"nodeType":"YulBlock","src":"21577:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21594:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"21599:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21587:6:16"},"nodeType":"YulFunctionCall","src":"21587:19:16"},"nodeType":"YulExpressionStatement","src":"21587:19:16"},{"nodeType":"YulAssignment","src":"21615:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21634:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21639:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21630:3:16"},"nodeType":"YulFunctionCall","src":"21630:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21615:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21549:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"21554:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21565:11:16","type":""}],"src":"21482:168:16"},{"body":{"nodeType":"YulBlock","src":"21746:270:16","statements":[{"nodeType":"YulVariableDeclaration","src":"21756:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21802:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21770:31:16"},"nodeType":"YulFunctionCall","src":"21770:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21760:6:16","type":""}]},{"nodeType":"YulAssignment","src":"21817:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21882:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"21887:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21824:57:16"},"nodeType":"YulFunctionCall","src":"21824:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21817:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21929:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"21936:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21925:3:16"},"nodeType":"YulFunctionCall","src":"21925:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"21943:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"21948:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21903:21:16"},"nodeType":"YulFunctionCall","src":"21903:52:16"},"nodeType":"YulExpressionStatement","src":"21903:52:16"},{"nodeType":"YulAssignment","src":"21964:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21975:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22002:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21980:21:16"},"nodeType":"YulFunctionCall","src":"21980:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21971:3:16"},"nodeType":"YulFunctionCall","src":"21971:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21964:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21727:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21734:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21742:3:16","type":""}],"src":"21656:360:16"},{"body":{"nodeType":"YulBlock","src":"22222:440:16","statements":[{"nodeType":"YulAssignment","src":"22232:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22244:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22255:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22240:3:16"},"nodeType":"YulFunctionCall","src":"22240:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22232:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22313:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22326:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22337:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22322:3:16"},"nodeType":"YulFunctionCall","src":"22322:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22269:43:16"},"nodeType":"YulFunctionCall","src":"22269:71:16"},"nodeType":"YulExpressionStatement","src":"22269:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22394:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22407:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22418:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22403:3:16"},"nodeType":"YulFunctionCall","src":"22403:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22350:43:16"},"nodeType":"YulFunctionCall","src":"22350:72:16"},"nodeType":"YulExpressionStatement","src":"22350:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22476:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22489:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22500:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22485:3:16"},"nodeType":"YulFunctionCall","src":"22485:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22432:43:16"},"nodeType":"YulFunctionCall","src":"22432:72:16"},"nodeType":"YulExpressionStatement","src":"22432:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22525:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22536:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22521:3:16"},"nodeType":"YulFunctionCall","src":"22521:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22545:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22551:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22541:3:16"},"nodeType":"YulFunctionCall","src":"22541:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22514:6:16"},"nodeType":"YulFunctionCall","src":"22514:48:16"},"nodeType":"YulExpressionStatement","src":"22514:48:16"},{"nodeType":"YulAssignment","src":"22571:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22641:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"22650:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22579:61:16"},"nodeType":"YulFunctionCall","src":"22579:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22571:4:16"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22170:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22182:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22190:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22198:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22206:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22217:4:16","type":""}],"src":"22022:640:16"},{"body":{"nodeType":"YulBlock","src":"22730:79:16","statements":[{"nodeType":"YulAssignment","src":"22740:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22755:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22749:5:16"},"nodeType":"YulFunctionCall","src":"22749:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22740:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22797:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22771:25:16"},"nodeType":"YulFunctionCall","src":"22771:32:16"},"nodeType":"YulExpressionStatement","src":"22771:32:16"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22708:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"22716:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22724:5:16","type":""}],"src":"22668:141:16"},{"body":{"nodeType":"YulBlock","src":"22891:273:16","statements":[{"body":{"nodeType":"YulBlock","src":"22937:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22939:77:16"},"nodeType":"YulFunctionCall","src":"22939:79:16"},"nodeType":"YulExpressionStatement","src":"22939:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22912:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22921:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22908:3:16"},"nodeType":"YulFunctionCall","src":"22908:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"22933:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22904:3:16"},"nodeType":"YulFunctionCall","src":"22904:32:16"},"nodeType":"YulIf","src":"22901:119:16"},{"nodeType":"YulBlock","src":"23030:127:16","statements":[{"nodeType":"YulVariableDeclaration","src":"23045:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"23059:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23049:6:16","type":""}]},{"nodeType":"YulAssignment","src":"23074:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23119:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"23130:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23115:3:16"},"nodeType":"YulFunctionCall","src":"23115:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23139:7:16"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23084:30:16"},"nodeType":"YulFunctionCall","src":"23084:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23074:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22861:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22872:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22884:6:16","type":""}],"src":"22815:349:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611513565b6102bc565b6040516100fb919061155b565b60405180910390f35b61010c61039e565b604051610119919061160f565b60405180910390f35b61013c60048036038101906101379190611667565b610430565b60405161014991906116d5565b60405180910390f35b61016c6004803603810190610167919061171c565b610476565b005b6101886004803603810190610183919061175c565b61058e565b005b6101a4600480360381019061019f919061175c565b6105ee565b005b6101c060048036038101906101bb9190611667565b61060e565b6040516101cd91906116d5565b60405180910390f35b6101f060048036038101906101eb91906117af565b610695565b6040516101fd91906117eb565b60405180910390f35b61020e61074d565b60405161021b919061160f565b60405180910390f35b61023e60048036038101906102399190611832565b6107df565b005b61025a600480360381019061025591906119a7565b6107f5565b005b61027660048036038101906102719190611667565b610857565b604051610283919061160f565b60405180910390f35b6102a660048036038101906102a19190611a2a565b6108bf565b6040516102b3919061155b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611a99565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a99565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b3d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611bcf565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611c61565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ccd565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611d5f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611a99565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611a99565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611c61565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611dbb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ccd565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611e51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611ee3565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611e51565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611f4f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061155b565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611fe1565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a261187c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612001565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190612085565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e91906120e6565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611fe1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384612001565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1612001565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0612001565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419612001565b5b0492506008810190505b612710831061144957612710838161143f5761143e612001565b5b0492506004810190505b6064831061146c576064838161146257611461612001565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114f0816114bb565b81146114fb57600080fd5b50565b60008135905061150d816114e7565b92915050565b600060208284031215611529576115286114b1565b5b6000611537848285016114fe565b91505092915050565b60008115159050919050565b61155581611540565b82525050565b6000602082019050611570600083018461154c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115b0578082015181840152602081019050611595565b838111156115bf576000848401525b50505050565b6000601f19601f8301169050919050565b60006115e182611576565b6115eb8185611581565b93506115fb818560208601611592565b611604816115c5565b840191505092915050565b6000602082019050818103600083015261162981846115d6565b905092915050565b6000819050919050565b61164481611631565b811461164f57600080fd5b50565b6000813590506116618161163b565b92915050565b60006020828403121561167d5761167c6114b1565b5b600061168b84828501611652565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116bf82611694565b9050919050565b6116cf816116b4565b82525050565b60006020820190506116ea60008301846116c6565b92915050565b6116f9816116b4565b811461170457600080fd5b50565b600081359050611716816116f0565b92915050565b60008060408385031215611733576117326114b1565b5b600061174185828601611707565b925050602061175285828601611652565b9150509250929050565b600080600060608486031215611775576117746114b1565b5b600061178386828701611707565b935050602061179486828701611707565b92505060406117a586828701611652565b9150509250925092565b6000602082840312156117c5576117c46114b1565b5b60006117d384828501611707565b91505092915050565b6117e581611631565b82525050565b600060208201905061180060008301846117dc565b92915050565b61180f81611540565b811461181a57600080fd5b50565b60008135905061182c81611806565b92915050565b60008060408385031215611849576118486114b1565b5b600061185785828601611707565b92505060206118688582860161181d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118b4826115c5565b810181811067ffffffffffffffff821117156118d3576118d261187c565b5b80604052505050565b60006118e66114a7565b90506118f282826118ab565b919050565b600067ffffffffffffffff8211156119125761191161187c565b5b61191b826115c5565b9050602081019050919050565b82818337600083830152505050565b600061194a611945846118f7565b6118dc565b90508281526020810184848401111561196657611965611877565b5b611971848285611928565b509392505050565b600082601f83011261198e5761198d611872565b5b813561199e848260208601611937565b91505092915050565b600080600080608085870312156119c1576119c06114b1565b5b60006119cf87828801611707565b94505060206119e087828801611707565b93505060406119f187828801611652565b925050606085013567ffffffffffffffff811115611a1257611a116114b6565b5b611a1e87828801611979565b91505092959194509250565b60008060408385031215611a4157611a406114b1565b5b6000611a4f85828601611707565b9250506020611a6085828601611707565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ab157607f821691505b60208210811415611ac557611ac4611a6a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b27602183611581565b9150611b3282611acb565b604082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611bb9603d83611581565b9150611bc482611b5d565b604082019050919050565b60006020820190508181036000830152611be881611bac565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c4b602d83611581565b9150611c5682611bef565b604082019050919050565b60006020820190508181036000830152611c7a81611c3e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611cb7601883611581565b9150611cc282611c81565b602082019050919050565b60006020820190508181036000830152611ce681611caa565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d49602983611581565b9150611d5482611ced565b604082019050919050565b60006020820190508181036000830152611d7881611d3c565b9050919050565b600081905092915050565b6000611d9582611576565b611d9f8185611d7f565b9350611daf818560208601611592565b80840191505092915050565b6000611dc78285611d8a565b9150611dd38284611d8a565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e3b602583611581565b9150611e4682611ddf565b604082019050919050565b60006020820190508181036000830152611e6a81611e2e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ecd602483611581565b9150611ed882611e71565b604082019050919050565b60006020820190508181036000830152611efc81611ec0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f39601983611581565b9150611f4482611f03565b602082019050919050565b60006020820190508181036000830152611f6881611f2c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fcb603283611581565b9150611fd682611f6f565b604082019050919050565b60006020820190508181036000830152611ffa81611fbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061205782612030565b612061818561203b565b9350612071818560208601611592565b61207a816115c5565b840191505092915050565b600060808201905061209a60008301876116c6565b6120a760208301866116c6565b6120b460408301856117dc565b81810360608301526120c6818461204c565b905095945050505050565b6000815190506120e0816114e7565b92915050565b6000602082840312156120fc576120fb6114b1565b5b600061210a848285016120d1565b9150509291505056fea26469706673582212209ac6e78aee6ff3667130b784a600785604544a8e059f588b19b414358310e4c964736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP5 DUP3 DUP6 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1570 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1595 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x15EB DUP2 DUP6 PUSH2 0x1581 JUMP JUMPDEST SWAP4 POP PUSH2 0x15FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x1604 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1629 DUP2 DUP5 PUSH2 0x15D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP2 EQ PUSH2 0x164F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1661 DUP2 PUSH2 0x163B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168B DUP5 DUP3 DUP6 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F9 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1716 DUP2 PUSH2 0x16F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1741 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1752 DUP6 DUP3 DUP7 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1783 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1794 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17A5 DUP7 DUP3 DUP8 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP2 EQ PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182C DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1857 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1868 DUP6 DUP3 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18B4 DUP3 PUSH2 0x15C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 PUSH2 0x14A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F2 DUP3 DUP3 PUSH2 0x18AB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH2 0x191B DUP3 PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194A PUSH2 0x1945 DUP5 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x1877 JUMP JUMPDEST JUMPDEST PUSH2 0x1971 DUP5 DUP3 DUP6 PUSH2 0x1928 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x1872 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x199E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CF DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19E0 DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x14B6 JUMP JUMPDEST JUMPDEST PUSH2 0x1A1E DUP8 DUP3 DUP9 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x21 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB9 PUSH1 0x3D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC4 DUP3 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE8 DUP2 PUSH2 0x1BAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4B PUSH1 0x2D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C56 DUP3 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7A DUP2 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 PUSH1 0x18 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE6 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D49 PUSH1 0x29 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D54 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D95 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x1D9F DUP2 DUP6 PUSH2 0x1D7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 DUP3 DUP6 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP3 DUP5 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3B PUSH1 0x25 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E46 DUP3 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E6A DUP2 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECD PUSH1 0x24 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED8 DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F39 PUSH1 0x19 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F44 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F68 DUP2 PUSH2 0x1F2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCB PUSH1 0x32 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD6 DUP3 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFA DUP2 PUSH2 0x1FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2057 DUP3 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x2061 DUP2 DUP6 PUSH2 0x203B JUMP JUMPDEST SWAP4 POP PUSH2 0x2071 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x207A DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20C6 DUP2 DUP5 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20E0 DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210A DUP5 DUP3 DUP6 ADD PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xC6 0xE7 DUP11 0xEE PUSH16 0xF3667130B784A600785604544A8E059F PC DUP12 NOT 0xB4 EQ CALLDATALOAD DUP4 LT 0xE4 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"628:16679:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:4:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;12768:171:4:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:11:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:4:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:154::-;;;;;:::o;16558:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:14:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:9:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:148::-;16245:11;16282:3;16267:18;;16143:148;;;;:::o;16297:377::-;16403:3;16431:39;16464:5;16431:39;:::i;:::-;16486:89;16568:6;16563:3;16486:89;:::i;:::-;16479:96;;16584:52;16629:6;16624:3;16617:4;16610:5;16606:16;16584:52;:::i;:::-;16661:6;16656:3;16652:16;16645:23;;16407:267;16297:377;;;;:::o;16680:435::-;16860:3;16882:95;16973:3;16964:6;16882:95;:::i;:::-;16875:102;;16994:95;17085:3;17076:6;16994:95;:::i;:::-;16987:102;;17106:3;17099:10;;16680:435;;;;;:::o;17121:224::-;17261:34;17257:1;17249:6;17245:14;17238:58;17330:7;17325:2;17317:6;17313:15;17306:32;17121:224;:::o;17351:366::-;17493:3;17514:67;17578:2;17573:3;17514:67;:::i;:::-;17507:74;;17590:93;17679:3;17590:93;:::i;:::-;17708:2;17703:3;17699:12;17692:19;;17351:366;;;:::o;17723:419::-;17889:4;17927:2;17916:9;17912:18;17904:26;;17976:9;17970:4;17966:20;17962:1;17951:9;17947:17;17940:47;18004:131;18130:4;18004:131;:::i;:::-;17996:139;;17723:419;;;:::o;18148:223::-;18288:34;18284:1;18276:6;18272:14;18265:58;18357:6;18352:2;18344:6;18340:15;18333:31;18148:223;:::o;18377:366::-;18519:3;18540:67;18604:2;18599:3;18540:67;:::i;:::-;18533:74;;18616:93;18705:3;18616:93;:::i;:::-;18734:2;18729:3;18725:12;18718:19;;18377:366;;;:::o;18749:419::-;18915:4;18953:2;18942:9;18938:18;18930:26;;19002:9;18996:4;18992:20;18988:1;18977:9;18973:17;18966:47;19030:131;19156:4;19030:131;:::i;:::-;19022:139;;18749:419;;;:::o;19174:175::-;19314:27;19310:1;19302:6;19298:14;19291:51;19174:175;:::o;19355:366::-;19497:3;19518:67;19582:2;19577:3;19518:67;:::i;:::-;19511:74;;19594:93;19683:3;19594:93;:::i;:::-;19712:2;19707:3;19703:12;19696:19;;19355:366;;;:::o;19727:419::-;19893:4;19931:2;19920:9;19916:18;19908:26;;19980:9;19974:4;19970:20;19966:1;19955:9;19951:17;19944:47;20008:131;20134:4;20008:131;:::i;:::-;20000:139;;19727:419;;;:::o;20152:237::-;20292:34;20288:1;20280:6;20276:14;20269:58;20361:20;20356:2;20348:6;20344:15;20337:45;20152:237;:::o;20395:366::-;20537:3;20558:67;20622:2;20617:3;20558:67;:::i;:::-;20551:74;;20634:93;20723:3;20634:93;:::i;:::-;20752:2;20747:3;20743:12;20736:19;;20395:366;;;:::o;20767:419::-;20933:4;20971:2;20960:9;20956:18;20948:26;;21020:9;21014:4;21010:20;21006:1;20995:9;20991:17;20984:47;21048:131;21174:4;21048:131;:::i;:::-;21040:139;;20767:419;;;:::o;21192:180::-;21240:77;21237:1;21230:88;21337:4;21334:1;21327:15;21361:4;21358:1;21351:15;21378:98;21429:6;21463:5;21457:12;21447:22;;21378:98;;;:::o;21482:168::-;21565:11;21599:6;21594:3;21587:19;21639:4;21634:3;21630:14;21615:29;;21482:168;;;;:::o;21656:360::-;21742:3;21770:38;21802:5;21770:38;:::i;:::-;21824:70;21887:6;21882:3;21824:70;:::i;:::-;21817:77;;21903:52;21948:6;21943:3;21936:4;21929:5;21925:16;21903:52;:::i;:::-;21980:29;22002:6;21980:29;:::i;:::-;21975:3;21971:39;21964:46;;21746:270;21656:360;;;;:::o;22022:640::-;22217:4;22255:3;22244:9;22240:19;22232:27;;22269:71;22337:1;22326:9;22322:17;22313:6;22269:71;:::i;:::-;22350:72;22418:2;22407:9;22403:18;22394:6;22350:72;:::i;:::-;22432;22500:2;22489:9;22485:18;22476:6;22432:72;:::i;:::-;22551:9;22545:4;22541:20;22536:2;22525:9;22521:18;22514:48;22579:76;22650:4;22641:6;22579:76;:::i;:::-;22571:84;;22022:640;;;;;;;:::o;22668:141::-;22724:5;22755:6;22749:13;22740:22;;22771:32;22797:5;22771:32;:::i;:::-;22668:141;;;;:::o;22815:349::-;22884:6;22933:2;22921:9;22912:7;22908:23;22904:32;22901:119;;;22939:79;;:::i;:::-;22901:119;23059:1;23084:63;23139:7;23130:6;23119:9;23115:22;23084:63;:::i;:::-;23074:73;;23030:127;22815:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1704200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1137,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1139,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1143,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1147,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1151,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1157,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1137,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1139,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1143,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1147,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1151,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1157,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2185,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf6c811b73f45a5c9bd3d3e7d7fac4cc7e3bd32a2bff7c419b6826bb1cb7ac0664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH13 0x811B73F45A5C9BD3D3E7D7FAC4 0xCC PUSH31 0x3BD32A2BFF7C419B6826BB1CB7AC0664736F6C634300080900330000000000 ","sourceMap":"194:8964:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf6c811b73f45a5c9bd3d3e7d7fac4cc7e3bd32a2bff7c419b6826bb1cb7ac0664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF PUSH13 0x811B73F45A5C9BD3D3E7D7FAC4 0xCC PUSH31 0x3BD32A2BFF7C419B6826BB1CB7AC0664736F6C634300080900330000000000 ","sourceMap":"194:8964:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b14711f206dda738c9e246f609c80e65f0b925a9242f486d9e518b550a0a0bc64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE EQ PUSH18 0x1F206DDA738C9E246F609C80E65F0B925A92 TIMESTAMP DELEGATECALL DUP7 0xD9 0xE5 XOR 0xB5 POP LOG0 LOG0 0xBC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"188:2065:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b14711f206dda738c9e246f609c80e65f0b925a9242f486d9e518b550a0a0bc64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE EQ PUSH18 0x1F206DDA738C9E246F609C80E65F0B925A92 TIMESTAMP DELEGATECALL DUP7 0xD9 0xE5 XOR 0xB5 POP LOG0 LOG0 0xBC PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"188:2065:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023347be43f6463e0864ecd7d79cb1cde57cdd06d100a0c39284809729bec5a7c64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALLVALUE PUSH28 0xE43F6463E0864ECD7D79CB1CDE57CDD06D100A0C39284809729BEC5A PUSH29 0x64736F6C63430008090033000000000000000000000000000000000000 ","sourceMap":"202:12302:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023347be43f6463e0864ecd7d79cb1cde57cdd06d100a0c39284809729bec5a7c64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 CALLVALUE PUSH28 0xE43F6463E0864ECD7D79CB1CDE57CDD06D100A0C39284809729BEC5A PUSH29 0x64736F6C63430008090033000000000000000000000000000000000000 ","sourceMap":"202:12302:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomIpfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"dogTokenUris","type":"string[3]"},{"internalType":"uint256","name":"mintFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Ipfs_NotEnoughToMint","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"ipfs_Not_Owner","type":"error"},{"inputs":[],"name":"ipfs_RangeOutOfBound","type":"error"},{"inputs":[],"name":"ipfs_TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"NftMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"requestedNft","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getArrayChance","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedByModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenUris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"requestIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"s_tokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1174":{"entryPoint":null,"id":1174,"parameterSlots":2,"returnSlots":0},"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_3876":{"entryPoint":null,"id":3876,"parameterSlots":6,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1615,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1489,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1564,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory":{"entryPoint":1862,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":1299,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":862,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1330,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":914,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1052,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1803,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":983,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1435,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2096,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1245,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2049,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1198,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1176,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1371,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1376,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":877,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":872,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1181,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1062,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1813,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1127,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1003,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8280:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"759:80:16","statements":[{"nodeType":"YulAssignment","src":"769:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:16"},"nodeType":"YulFunctionCall","src":"778:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:16"},"nodeType":"YulFunctionCall","src":"800:33:16"},"nodeType":"YulExpressionStatement","src":"800:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:16","type":""}],"src":"696:143:16"},{"body":{"nodeType":"YulBlock","src":"889:57:16","statements":[{"nodeType":"YulAssignment","src":"899:41:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"921:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:16"},"nodeType":"YulFunctionCall","src":"910:30:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:16"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:16","type":""}],"src":"845:101:16"},{"body":{"nodeType":"YulBlock","src":"994:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"1050:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1062:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1052:6:16"},"nodeType":"YulFunctionCall","src":"1052:12:16"},"nodeType":"YulExpressionStatement","src":"1052:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1041:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1024:16:16"},"nodeType":"YulFunctionCall","src":"1024:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1014:2:16"},"nodeType":"YulFunctionCall","src":"1014:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1007:6:16"},"nodeType":"YulFunctionCall","src":"1007:42:16"},"nodeType":"YulIf","src":"1004:62:16"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"987:5:16","type":""}],"src":"952:120:16"},{"body":{"nodeType":"YulBlock","src":"1140:79:16","statements":[{"nodeType":"YulAssignment","src":"1150:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1165:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1159:5:16"},"nodeType":"YulFunctionCall","src":"1159:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1150:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:16"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1181:25:16"},"nodeType":"YulFunctionCall","src":"1181:32:16"},"nodeType":"YulExpressionStatement","src":"1181:32:16"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1118:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1126:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:16","type":""}],"src":"1078:141:16"},{"body":{"nodeType":"YulBlock","src":"1270:32:16","statements":[{"nodeType":"YulAssignment","src":"1280:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1291:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1280:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1252:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1262:7:16","type":""}],"src":"1225:77:16"},{"body":{"nodeType":"YulBlock","src":"1351:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1408:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1420:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1410:6:16"},"nodeType":"YulFunctionCall","src":"1410:12:16"},"nodeType":"YulExpressionStatement","src":"1410:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1399:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1381:17:16"},"nodeType":"YulFunctionCall","src":"1381:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1371:2:16"},"nodeType":"YulFunctionCall","src":"1371:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1364:6:16"},"nodeType":"YulFunctionCall","src":"1364:43:16"},"nodeType":"YulIf","src":"1361:63:16"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1344:5:16","type":""}],"src":"1308:122:16"},{"body":{"nodeType":"YulBlock","src":"1499:80:16","statements":[{"nodeType":"YulAssignment","src":"1509:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1524:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:16"},"nodeType":"YulFunctionCall","src":"1518:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1540:26:16"},"nodeType":"YulFunctionCall","src":"1540:33:16"},"nodeType":"YulExpressionStatement","src":"1540:33:16"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1477:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1485:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:16","type":""}],"src":"1436:143:16"},{"body":{"nodeType":"YulBlock","src":"1629:49:16","statements":[{"nodeType":"YulAssignment","src":"1639:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1661:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1650:3:16"},"nodeType":"YulFunctionCall","src":"1650:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1639:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1611:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1621:7:16","type":""}],"src":"1585:93:16"},{"body":{"nodeType":"YulBlock","src":"1726:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:16"},"nodeType":"YulFunctionCall","src":"1784:12:16"},"nodeType":"YulExpressionStatement","src":"1784:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1749:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1756:16:16"},"nodeType":"YulFunctionCall","src":"1756:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1746:2:16"},"nodeType":"YulFunctionCall","src":"1746:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1739:6:16"},"nodeType":"YulFunctionCall","src":"1739:42:16"},"nodeType":"YulIf","src":"1736:62:16"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1719:5:16","type":""}],"src":"1684:120:16"},{"body":{"nodeType":"YulBlock","src":"1872:79:16","statements":[{"nodeType":"YulAssignment","src":"1882:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1897:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:16"},"nodeType":"YulFunctionCall","src":"1891:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:16"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1913:25:16"},"nodeType":"YulFunctionCall","src":"1913:32:16"},"nodeType":"YulExpressionStatement","src":"1913:32:16"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1850:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1858:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:16","type":""}],"src":"1810:141:16"},{"body":{"nodeType":"YulBlock","src":"2046:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2056:6:16"},"nodeType":"YulFunctionCall","src":"2056:12:16"},"nodeType":"YulExpressionStatement","src":"2056:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1957:117:16"},{"body":{"nodeType":"YulBlock","src":"2128:54:16","statements":[{"nodeType":"YulAssignment","src":"2138:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2156:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:16"},"nodeType":"YulFunctionCall","src":"2152:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2172:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2168:3:16"},"nodeType":"YulFunctionCall","src":"2168:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2148:3:16"},"nodeType":"YulFunctionCall","src":"2148:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2138:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2111:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2121:6:16","type":""}],"src":"2080:102:16"},{"body":{"nodeType":"YulBlock","src":"2216:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:88:16"},"nodeType":"YulExpressionStatement","src":"2226:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2333:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:16"},"nodeType":"YulFunctionCall","src":"2323:15:16"},"nodeType":"YulExpressionStatement","src":"2323:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2357:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:16"},"nodeType":"YulFunctionCall","src":"2347:15:16"},"nodeType":"YulExpressionStatement","src":"2347:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2188:180:16"},{"body":{"nodeType":"YulBlock","src":"2417:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2449:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2479:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2457:21:16"},"nodeType":"YulFunctionCall","src":"2457:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2431:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2596:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2598:16:16"},"nodeType":"YulFunctionCall","src":"2598:18:16"},"nodeType":"YulExpressionStatement","src":"2598:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2539:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2536:2:16"},"nodeType":"YulFunctionCall","src":"2536:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2575:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2587:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2533:2:16"},"nodeType":"YulFunctionCall","src":"2533:62:16"},"nodeType":"YulIf","src":"2530:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2634:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:16"},"nodeType":"YulFunctionCall","src":"2627:22:16"},"nodeType":"YulExpressionStatement","src":"2627:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"2411:4:16","type":""}],"src":"2374:281:16"},{"body":{"nodeType":"YulBlock","src":"2702:88:16","statements":[{"nodeType":"YulAssignment","src":"2712:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2722:18:16"},"nodeType":"YulFunctionCall","src":"2722:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2712:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2771:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"2779:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2751:19:16"},"nodeType":"YulFunctionCall","src":"2751:33:16"},"nodeType":"YulExpressionStatement","src":"2751:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2686:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2695:6:16","type":""}],"src":"2661:129:16"},{"body":{"nodeType":"YulBlock","src":"2886:169:16","statements":[{"body":{"nodeType":"YulBlock","src":"2991:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2993:16:16"},"nodeType":"YulFunctionCall","src":"2993:18:16"},"nodeType":"YulExpressionStatement","src":"2993:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2963:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2971:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2960:2:16"},"nodeType":"YulFunctionCall","src":"2960:30:16"},"nodeType":"YulIf","src":"2957:56:16"},{"nodeType":"YulAssignment","src":"3023:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3035:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3031:3:16"},"nodeType":"YulFunctionCall","src":"3031:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3023:4:16"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2870:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2881:4:16","type":""}],"src":"2796:259:16"},{"body":{"nodeType":"YulBlock","src":"3150:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3167:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3170:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3160:6:16"},"nodeType":"YulFunctionCall","src":"3160:12:16"},"nodeType":"YulExpressionStatement","src":"3160:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3061:117:16"},{"body":{"nodeType":"YulBlock","src":"3273:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:16"},"nodeType":"YulFunctionCall","src":"3283:12:16"},"nodeType":"YulExpressionStatement","src":"3283:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3184:117:16"},{"body":{"nodeType":"YulBlock","src":"3374:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"3479:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3481:16:16"},"nodeType":"YulFunctionCall","src":"3481:18:16"},"nodeType":"YulExpressionStatement","src":"3481:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3451:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3459:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3448:2:16"},"nodeType":"YulFunctionCall","src":"3448:30:16"},"nodeType":"YulIf","src":"3445:56:16"},{"nodeType":"YulAssignment","src":"3511:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3541:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3519:21:16"},"nodeType":"YulFunctionCall","src":"3519:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3511:4:16"}]},{"nodeType":"YulAssignment","src":"3585:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3597:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3603:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:16"},"nodeType":"YulFunctionCall","src":"3593:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3585:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3358:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3369:4:16","type":""}],"src":"3307:308:16"},{"body":{"nodeType":"YulBlock","src":"3670:258:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3680:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3689:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3684:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3749:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3774:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3779:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3770:3:16"},"nodeType":"YulFunctionCall","src":"3770:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3793:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3798:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3789:3:16"},"nodeType":"YulFunctionCall","src":"3789:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3783:5:16"},"nodeType":"YulFunctionCall","src":"3783:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3763:6:16"},"nodeType":"YulFunctionCall","src":"3763:39:16"},"nodeType":"YulExpressionStatement","src":"3763:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3710:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3713:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3707:2:16"},"nodeType":"YulFunctionCall","src":"3707:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3721:19:16","statements":[{"nodeType":"YulAssignment","src":"3723:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3732:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"3735:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3728:3:16"},"nodeType":"YulFunctionCall","src":"3728:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3723:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3703:3:16","statements":[]},"src":"3699:113:16"},{"body":{"nodeType":"YulBlock","src":"3846:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3896:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3901:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3892:3:16"},"nodeType":"YulFunctionCall","src":"3892:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"3910:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:16"},"nodeType":"YulFunctionCall","src":"3885:27:16"},"nodeType":"YulExpressionStatement","src":"3885:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3827:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3830:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3824:2:16"},"nodeType":"YulFunctionCall","src":"3824:13:16"},"nodeType":"YulIf","src":"3821:101:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3652:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3657:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3662:6:16","type":""}],"src":"3621:307:16"},{"body":{"nodeType":"YulBlock","src":"4029:326:16","statements":[{"nodeType":"YulAssignment","src":"4039:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4106:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4064:41:16"},"nodeType":"YulFunctionCall","src":"4064:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4048:15:16"},"nodeType":"YulFunctionCall","src":"4048:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4039:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4130:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"4137:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4123:6:16"},"nodeType":"YulFunctionCall","src":"4123:21:16"},"nodeType":"YulExpressionStatement","src":"4123:21:16"},{"nodeType":"YulVariableDeclaration","src":"4153:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4168:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:16"},"nodeType":"YulFunctionCall","src":"4164:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4157:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4218:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4220:77:16"},"nodeType":"YulFunctionCall","src":"4220:79:16"},"nodeType":"YulExpressionStatement","src":"4220:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4199:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4204:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:16"},"nodeType":"YulFunctionCall","src":"4195:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"4213:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4192:2:16"},"nodeType":"YulFunctionCall","src":"4192:25:16"},"nodeType":"YulIf","src":"4189:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4332:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"4337:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4342:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4310:21:16"},"nodeType":"YulFunctionCall","src":"4310:39:16"},"nodeType":"YulExpressionStatement","src":"4310:39:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4002:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4007:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4015:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4023:5:16","type":""}],"src":"3934:421:16"},{"body":{"nodeType":"YulBlock","src":"4448:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"4497:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4499:77:16"},"nodeType":"YulFunctionCall","src":"4499:79:16"},"nodeType":"YulExpressionStatement","src":"4499:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4476:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4484:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4472:3:16"},"nodeType":"YulFunctionCall","src":"4472:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"4491:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4468:3:16"},"nodeType":"YulFunctionCall","src":"4468:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4461:6:16"},"nodeType":"YulFunctionCall","src":"4461:35:16"},"nodeType":"YulIf","src":"4458:122:16"},{"nodeType":"YulVariableDeclaration","src":"4589:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4609:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4603:5:16"},"nodeType":"YulFunctionCall","src":"4603:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4593:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4625:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4697:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4705:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:16"},"nodeType":"YulFunctionCall","src":"4693:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"4712:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"4720:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4634:58:16"},"nodeType":"YulFunctionCall","src":"4634:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4625:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4426:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4434:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4442:5:16","type":""}],"src":"4375:355:16"},{"body":{"nodeType":"YulBlock","src":"4874:772:16","statements":[{"nodeType":"YulAssignment","src":"4884:98:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4974:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"4909:64:16"},"nodeType":"YulFunctionCall","src":"4909:72:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4893:15:16"},"nodeType":"YulFunctionCall","src":"4893:89:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4884:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"4991:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"5002:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4995:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5017:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5035:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5047:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5055:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5043:3:16"},"nodeType":"YulFunctionCall","src":"5043:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:16"},"nodeType":"YulFunctionCall","src":"5031:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5021:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5089:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5103:77:16"},"nodeType":"YulFunctionCall","src":"5103:79:16"},"nodeType":"YulExpressionStatement","src":"5103:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5076:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"5084:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5073:2:16"},"nodeType":"YulFunctionCall","src":"5073:15:16"},"nodeType":"YulIf","src":"5070:122:16"},{"body":{"nodeType":"YulBlock","src":"5277:363:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5292:29:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5317:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5311:5:16"},"nodeType":"YulFunctionCall","src":"5311:10:16"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5296:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5373:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5375:77:16"},"nodeType":"YulFunctionCall","src":"5375:79:16"},"nodeType":"YulExpressionStatement","src":"5375:79:16"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5340:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5353:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5337:2:16"},"nodeType":"YulFunctionCall","src":"5337:35:16"},"nodeType":"YulIf","src":"5334:122:16"},{"nodeType":"YulVariableDeclaration","src":"5469:42:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5491:6:16"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"5499:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5487:3:16"},"nodeType":"YulFunctionCall","src":"5487:24:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5473:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5532:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5579:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"5591:3:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5537:41:16"},"nodeType":"YulFunctionCall","src":"5537:58:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:16"},"nodeType":"YulFunctionCall","src":"5525:71:16"},"nodeType":"YulExpressionStatement","src":"5525:71:16"},{"nodeType":"YulAssignment","src":"5609:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5620:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5625:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:16"},"nodeType":"YulFunctionCall","src":"5616:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5609:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5230:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5235:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5227:2:16"},"nodeType":"YulFunctionCall","src":"5227:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5243:25:16","statements":[{"nodeType":"YulAssignment","src":"5245:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5256:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:16"},"nodeType":"YulFunctionCall","src":"5252:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5245:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5205:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5207:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"5218:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5211:3:16","type":""}]}]},"src":"5201:439:16"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4844:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4852:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4860:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4868:5:16","type":""}],"src":"4753:893:16"},{"body":{"nodeType":"YulBlock","src":"5765:285:16","statements":[{"body":{"nodeType":"YulBlock","src":"5814:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5816:77:16"},"nodeType":"YulFunctionCall","src":"5816:79:16"},"nodeType":"YulExpressionStatement","src":"5816:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5793:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5801:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:16"},"nodeType":"YulFunctionCall","src":"5789:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"5808:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5785:3:16"},"nodeType":"YulFunctionCall","src":"5785:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5778:6:16"},"nodeType":"YulFunctionCall","src":"5778:35:16"},"nodeType":"YulIf","src":"5775:122:16"},{"nodeType":"YulVariableDeclaration","src":"5906:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5920:4:16","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5910:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5933:111:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6024:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"6032:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"6040:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5942:81:16"},"nodeType":"YulFunctionCall","src":"5942:102:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5933:5:16"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5743:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5751:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5759:5:16","type":""}],"src":"5669:381:16"},{"body":{"nodeType":"YulBlock","src":"6101:32:16","statements":[{"nodeType":"YulAssignment","src":"6111:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"6122:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6111:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6083:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6093:7:16","type":""}],"src":"6056:77:16"},{"body":{"nodeType":"YulBlock","src":"6182:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"6239:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6248:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6251:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6241:6:16"},"nodeType":"YulFunctionCall","src":"6241:12:16"},"nodeType":"YulExpressionStatement","src":"6241:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6205:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6230:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6212:17:16"},"nodeType":"YulFunctionCall","src":"6212:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6202:2:16"},"nodeType":"YulFunctionCall","src":"6202:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6195:6:16"},"nodeType":"YulFunctionCall","src":"6195:43:16"},"nodeType":"YulIf","src":"6192:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:16","type":""}],"src":"6139:122:16"},{"body":{"nodeType":"YulBlock","src":"6330:80:16","statements":[{"nodeType":"YulAssignment","src":"6340:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6355:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6349:5:16"},"nodeType":"YulFunctionCall","src":"6349:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6340:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6398:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6371:26:16"},"nodeType":"YulFunctionCall","src":"6371:33:16"},"nodeType":"YulExpressionStatement","src":"6371:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6316:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:16","type":""}],"src":"6267:143:16"},{"body":{"nodeType":"YulBlock","src":"6609:1156:16","statements":[{"body":{"nodeType":"YulBlock","src":"6656:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6658:77:16"},"nodeType":"YulFunctionCall","src":"6658:79:16"},"nodeType":"YulExpressionStatement","src":"6658:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6630:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6639:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6626:3:16"},"nodeType":"YulFunctionCall","src":"6626:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6651:3:16","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6622:3:16"},"nodeType":"YulFunctionCall","src":"6622:33:16"},"nodeType":"YulIf","src":"6619:120:16"},{"nodeType":"YulBlock","src":"6749:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6764:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6778:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6768:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6793:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6839:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6850:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6835:3:16"},"nodeType":"YulFunctionCall","src":"6835:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6859:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6803:31:16"},"nodeType":"YulFunctionCall","src":"6803:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6793:6:16"}]}]},{"nodeType":"YulBlock","src":"6887:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6902:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6916:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6906:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6932:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6988:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:16"},"nodeType":"YulFunctionCall","src":"6973:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6997:7:16"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"6942:30:16"},"nodeType":"YulFunctionCall","src":"6942:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6932:6:16"}]}]},{"nodeType":"YulBlock","src":"7025:129:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7040:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7054:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7044:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7070:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7116:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7127:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:16"},"nodeType":"YulFunctionCall","src":"7112:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7136:7:16"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"7080:31:16"},"nodeType":"YulFunctionCall","src":"7080:64:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7070:6:16"}]}]},{"nodeType":"YulBlock","src":"7164:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7179:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7193:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7183:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7209:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7265:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:16"},"nodeType":"YulFunctionCall","src":"7250:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7274:7:16"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"7219:30:16"},"nodeType":"YulFunctionCall","src":"7219:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7209:6:16"}]}]},{"nodeType":"YulBlock","src":"7302:316:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7317:40:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7352:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7337:3:16"},"nodeType":"YulFunctionCall","src":"7337:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7331:5:16"},"nodeType":"YulFunctionCall","src":"7331:26:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7321:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7404:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7406:77:16"},"nodeType":"YulFunctionCall","src":"7406:79:16"},"nodeType":"YulExpressionStatement","src":"7406:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7376:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7384:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7373:2:16"},"nodeType":"YulFunctionCall","src":"7373:30:16"},"nodeType":"YulIf","src":"7370:117:16"},{"nodeType":"YulAssignment","src":"7501:107:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7591:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:16"},"nodeType":"YulFunctionCall","src":"7576:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7600:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7511:64:16"},"nodeType":"YulFunctionCall","src":"7511:97:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7501:6:16"}]}]},{"nodeType":"YulBlock","src":"7628:130:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7643:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7657:3:16","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7647:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7674:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7731:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:16"},"nodeType":"YulFunctionCall","src":"7716:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7740:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7684:31:16"},"nodeType":"YulFunctionCall","src":"7684:64:16"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7674:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6539:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6550:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6562:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6570:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6578:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6586:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6594:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6602:6:16","type":""}],"src":"6416:1349:16"},{"body":{"nodeType":"YulBlock","src":"7799:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7816:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7819:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7809:6:16"},"nodeType":"YulFunctionCall","src":"7809:88:16"},"nodeType":"YulExpressionStatement","src":"7809:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7916:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:16"},"nodeType":"YulFunctionCall","src":"7906:15:16"},"nodeType":"YulExpressionStatement","src":"7906:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7937:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7930:6:16"},"nodeType":"YulFunctionCall","src":"7930:15:16"},"nodeType":"YulExpressionStatement","src":"7930:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7771:180:16"},{"body":{"nodeType":"YulBlock","src":"8008:269:16","statements":[{"nodeType":"YulAssignment","src":"8018:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8032:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8038:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8028:3:16"},"nodeType":"YulFunctionCall","src":"8028:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8018:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"8049:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8079:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8085:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8075:3:16"},"nodeType":"YulFunctionCall","src":"8075:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8053:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8126:51:16","statements":[{"nodeType":"YulAssignment","src":"8140:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8154:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8162:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:16"},"nodeType":"YulFunctionCall","src":"8150:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8140:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8106:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8099:6:16"},"nodeType":"YulFunctionCall","src":"8099:26:16"},"nodeType":"YulIf","src":"8096:81:16"},{"body":{"nodeType":"YulBlock","src":"8229:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8243:16:16"},"nodeType":"YulFunctionCall","src":"8243:18:16"},"nodeType":"YulExpressionStatement","src":"8243:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8193:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8216:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8224:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8213:2:16"},"nodeType":"YulFunctionCall","src":"8213:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8190:2:16"},"nodeType":"YulFunctionCall","src":"8190:38:16"},"nodeType":"YulIf","src":"8187:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7992:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8001:6:16","type":""}],"src":"7957:320:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4010 CODESIZE SUB DUP1 PUSH3 0x4010 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D497066734E667400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF2 SWAP3 SWAP2 SWAP1 PUSH3 0x1D9 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10B SWAP3 SWAP2 SWAP1 PUSH3 0x1D9 JUMP JUMPDEST POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0xA SWAP1 PUSH1 0x3 PUSH3 0x18E SWAP3 SWAP2 SWAP1 PUSH3 0x26A JUMP JUMPDEST POP DUP1 PUSH2 0x140 DUP2 DUP2 MSTORE POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x866 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1E7 SWAP1 PUSH3 0x830 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x20B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x257 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x226 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x257 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x257 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x256 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x239 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x266 SWAP2 SWAP1 PUSH3 0x2D1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2BE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BD JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2AC SWAP3 SWAP2 SWAP1 PUSH3 0x1D9 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x28B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2CD SWAP2 SWAP1 PUSH3 0x2F0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2EC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x314 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x30A SWAP2 SWAP1 PUSH3 0x318 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x2F1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x326 SWAP1 PUSH3 0x830 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x33A JUMPI POP PUSH3 0x35B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x35A SWAP2 SWAP1 PUSH3 0x2D1 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39F DUP3 PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B1 DUP2 PUSH3 0x392 JUMP JUMPDEST DUP2 EQ PUSH3 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3D1 DUP2 PUSH3 0x3A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3F6 DUP2 PUSH3 0x3D7 JUMP JUMPDEST DUP2 EQ PUSH3 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x416 DUP2 PUSH3 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x431 DUP2 PUSH3 0x41C JUMP JUMPDEST DUP2 EQ PUSH3 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x451 DUP2 PUSH3 0x426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x472 DUP2 PUSH3 0x457 JUMP JUMPDEST DUP2 EQ PUSH3 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x492 DUP2 PUSH3 0x467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x4E8 DUP3 PUSH3 0x49D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x50A JUMPI PUSH3 0x509 PUSH3 0x4AE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x51F PUSH3 0x35E JUMP JUMPDEST SWAP1 POP PUSH3 0x52D DUP3 DUP3 PUSH3 0x4DD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x550 JUMPI PUSH3 0x54F PUSH3 0x4AE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x583 JUMPI PUSH3 0x582 PUSH3 0x4AE JUMP JUMPDEST JUMPDEST PUSH3 0x58E DUP3 PUSH3 0x49D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5BB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x59E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E8 PUSH3 0x5E2 DUP5 PUSH3 0x565 JUMP JUMPDEST PUSH3 0x513 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x607 JUMPI PUSH3 0x606 PUSH3 0x560 JUMP JUMPDEST JUMPDEST PUSH3 0x614 DUP5 DUP3 DUP6 PUSH3 0x59B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x634 JUMPI PUSH3 0x633 PUSH3 0x498 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x646 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x666 PUSH3 0x660 DUP5 PUSH3 0x532 JUMP JUMPDEST PUSH3 0x513 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x683 JUMPI PUSH3 0x682 PUSH3 0x55B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x6D1 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6AC JUMPI PUSH3 0x6AB PUSH3 0x498 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x6BB DUP10 DUP3 PUSH3 0x61C JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x685 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x6F3 JUMPI PUSH3 0x6F2 PUSH3 0x498 JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x702 DUP5 DUP3 DUP6 PUSH3 0x64F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x720 DUP2 PUSH3 0x70B JUMP JUMPDEST DUP2 EQ PUSH3 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x740 DUP2 PUSH3 0x715 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x766 JUMPI PUSH3 0x765 PUSH3 0x368 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x776 DUP10 DUP3 DUP11 ADD PUSH3 0x3C0 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x789 DUP10 DUP3 DUP11 ADD PUSH3 0x405 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x79C DUP10 DUP3 DUP11 ADD PUSH3 0x440 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x7AF DUP10 DUP3 DUP11 ADD PUSH3 0x481 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7D3 JUMPI PUSH3 0x7D2 PUSH3 0x36D JUMP JUMPDEST JUMPDEST PUSH3 0x7E1 DUP10 DUP3 DUP11 ADD PUSH3 0x6DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x7F4 DUP10 DUP3 DUP11 ADD PUSH3 0x72F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x849 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x860 JUMPI PUSH3 0x85F PUSH3 0x801 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x3741 PUSH3 0x8CF PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xDB1 ADD MSTORE PUSH2 0xEA5 ADD MSTORE PUSH1 0x0 PUSH2 0xB15 ADD MSTORE PUSH1 0x0 PUSH2 0xF7F ADD MSTORE PUSH1 0x0 PUSH2 0xF3B ADD MSTORE PUSH1 0x0 PUSH2 0xF5C ADD MSTORE PUSH1 0x0 PUSH2 0xEFF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x864 ADD MSTORE PUSH2 0x8B8 ADD MSTORE PUSH2 0x3741 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xDB169C69 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x54D JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x44A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FE543E3 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x30D6B0F1 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x314 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x213 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x265B JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x280D JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0xB13 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x537 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x2BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x655 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x665 JUMPI POP PUSH2 0x664 DUP3 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x67B SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A7 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x709 DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74F DUP3 PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DF PUSH2 0x138A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x80E JUMPI POP PUSH2 0x80D DUP2 PUSH2 0x808 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST JUMPDEST PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP1 PUSH2 0x2D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x857 DUP4 DUP4 PUSH2 0x1392 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x914 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90B SWAP3 SWAP2 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91E DUP3 DUP3 PUSH2 0x144B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x92D PUSH2 0x138A JUMP JUMPDEST DUP3 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x969 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97D DUP4 DUP4 DUP4 PUSH2 0x1665 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x993 PUSH2 0x1216 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA2B JUMPI DUP3 DUP6 GT DUP1 ISZERO PUSH2 0x9D1 JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x2EC3 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x9E8 PUSH2 0x28BC JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xA5E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA05 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xA23 SWAP1 PUSH2 0x2F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4C87E2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA79 JUMPI PUSH2 0xA78 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA8E SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABA SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x21E0F6F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xBC3 SWAP1 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23E477E700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC5F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC70 DUP4 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD9 SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP1 PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE08 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE34 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE9D PUSH2 0xE96 PUSH2 0x138A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x199C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x73B53B9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0x3B07F8D4BB79CDF471A71ADC46FE8A07EC6DD5242AD9D8018D09303F41EF524 CALLER PUSH1 0x40 MLOAD PUSH2 0x1096 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x10AC PUSH2 0x138A JUMP JUMPDEST DUP4 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10FD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1B09 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x110E DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x112E SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x115A SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x117C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x118A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x11B8 PUSH2 0x1B65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x11CE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1203 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11EB SWAP3 SWAP2 SWAP1 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x120C DUP5 PUSH2 0x1B7C JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121E PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137E SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1405 DUP4 PUSH2 0xC64 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14A2 JUMPI PUSH2 0x14A1 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14B4 SWAP2 SWAP1 PUSH2 0x3242 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14C1 DUP3 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP PUSH2 0x14CD DUP5 DUP5 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x158F DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14E6 JUMPI PUSH2 0x14E5 PUSH2 0x28BC JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x150C SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1538 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1585 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x155A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1585 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1568 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1C43 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15C0 SWAP3 SWAP2 SWAP1 PUSH2 0x3273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15DC DUP4 PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x161E JUMPI POP PUSH2 0x161D DUP2 DUP6 PUSH2 0x1241 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x165C JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1644 DUP5 PUSH2 0x6FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1685 DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x174B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1742 SWAP1 PUSH2 0x33A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1758 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CB7 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1778 DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C5 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x195A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A02 SWAP1 PUSH2 0x340C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AFC SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1B14 DUP5 DUP5 DUP5 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x1B20 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B56 SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B87 DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B91 PUSH2 0x1B65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1BB1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BDC JUMP JUMPDEST DUP1 PUSH2 0x1BBB DUP5 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BCC SWAP3 SWAP2 SWAP1 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C06 DUP4 PUSH2 0x195F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C4C DUP3 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1C8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C82 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1CB2 SWAP3 SWAP2 SWAP1 PUSH2 0x2343 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8D JUMP JUMPDEST ISZERO PUSH2 0x1E4D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1D0D PUSH2 0x138A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D7A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DFD JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DAA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1E69 DUP5 PUSH2 0x1FB0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E88 JUMPI PUSH2 0x1E87 PUSH2 0x26CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EBA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1F27 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x1EC8 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3C DUP4 DUP4 PUSH2 0x2103 JUMP JUMPDEST PUSH2 0x1F49 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0x1F88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7F SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x200E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x204B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x207A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2070 JUMPI PUSH2 0x206F PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x20A3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2099 JUMPI PUSH2 0x2098 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x20C8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x20BE JUMPI PUSH2 0x20BD PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x20EB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x20E1 JUMPI PUSH2 0x20E0 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x20FA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216A SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217C DUP2 PUSH2 0x1BE4 JUMP JUMPDEST ISZERO PUSH2 0x21BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B3 SWAP1 PUSH2 0x36EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21CA PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x21D3 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST ISZERO PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220A SWAP1 PUSH2 0x36EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x231D PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x234F SWAP1 PUSH2 0x2C54 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2371 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x23B8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x238A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23B8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23B8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23B7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x23C5 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23E2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x23CA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242F DUP2 PUSH2 0x23FA JUMP JUMPDEST DUP2 EQ PUSH2 0x243A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244C DUP2 PUSH2 0x2426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2476 DUP5 DUP3 DUP6 ADD PUSH2 0x243D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2494 DUP2 PUSH2 0x247F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x248B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24EF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24D4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x24FE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2520 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x252A DUP2 DUP6 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x253A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x2543 DUP2 PUSH2 0x2504 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2568 DUP2 DUP5 PUSH2 0x2515 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2583 DUP2 PUSH2 0x2570 JUMP JUMPDEST DUP2 EQ PUSH2 0x258E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A0 DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25BC JUMPI PUSH2 0x25BB PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25CA DUP5 DUP3 DUP6 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FE DUP3 PUSH2 0x25D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260E DUP2 PUSH2 0x25F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2629 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2605 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2638 DUP2 PUSH2 0x25F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2655 DUP2 PUSH2 0x262F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2672 JUMPI PUSH2 0x2671 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2680 DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2691 DUP6 DUP3 DUP7 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A4 DUP2 PUSH2 0x2570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x269B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2702 DUP3 PUSH2 0x2504 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2721 JUMPI PUSH2 0x2720 PUSH2 0x26CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 PUSH2 0x23E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2740 DUP3 DUP3 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2760 JUMPI PUSH2 0x275F PUSH2 0x26CA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2789 PUSH2 0x2784 DUP5 PUSH2 0x2745 JUMP JUMPDEST PUSH2 0x272A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x27AC JUMPI PUSH2 0x27AB PUSH2 0x2771 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D5 JUMPI DUP1 PUSH2 0x27C1 DUP9 DUP3 PUSH2 0x2591 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27AE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27F4 JUMPI PUSH2 0x27F3 PUSH2 0x26C5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2804 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2832 DUP6 DUP3 DUP7 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2853 JUMPI PUSH2 0x2852 PUSH2 0x23F5 JUMP JUMPDEST JUMPDEST PUSH2 0x285F DUP6 DUP3 DUP7 ADD PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2882 JUMPI PUSH2 0x2881 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2890 DUP7 DUP3 DUP8 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28B2 DUP7 DUP3 DUP8 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x28FC JUMPI PUSH2 0x28FB PUSH2 0x28BC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x290D DUP3 PUSH2 0x28EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x291D DUP3 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292D DUP2 PUSH2 0x2912 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2948 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2964 JUMPI PUSH2 0x2963 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP5 DUP3 DUP6 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2984 DUP2 PUSH2 0x247F JUMP JUMPDEST DUP2 EQ PUSH2 0x298F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29A1 DUP2 PUSH2 0x297B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BE JUMPI PUSH2 0x29BD PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29CC DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29DD DUP6 DUP3 DUP7 ADD PUSH2 0x2992 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A07 JUMPI PUSH2 0x2A06 PUSH2 0x26CA JUMP JUMPDEST JUMPDEST PUSH2 0x2A10 DUP3 PUSH2 0x2504 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3F PUSH2 0x2A3A DUP5 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x272A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A5B JUMPI PUSH2 0x2A5A PUSH2 0x29E7 JUMP JUMPDEST JUMPDEST PUSH2 0x2A66 DUP5 DUP3 DUP6 PUSH2 0x2A1D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A83 JUMPI PUSH2 0x2A82 PUSH2 0x26C5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A93 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AB6 JUMPI PUSH2 0x2AB5 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AC4 DUP8 DUP3 DUP9 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2AD5 DUP8 DUP3 DUP9 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AE6 DUP8 DUP3 DUP9 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B07 JUMPI PUSH2 0x2B06 PUSH2 0x23F5 JUMP JUMPDEST JUMPDEST PUSH2 0x2B13 DUP8 DUP3 DUP9 ADD PUSH2 0x2A6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B48 DUP2 PUSH2 0x2570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5A DUP4 DUP4 PUSH2 0x2B3F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7C DUP2 PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x2B86 DUP2 DUP5 PUSH2 0x2B2A JUMP JUMPDEST SWAP3 POP PUSH2 0x2B91 DUP3 PUSH2 0x2B35 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BC2 JUMPI DUP2 MLOAD PUSH2 0x2BA9 DUP8 DUP3 PUSH2 0x2B4E JUMP JUMPDEST SWAP7 POP PUSH2 0x2BB4 DUP4 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B95 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BFC JUMPI PUSH2 0x2BFB PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0A DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C1B DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C6C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x2C25 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE2 PUSH1 0x21 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CED DUP3 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D11 DUP2 PUSH2 0x2CD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D74 PUSH1 0x3D DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7F DUP3 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA3 DUP2 PUSH2 0x2D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DBF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x2DCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2605 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2F PUSH1 0x2D DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E3A DUP3 PUSH2 0x2DD3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E5E DUP2 PUSH2 0x2E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ECE DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED9 DUP4 PUSH2 0x2570 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F0E JUMPI PUSH2 0x2F0D PUSH2 0x2E94 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F24 DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2F57 JUMPI PUSH2 0x2F56 PUSH2 0x2E94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D PUSH1 0x0 DUP4 PUSH2 0x2F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F88 DUP3 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9E DUP3 PUSH2 0x2F70 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FDE PUSH1 0x18 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE9 DUP3 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x300D DUP2 PUSH2 0x2FD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3070 PUSH1 0x29 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x307B DUP3 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x309F DUP2 PUSH2 0x3063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30B9 DUP2 PUSH2 0x30A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30DC DUP2 PUSH2 0x30BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F9 DUP2 PUSH2 0x30E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3118 DUP2 PUSH2 0x30FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3133 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x3140 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x30D3 JUMP JUMPDEST PUSH2 0x314D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x30F0 JUMP JUMPDEST PUSH2 0x315A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x3167 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3180 DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x319C JUMPI PUSH2 0x319B PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31AA DUP5 DUP3 DUP6 ADD PUSH2 0x3171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C9 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x31D3 DUP2 DUP6 PUSH2 0x31B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x31E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24D1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31FB DUP3 DUP6 PUSH2 0x31BE JUMP JUMPDEST SWAP2 POP PUSH2 0x3207 DUP3 DUP5 PUSH2 0x31BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x324D DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP PUSH2 0x3258 DUP4 PUSH2 0x2570 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3268 JUMPI PUSH2 0x3267 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3288 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2924 JUMP JUMPDEST PUSH2 0x3295 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2605 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F8 PUSH1 0x25 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3303 DUP3 PUSH2 0x329C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3327 DUP2 PUSH2 0x32EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338A PUSH1 0x24 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3395 DUP3 PUSH2 0x332E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33B9 DUP2 PUSH2 0x337D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F6 PUSH1 0x19 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3401 DUP3 PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3425 DUP2 PUSH2 0x33E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3488 PUSH1 0x32 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3493 DUP3 PUSH2 0x342C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34B7 DUP2 PUSH2 0x347B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351A PUSH1 0x2E DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3525 DUP3 PUSH2 0x34BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3549 DUP2 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3577 DUP3 PUSH2 0x3550 JUMP JUMPDEST PUSH2 0x3581 DUP2 DUP6 PUSH2 0x355B JUMP JUMPDEST SWAP4 POP PUSH2 0x3591 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x359A DUP2 PUSH2 0x2504 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x35BA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x35C7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x35D4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x269B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x35E6 DUP2 DUP5 PUSH2 0x356C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3600 DUP2 PUSH2 0x2426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361C JUMPI PUSH2 0x361B PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x362A DUP5 DUP3 DUP6 ADD PUSH2 0x35F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3669 PUSH1 0x20 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3674 DUP3 PUSH2 0x3633 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3698 DUP2 PUSH2 0x365C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D5 PUSH1 0x1C DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x36E0 DUP3 PUSH2 0x369F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3704 DUP2 PUSH2 0x36C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x55DEB95FF85B6FC9D66C21189E8981699A6683DAA40ED13466A570 PUSH30 0x47917864736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"279:3774:15:-:0;;;1278:530;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:16:15;5616:15:0;5599:32;;;;;;;;;;5556:80;1464:5:4;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;1566:16:15::2;1519:64;;;;;;;;::::0;::::2;1612:14;1593:33;;;;;;;;::::0;::::2;1648:7;1636:19;;;;::::0;::::2;1686:16;1665:37;;;;;;;;::::0;::::2;1729:12;1712:14;:29;;;;;;;:::i;:::-;;1763:7;1751:19;;;;::::0;::::2;1790:10;1780:20;;;;;;;;::::0;::::2;1278:530:::0;;;;;;279:3774;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:93::-;1621:7;1661:10;1654:5;1650:22;1639:33;;1585:93;;;:::o;1684:120::-;1756:23;1773:5;1756:23;:::i;:::-;1749:5;1746:34;1736:62;;1794:1;1791;1784:12;1736:62;1684:120;:::o;1810:141::-;1866:5;1897:6;1891:13;1882:22;;1913:32;1939:5;1913:32;:::i;:::-;1810:141;;;;:::o;1957:117::-;2066:1;2063;2056:12;2080:102;2121:6;2172:2;2168:7;2163:2;2156:5;2152:14;2148:28;2138:38;;2080:102;;;:::o;2188:180::-;2236:77;2233:1;2226:88;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2374:281;2457:27;2479:4;2457:27;:::i;:::-;2449:6;2445:40;2587:6;2575:10;2572:22;2551:18;2539:10;2536:34;2533:62;2530:88;;;2598:18;;:::i;:::-;2530:88;2638:10;2634:2;2627:22;2417:238;2374:281;;:::o;2661:129::-;2695:6;2722:20;;:::i;:::-;2712:30;;2751:33;2779:4;2771:6;2751:33;:::i;:::-;2661:129;;;:::o;2796:259::-;2881:4;2971:18;2963:6;2960:30;2957:56;;;2993:18;;:::i;:::-;2957:56;3043:4;3035:6;3031:17;3023:25;;2796:259;;;:::o;3061:117::-;3170:1;3167;3160:12;3184:117;3293:1;3290;3283:12;3307:308;3369:4;3459:18;3451:6;3448:30;3445:56;;;3481:18;;:::i;:::-;3445:56;3519:29;3541:6;3519:29;:::i;:::-;3511:37;;3603:4;3597;3593:15;3585:23;;3307:308;;;:::o;3621:307::-;3689:1;3699:113;3713:6;3710:1;3707:13;3699:113;;;3798:1;3793:3;3789:11;3783:18;3779:1;3774:3;3770:11;3763:39;3735:2;3732:1;3728:10;3723:15;;3699:113;;;3830:6;3827:1;3824:13;3821:101;;;3910:1;3901:6;3896:3;3892:16;3885:27;3821:101;3670:258;3621:307;;;:::o;3934:421::-;4023:5;4048:66;4064:49;4106:6;4064:49;:::i;:::-;4048:66;:::i;:::-;4039:75;;4137:6;4130:5;4123:21;4175:4;4168:5;4164:16;4213:3;4204:6;4199:3;4195:16;4192:25;4189:112;;;4220:79;;:::i;:::-;4189:112;4310:39;4342:6;4337:3;4332;4310:39;:::i;:::-;4029:326;3934:421;;;;;:::o;4375:355::-;4442:5;4491:3;4484:4;4476:6;4472:17;4468:27;4458:122;;4499:79;;:::i;:::-;4458:122;4609:6;4603:13;4634:90;4720:3;4712:6;4705:4;4697:6;4693:17;4634:90;:::i;:::-;4625:99;;4448:282;4375:355;;;;:::o;4753:893::-;4868:5;4893:89;4909:72;4974:6;4909:72;:::i;:::-;4893:89;:::i;:::-;4884:98;;5002:5;5055:4;5047:6;5043:17;5035:6;5031:30;5084:3;5076:6;5073:15;5070:122;;;5103:79;;:::i;:::-;5070:122;5218:6;5201:439;5235:6;5230:3;5227:15;5201:439;;;5317:3;5311:10;5353:18;5340:11;5337:35;5334:122;;;5375:79;;:::i;:::-;5334:122;5499:11;5491:6;5487:24;5537:58;5591:3;5579:10;5537:58;:::i;:::-;5532:3;5525:71;5625:4;5620:3;5616:14;5609:21;;5277:363;;5261:4;5256:3;5252:14;5245:21;;5201:439;;;5205:21;4874:772;;4753:893;;;;;:::o;5669:381::-;5759:5;5808:3;5801:4;5793:6;5789:17;5785:27;5775:122;;5816:79;;:::i;:::-;5775:122;5920:4;5942:102;6040:3;6032:6;6024;5942:102;:::i;:::-;5933:111;;5765:285;5669:381;;;;:::o;6056:77::-;6093:7;6122:5;6111:16;;6056:77;;;:::o;6139:122::-;6212:24;6230:5;6212:24;:::i;:::-;6205:5;6202:35;6192:63;;6251:1;6248;6241:12;6192:63;6139:122;:::o;6267:143::-;6324:5;6355:6;6349:13;6340:22;;6371:33;6398:5;6371:33;:::i;:::-;6267:143;;;;:::o;6416:1349::-;6562:6;6570;6578;6586;6594;6602;6651:3;6639:9;6630:7;6626:23;6622:33;6619:120;;;6658:79;;:::i;:::-;6619:120;6778:1;6803:64;6859:7;6850:6;6839:9;6835:22;6803:64;:::i;:::-;6793:74;;6749:128;6916:2;6942:63;6997:7;6988:6;6977:9;6973:22;6942:63;:::i;:::-;6932:73;;6887:128;7054:2;7080:64;7136:7;7127:6;7116:9;7112:22;7080:64;:::i;:::-;7070:74;;7025:129;7193:2;7219:63;7274:7;7265:6;7254:9;7250:22;7219:63;:::i;:::-;7209:73;;7164:128;7352:3;7341:9;7337:19;7331:26;7384:18;7376:6;7373:30;7370:117;;;7406:79;;:::i;:::-;7370:117;7511:97;7600:7;7591:6;7580:9;7576:22;7511:97;:::i;:::-;7501:107;;7302:316;7657:3;7684:64;7740:7;7731:6;7720:9;7716:22;7684:64;:::i;:::-;7674:74;;7628:130;6416:1349;;;;;;;;:::o;7771:180::-;7819:77;7816:1;7809:88;7916:4;7913:1;7906:15;7940:4;7937:1;7930:15;7957:320;8001:6;8038:1;8032:4;8028:12;8018:22;;8085:1;8079:4;8075:12;8106:18;8096:81;;8162:4;8154:6;8150:17;8140:27;;8096:81;8224:2;8216:6;8213:14;8193:18;8190:38;8187:84;;;8243:18;;:::i;:::-;8187:84;8008:269;7957:320;;;:::o;279:3774:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2022":{"entryPoint":7357,"id":2022,"parameterSlots":4,"returnSlots":0},"@_approve_1888":{"entryPoint":5010,"id":1888,"parameterSlots":2,"returnSlots":0},"@_baseURI_1325":{"entryPoint":7013,"id":1325,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2009":{"entryPoint":7351,"id":2009,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1996":{"entryPoint":7363,"id":1996,"parameterSlots":4,"returnSlots":1},"@_exists_1557":{"entryPoint":7140,"id":1557,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1591":{"entryPoint":5584,"id":1591,"parameterSlots":2,"returnSlots":1},"@_mint_1712":{"entryPoint":8451,"id":1712,"parameterSlots":2,"returnSlots":0},"@_msgSender_2666":{"entryPoint":5002,"id":2666,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1539":{"entryPoint":6495,"id":1539,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1934":{"entryPoint":4927,"id":1934,"parameterSlots":1,"returnSlots":0},"@_safeMint_1606":{"entryPoint":7205,"id":1606,"parameterSlots":2,"returnSlots":0},"@_safeMint_1635":{"entryPoint":7986,"id":1635,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1526":{"entryPoint":6921,"id":1526,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1920":{"entryPoint":6556,"id":1920,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2266":{"entryPoint":7235,"id":2266,"parameterSlots":2,"returnSlots":0},"@_transfer_1864":{"entryPoint":5733,"id":1864,"parameterSlots":3,"returnSlots":0},"@approve_1368":{"entryPoint":1860,"id":1368,"parameterSlots":2,"returnSlots":0},"@balanceOf_1229":{"entryPoint":3317,"id":1229,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_3970":{"entryPoint":5195,"id":3970,"parameterSlots":2,"returnSlots":0},"@getApproved_1386":{"entryPoint":1790,"id":1386,"parameterSlots":1,"returnSlots":1},"@getArrayChance_4044":{"entryPoint":4630,"id":4044,"parameterSlots":0,"returnSlots":1},"@getBreedByModdedRng_4031":{"entryPoint":2434,"id":4031,"parameterSlots":1,"returnSlots":1},"@getDogTokenUris_4110":{"entryPoint":2659,"id":4110,"parameterSlots":1,"returnSlots":1},"@getMintFee_4098":{"entryPoint":3501,"id":4098,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_4118":{"entryPoint":3307,"id":4118,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1421":{"entryPoint":4673,"id":1421,"parameterSlots":2,"returnSlots":1},"@isContract_2342":{"entryPoint":8077,"id":2342,"parameterSlots":1,"returnSlots":1},"@log10_3589":{"entryPoint":8112,"id":3589,"parameterSlots":1,"returnSlots":1},"@name_1267":{"entryPoint":1644,"id":1267,"parameterSlots":0,"returnSlots":1},"@ownerOf_1257":{"entryPoint":3172,"id":1257,"parameterSlots":1,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":2146,"id":56,"parameterSlots":2,"returnSlots":0},"@requestIds_3814":{"entryPoint":3541,"id":3814,"parameterSlots":0,"returnSlots":0},"@requestNft_3915":{"entryPoint":3745,"id":3915,"parameterSlots":0,"returnSlots":1},"@s_tokenCounter_3807":{"entryPoint":2140,"id":3807,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1467":{"entryPoint":3140,"id":1467,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1497":{"entryPoint":4257,"id":1497,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1403":{"entryPoint":3723,"id":1403,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1205":{"entryPoint":1418,"id":1205,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2874":{"entryPoint":4821,"id":2874,"parameterSlots":1,"returnSlots":1},"@symbol_1277":{"entryPoint":3577,"id":1277,"parameterSlots":0,"returnSlots":1},"@toString_2734":{"entryPoint":7770,"id":2734,"parameterSlots":1,"returnSlots":1},"@tokenURI_1316":{"entryPoint":7036,"id":1316,"parameterSlots":1,"returnSlots":1},"@tokenURI_2244":{"entryPoint":4355,"id":2244,"parameterSlots":1,"returnSlots":1},"@transferFrom_1448":{"entryPoint":2338,"id":1448,"parameterSlots":3,"returnSlots":0},"@withdraw_4090":{"entryPoint":2835,"id":4090,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10102,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":10796,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9277,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":13809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":10862,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11237,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10345,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":10908,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10663,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9819,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9298,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":13830,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10253,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11086,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9733,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9355,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12464,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":13676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack":{"entryPoint":10532,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":11810,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":13435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":13035,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":14024,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":13181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":13289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":12387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":13581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":13916,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":12241,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":11477,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":11623,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":12528,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11071,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9883,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12559,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":12499,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12783,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9748,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11690,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13733,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":11210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":12574,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_breed_$3786__to_t_uint8__fromStack_reversed":{"entryPoint":10547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_breed_$3786_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":12915,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13470,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13070,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14059,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13324,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13616,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13951,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11512,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11658,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9898,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10026,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9190,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10053,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":10732,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11061,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11039,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":13648,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9397,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11110,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11050,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":13659,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12130,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9408,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11971,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9715,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9343,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12454,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9210,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_breed_$3786":{"entryPoint":10495,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":12514,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9683,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9584,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12543,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":12479,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_breed_$3786_to_t_uint8":{"entryPoint":10514,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":10781,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":9425,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11348,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":9977,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":12057,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":12866,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11924,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12819,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10428,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11301,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11877,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9930,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9925,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10097,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10727,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9205,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9200,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9476,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":11731,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":13356,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":12956,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":13983,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":13102,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":13248,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":12308,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":13502,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":13875,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":12200,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":11398,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12141,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":11544,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_breed_$3786":{"entryPoint":10475,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9775,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10619,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9254,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9594,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:36123:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:105:16","statements":[{"nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:16"},"nodeType":"YulFunctionCall","src":"589:12:16"},"nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:16"},"nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:16"},"nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:16"},"nodeType":"YulFunctionCall","src":"544:42:16"},"nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nodeType":"YulBlock","src":"666:86:16","statements":[{"nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:16"},"nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:16"},"nodeType":"YulFunctionCall","src":"871:79:16"},"nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:16"},"nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:16"},"nodeType":"YulFunctionCall","src":"836:32:16"},"nodeType":"YulIf","src":"833:119:16"},{"nodeType":"YulBlock","src":"962:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:16"},"nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:16"},"nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nodeType":"YulBlock","src":"1133:48:16","statements":[{"nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:16"},"nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:16"},"nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:16"},"nodeType":"YulFunctionCall","src":"1256:34:16"},"nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nodeType":"YulBlock","src":"1394:118:16","statements":[{"nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:16"},"nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:16"},"nodeType":"YulFunctionCall","src":"1440:65:16"},"nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nodeType":"YulBlock","src":"1577:40:16","statements":[{"nodeType":"YulAssignment","src":"1588:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:16"},"nodeType":"YulFunctionCall","src":"1598:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:16","type":""}],"src":"1518:99:16"},{"body":{"nodeType":"YulBlock","src":"1719:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:16"},"nodeType":"YulFunctionCall","src":"1729:19:16"},"nodeType":"YulExpressionStatement","src":"1729:19:16"},{"nodeType":"YulAssignment","src":"1757:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:16","type":""}],"src":"1623:169:16"},{"body":{"nodeType":"YulBlock","src":"1847:258:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:16"},"nodeType":"YulFunctionCall","src":"1947:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:16"},"nodeType":"YulFunctionCall","src":"1966:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:16"},"nodeType":"YulFunctionCall","src":"1960:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:16"},"nodeType":"YulFunctionCall","src":"1940:39:16"},"nodeType":"YulExpressionStatement","src":"1940:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:16"},"nodeType":"YulFunctionCall","src":"1884:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:16","statements":[{"nodeType":"YulAssignment","src":"1900:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:16"},"nodeType":"YulFunctionCall","src":"1905:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:16","statements":[]},"src":"1876:113:16"},{"body":{"nodeType":"YulBlock","src":"2023:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:16"},"nodeType":"YulFunctionCall","src":"2069:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:16"},"nodeType":"YulFunctionCall","src":"2062:27:16"},"nodeType":"YulExpressionStatement","src":"2062:27:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:16"},"nodeType":"YulFunctionCall","src":"2001:13:16"},"nodeType":"YulIf","src":"1998:101:16"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:16","type":""}],"src":"1798:307:16"},{"body":{"nodeType":"YulBlock","src":"2159:54:16","statements":[{"nodeType":"YulAssignment","src":"2169:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:16"},"nodeType":"YulFunctionCall","src":"2183:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:16"},"nodeType":"YulFunctionCall","src":"2199:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:16"},"nodeType":"YulFunctionCall","src":"2179:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:16","type":""}],"src":"2111:102:16"},{"body":{"nodeType":"YulBlock","src":"2311:272:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:16"},"nodeType":"YulFunctionCall","src":"2335:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:16"},"nodeType":"YulFunctionCall","src":"2390:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:16"},"nodeType":"YulFunctionCall","src":"2492:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:16"},"nodeType":"YulFunctionCall","src":"2470:52:16"},"nodeType":"YulExpressionStatement","src":"2470:52:16"},{"nodeType":"YulAssignment","src":"2531:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:16"},"nodeType":"YulFunctionCall","src":"2547:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:16"},"nodeType":"YulFunctionCall","src":"2538:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:16","type":""}],"src":"2219:364:16"},{"body":{"nodeType":"YulBlock","src":"2707:195:16","statements":[{"nodeType":"YulAssignment","src":"2717:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:16"},"nodeType":"YulFunctionCall","src":"2725:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:16"},"nodeType":"YulFunctionCall","src":"2760:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:16"},"nodeType":"YulFunctionCall","src":"2779:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:16"},"nodeType":"YulFunctionCall","src":"2753:47:16"},"nodeType":"YulExpressionStatement","src":"2753:47:16"},{"nodeType":"YulAssignment","src":"2809:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:16"},"nodeType":"YulFunctionCall","src":"2817:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:16","type":""}],"src":"2589:313:16"},{"body":{"nodeType":"YulBlock","src":"2953:32:16","statements":[{"nodeType":"YulAssignment","src":"2963:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:16","type":""}],"src":"2908:77:16"},{"body":{"nodeType":"YulBlock","src":"3034:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:16"},"nodeType":"YulFunctionCall","src":"3093:12:16"},"nodeType":"YulExpressionStatement","src":"3093:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:16"},"nodeType":"YulFunctionCall","src":"3064:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:16"},"nodeType":"YulFunctionCall","src":"3054:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:16"},"nodeType":"YulFunctionCall","src":"3047:43:16"},"nodeType":"YulIf","src":"3044:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:16","type":""}],"src":"2991:122:16"},{"body":{"nodeType":"YulBlock","src":"3171:87:16","statements":[{"nodeType":"YulAssignment","src":"3181:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:16"},"nodeType":"YulFunctionCall","src":"3190:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:16"},"nodeType":"YulFunctionCall","src":"3219:33:16"},"nodeType":"YulExpressionStatement","src":"3219:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:16","type":""}],"src":"3119:139:16"},{"body":{"nodeType":"YulBlock","src":"3330:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:16"},"nodeType":"YulFunctionCall","src":"3378:79:16"},"nodeType":"YulExpressionStatement","src":"3378:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:16"},"nodeType":"YulFunctionCall","src":"3347:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:16"},"nodeType":"YulFunctionCall","src":"3343:32:16"},"nodeType":"YulIf","src":"3340:119:16"},{"nodeType":"YulBlock","src":"3469:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:16"},"nodeType":"YulFunctionCall","src":"3544:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:16"},"nodeType":"YulFunctionCall","src":"3523:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:16","type":""}],"src":"3264:329:16"},{"body":{"nodeType":"YulBlock","src":"3644:81:16","statements":[{"nodeType":"YulAssignment","src":"3654:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:16"},"nodeType":"YulFunctionCall","src":"3665:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:16","type":""}],"src":"3599:126:16"},{"body":{"nodeType":"YulBlock","src":"3776:51:16","statements":[{"nodeType":"YulAssignment","src":"3786:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:16"},"nodeType":"YulFunctionCall","src":"3797:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:16","type":""}],"src":"3731:96:16"},{"body":{"nodeType":"YulBlock","src":"3898:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:16"},"nodeType":"YulFunctionCall","src":"3920:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:16"},"nodeType":"YulFunctionCall","src":"3908:37:16"},"nodeType":"YulExpressionStatement","src":"3908:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:16","type":""}],"src":"3833:118:16"},{"body":{"nodeType":"YulBlock","src":"4055:124:16","statements":[{"nodeType":"YulAssignment","src":"4065:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:16"},"nodeType":"YulFunctionCall","src":"4073:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:16"},"nodeType":"YulFunctionCall","src":"4154:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:16"},"nodeType":"YulFunctionCall","src":"4101:71:16"},"nodeType":"YulExpressionStatement","src":"4101:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:16","type":""}],"src":"3957:222:16"},{"body":{"nodeType":"YulBlock","src":"4228:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:16"},"nodeType":"YulFunctionCall","src":"4287:12:16"},"nodeType":"YulExpressionStatement","src":"4287:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:16"},"nodeType":"YulFunctionCall","src":"4258:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:16"},"nodeType":"YulFunctionCall","src":"4248:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:16"},"nodeType":"YulFunctionCall","src":"4241:43:16"},"nodeType":"YulIf","src":"4238:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:16","type":""}],"src":"4185:122:16"},{"body":{"nodeType":"YulBlock","src":"4365:87:16","statements":[{"nodeType":"YulAssignment","src":"4375:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:16"},"nodeType":"YulFunctionCall","src":"4384:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:16"},"nodeType":"YulFunctionCall","src":"4413:33:16"},"nodeType":"YulExpressionStatement","src":"4413:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:16","type":""}],"src":"4313:139:16"},{"body":{"nodeType":"YulBlock","src":"4541:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:16"},"nodeType":"YulFunctionCall","src":"4589:79:16"},"nodeType":"YulExpressionStatement","src":"4589:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:16"},"nodeType":"YulFunctionCall","src":"4558:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:16"},"nodeType":"YulFunctionCall","src":"4554:32:16"},"nodeType":"YulIf","src":"4551:119:16"},{"nodeType":"YulBlock","src":"4680:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:16"},"nodeType":"YulFunctionCall","src":"4755:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:16"},"nodeType":"YulFunctionCall","src":"4734:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:16"}]}]},{"nodeType":"YulBlock","src":"4807:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:16"},"nodeType":"YulFunctionCall","src":"4883:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:16"},"nodeType":"YulFunctionCall","src":"4862:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:16","type":""}],"src":"4458:474:16"},{"body":{"nodeType":"YulBlock","src":"5003:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5020:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5043:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5025:17:16"},"nodeType":"YulFunctionCall","src":"5025:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5013:6:16"},"nodeType":"YulFunctionCall","src":"5013:37:16"},"nodeType":"YulExpressionStatement","src":"5013:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4991:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4998:3:16","type":""}],"src":"4938:118:16"},{"body":{"nodeType":"YulBlock","src":"5160:124:16","statements":[{"nodeType":"YulAssignment","src":"5170:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5182:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5193:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5178:3:16"},"nodeType":"YulFunctionCall","src":"5178:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5170:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5250:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5263:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5274:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5259:3:16"},"nodeType":"YulFunctionCall","src":"5259:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5206:43:16"},"nodeType":"YulFunctionCall","src":"5206:71:16"},"nodeType":"YulExpressionStatement","src":"5206:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5132:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5144:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5155:4:16","type":""}],"src":"5062:222:16"},{"body":{"nodeType":"YulBlock","src":"5379:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5396:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5399:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5389:6:16"},"nodeType":"YulFunctionCall","src":"5389:12:16"},"nodeType":"YulExpressionStatement","src":"5389:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5290:117:16"},{"body":{"nodeType":"YulBlock","src":"5441:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5458:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5461:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:16"},"nodeType":"YulFunctionCall","src":"5451:88:16"},"nodeType":"YulExpressionStatement","src":"5451:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5555:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5558:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5548:6:16"},"nodeType":"YulFunctionCall","src":"5548:15:16"},"nodeType":"YulExpressionStatement","src":"5548:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5579:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5582:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5572:6:16"},"nodeType":"YulFunctionCall","src":"5572:15:16"},"nodeType":"YulExpressionStatement","src":"5572:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5413:180:16"},{"body":{"nodeType":"YulBlock","src":"5642:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5652:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5674:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5704:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5682:21:16"},"nodeType":"YulFunctionCall","src":"5682:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:16"},"nodeType":"YulFunctionCall","src":"5670:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5656:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5821:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5823:16:16"},"nodeType":"YulFunctionCall","src":"5823:18:16"},"nodeType":"YulExpressionStatement","src":"5823:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5764:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"5776:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5761:2:16"},"nodeType":"YulFunctionCall","src":"5761:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5800:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5812:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5797:2:16"},"nodeType":"YulFunctionCall","src":"5797:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5758:2:16"},"nodeType":"YulFunctionCall","src":"5758:62:16"},"nodeType":"YulIf","src":"5755:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5859:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5863:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5852:6:16"},"nodeType":"YulFunctionCall","src":"5852:22:16"},"nodeType":"YulExpressionStatement","src":"5852:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5628:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"5636:4:16","type":""}],"src":"5599:281:16"},{"body":{"nodeType":"YulBlock","src":"5927:88:16","statements":[{"nodeType":"YulAssignment","src":"5937:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5947:18:16"},"nodeType":"YulFunctionCall","src":"5947:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5937:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5996:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"6004:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5976:19:16"},"nodeType":"YulFunctionCall","src":"5976:33:16"},"nodeType":"YulExpressionStatement","src":"5976:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5911:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5920:6:16","type":""}],"src":"5886:129:16"},{"body":{"nodeType":"YulBlock","src":"6103:229:16","statements":[{"body":{"nodeType":"YulBlock","src":"6208:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6210:16:16"},"nodeType":"YulFunctionCall","src":"6210:18:16"},"nodeType":"YulExpressionStatement","src":"6210:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6180:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6188:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6177:2:16"},"nodeType":"YulFunctionCall","src":"6177:30:16"},"nodeType":"YulIf","src":"6174:56:16"},{"nodeType":"YulAssignment","src":"6240:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6252:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6260:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6248:3:16"},"nodeType":"YulFunctionCall","src":"6248:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6240:4:16"}]},{"nodeType":"YulAssignment","src":"6302:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6314:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6320:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:16"},"nodeType":"YulFunctionCall","src":"6310:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6302:4:16"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6087:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6098:4:16","type":""}],"src":"6021:311:16"},{"body":{"nodeType":"YulBlock","src":"6427:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6444:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6447:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6437:6:16"},"nodeType":"YulFunctionCall","src":"6437:12:16"},"nodeType":"YulExpressionStatement","src":"6437:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6338:117:16"},{"body":{"nodeType":"YulBlock","src":"6580:608:16","statements":[{"nodeType":"YulAssignment","src":"6590:90:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6672:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6615:56:16"},"nodeType":"YulFunctionCall","src":"6615:64:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6599:15:16"},"nodeType":"YulFunctionCall","src":"6599:81:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6590:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"6689:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"6700:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6693:3:16","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6722:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"6729:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6715:6:16"},"nodeType":"YulFunctionCall","src":"6715:21:16"},"nodeType":"YulExpressionStatement","src":"6715:21:16"},{"nodeType":"YulAssignment","src":"6745:23:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6756:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6763:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6752:3:16"},"nodeType":"YulFunctionCall","src":"6752:16:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6745:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"6778:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6808:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6816:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6804:3:16"},"nodeType":"YulFunctionCall","src":"6804:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:16"},"nodeType":"YulFunctionCall","src":"6792:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6782:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6850:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6864:77:16"},"nodeType":"YulFunctionCall","src":"6864:79:16"},"nodeType":"YulExpressionStatement","src":"6864:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6837:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"6845:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6834:2:16"},"nodeType":"YulFunctionCall","src":"6834:15:16"},"nodeType":"YulIf","src":"6831:122:16"},{"body":{"nodeType":"YulBlock","src":"7038:144:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7053:21:16","value":{"name":"src","nodeType":"YulIdentifier","src":"7071:3:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7057:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7095:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7121:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"7133:3:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7100:20:16"},"nodeType":"YulFunctionCall","src":"7100:37:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7088:6:16"},"nodeType":"YulFunctionCall","src":"7088:50:16"},"nodeType":"YulExpressionStatement","src":"7088:50:16"},{"nodeType":"YulAssignment","src":"7151:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7162:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7167:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7158:3:16"},"nodeType":"YulFunctionCall","src":"7158:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7151:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6991:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6996:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6988:2:16"},"nodeType":"YulFunctionCall","src":"6988:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7004:25:16","statements":[{"nodeType":"YulAssignment","src":"7006:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7017:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7022:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7013:3:16"},"nodeType":"YulFunctionCall","src":"7013:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7006:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6966:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6968:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"6979:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6972:3:16","type":""}]}]},"src":"6962:220:16"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6550:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6558:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6566:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6574:5:16","type":""}],"src":"6478:710:16"},{"body":{"nodeType":"YulBlock","src":"7288:293:16","statements":[{"body":{"nodeType":"YulBlock","src":"7337:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7339:77:16"},"nodeType":"YulFunctionCall","src":"7339:79:16"},"nodeType":"YulExpressionStatement","src":"7339:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7316:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7324:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:16"},"nodeType":"YulFunctionCall","src":"7312:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"7331:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7308:3:16"},"nodeType":"YulFunctionCall","src":"7308:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7301:6:16"},"nodeType":"YulFunctionCall","src":"7301:35:16"},"nodeType":"YulIf","src":"7298:122:16"},{"nodeType":"YulVariableDeclaration","src":"7429:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7456:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7443:12:16"},"nodeType":"YulFunctionCall","src":"7443:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7433:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7472:103:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7548:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7556:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7544:3:16"},"nodeType":"YulFunctionCall","src":"7544:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"7563:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"7571:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7481:62:16"},"nodeType":"YulFunctionCall","src":"7481:94:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7472:5:16"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7266:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7274:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7282:5:16","type":""}],"src":"7211:370:16"},{"body":{"nodeType":"YulBlock","src":"7695:576:16","statements":[{"body":{"nodeType":"YulBlock","src":"7741:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7743:77:16"},"nodeType":"YulFunctionCall","src":"7743:79:16"},"nodeType":"YulExpressionStatement","src":"7743:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7716:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7725:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7712:3:16"},"nodeType":"YulFunctionCall","src":"7712:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7708:3:16"},"nodeType":"YulFunctionCall","src":"7708:32:16"},"nodeType":"YulIf","src":"7705:119:16"},{"nodeType":"YulBlock","src":"7834:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7849:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7863:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7853:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7878:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7913:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7924:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7909:3:16"},"nodeType":"YulFunctionCall","src":"7909:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7933:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7888:20:16"},"nodeType":"YulFunctionCall","src":"7888:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7878:6:16"}]}]},{"nodeType":"YulBlock","src":"7961:303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7976:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8018:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8003:3:16"},"nodeType":"YulFunctionCall","src":"8003:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7990:12:16"},"nodeType":"YulFunctionCall","src":"7990:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7980:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8069:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8071:77:16"},"nodeType":"YulFunctionCall","src":"8071:79:16"},"nodeType":"YulExpressionStatement","src":"8071:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8041:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8049:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8038:2:16"},"nodeType":"YulFunctionCall","src":"8038:30:16"},"nodeType":"YulIf","src":"8035:117:16"},{"nodeType":"YulAssignment","src":"8166:88:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:16"},"nodeType":"YulFunctionCall","src":"8222:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8246:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8176:45:16"},"nodeType":"YulFunctionCall","src":"8176:78:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8166:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7657:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7668:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7680:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7688:6:16","type":""}],"src":"7587:684:16"},{"body":{"nodeType":"YulBlock","src":"8377:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"8423:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8425:77:16"},"nodeType":"YulFunctionCall","src":"8425:79:16"},"nodeType":"YulExpressionStatement","src":"8425:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8398:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8407:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8394:3:16"},"nodeType":"YulFunctionCall","src":"8394:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8419:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8390:3:16"},"nodeType":"YulFunctionCall","src":"8390:32:16"},"nodeType":"YulIf","src":"8387:119:16"},{"nodeType":"YulBlock","src":"8516:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8531:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8545:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8535:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8560:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8606:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:16"},"nodeType":"YulFunctionCall","src":"8591:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8615:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8570:20:16"},"nodeType":"YulFunctionCall","src":"8570:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8560:6:16"}]}]},{"nodeType":"YulBlock","src":"8643:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8658:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8672:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8662:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8688:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8723:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8734:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8719:3:16"},"nodeType":"YulFunctionCall","src":"8719:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8743:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8698:20:16"},"nodeType":"YulFunctionCall","src":"8698:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8688:6:16"}]}]},{"nodeType":"YulBlock","src":"8771:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8786:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8800:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8790:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8816:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8851:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8862:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8847:3:16"},"nodeType":"YulFunctionCall","src":"8847:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8871:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8826:20:16"},"nodeType":"YulFunctionCall","src":"8826:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8816:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8331:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8342:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8354:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8362:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8370:6:16","type":""}],"src":"8277:619:16"},{"body":{"nodeType":"YulBlock","src":"8930:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8947:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8950:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8940:6:16"},"nodeType":"YulFunctionCall","src":"8940:88:16"},"nodeType":"YulExpressionStatement","src":"8940:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9044:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9047:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9037:6:16"},"nodeType":"YulFunctionCall","src":"9037:15:16"},"nodeType":"YulExpressionStatement","src":"9037:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9068:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9071:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9061:6:16"},"nodeType":"YulFunctionCall","src":"9061:15:16"},"nodeType":"YulExpressionStatement","src":"9061:15:16"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"8902:180:16"},{"body":{"nodeType":"YulBlock","src":"9141:62:16","statements":[{"body":{"nodeType":"YulBlock","src":"9175:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"9177:16:16"},"nodeType":"YulFunctionCall","src":"9177:18:16"},"nodeType":"YulExpressionStatement","src":"9177:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9164:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"9171:1:16","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9161:2:16"},"nodeType":"YulFunctionCall","src":"9161:12:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9154:6:16"},"nodeType":"YulFunctionCall","src":"9154:20:16"},"nodeType":"YulIf","src":"9151:46:16"}]},"name":"validator_assert_t_enum$_breed_$3786","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9134:5:16","type":""}],"src":"9088:115:16"},{"body":{"nodeType":"YulBlock","src":"9264:76:16","statements":[{"nodeType":"YulAssignment","src":"9274:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"9285:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9274:7:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9328:5:16"}],"functionName":{"name":"validator_assert_t_enum$_breed_$3786","nodeType":"YulIdentifier","src":"9291:36:16"},"nodeType":"YulFunctionCall","src":"9291:43:16"},"nodeType":"YulExpressionStatement","src":"9291:43:16"}]},"name":"cleanup_t_enum$_breed_$3786","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9246:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9256:7:16","type":""}],"src":"9209:131:16"},{"body":{"nodeType":"YulBlock","src":"9414:63:16","statements":[{"nodeType":"YulAssignment","src":"9424:47:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9465:5:16"}],"functionName":{"name":"cleanup_t_enum$_breed_$3786","nodeType":"YulIdentifier","src":"9437:27:16"},"nodeType":"YulFunctionCall","src":"9437:34:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9424:9:16"}]}]},"name":"convert_t_enum$_breed_$3786_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9394:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9404:9:16","type":""}],"src":"9346:131:16"},{"body":{"nodeType":"YulBlock","src":"9556:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9573:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9617:5:16"}],"functionName":{"name":"convert_t_enum$_breed_$3786_to_t_uint8","nodeType":"YulIdentifier","src":"9578:38:16"},"nodeType":"YulFunctionCall","src":"9578:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9566:6:16"},"nodeType":"YulFunctionCall","src":"9566:58:16"},"nodeType":"YulExpressionStatement","src":"9566:58:16"}]},"name":"abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9544:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9551:3:16","type":""}],"src":"9483:147:16"},{"body":{"nodeType":"YulBlock","src":"9742:132:16","statements":[{"nodeType":"YulAssignment","src":"9752:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9764:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9775:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9760:3:16"},"nodeType":"YulFunctionCall","src":"9760:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9752:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9840:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9853:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9864:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9849:3:16"},"nodeType":"YulFunctionCall","src":"9849:17:16"}],"functionName":{"name":"abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"9788:51:16"},"nodeType":"YulFunctionCall","src":"9788:79:16"},"nodeType":"YulExpressionStatement","src":"9788:79:16"}]},"name":"abi_encode_tuple_t_enum$_breed_$3786__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9714:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9726:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9737:4:16","type":""}],"src":"9636:238:16"},{"body":{"nodeType":"YulBlock","src":"9946:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"9992:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9994:77:16"},"nodeType":"YulFunctionCall","src":"9994:79:16"},"nodeType":"YulExpressionStatement","src":"9994:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9967:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9976:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9963:3:16"},"nodeType":"YulFunctionCall","src":"9963:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9988:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9959:3:16"},"nodeType":"YulFunctionCall","src":"9959:32:16"},"nodeType":"YulIf","src":"9956:119:16"},{"nodeType":"YulBlock","src":"10085:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10100:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10114:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10104:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10129:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10164:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10175:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10160:3:16"},"nodeType":"YulFunctionCall","src":"10160:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10184:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10139:20:16"},"nodeType":"YulFunctionCall","src":"10139:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10129:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9916:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9927:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9939:6:16","type":""}],"src":"9880:329:16"},{"body":{"nodeType":"YulBlock","src":"10255:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"10309:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10318:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10321:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10311:6:16"},"nodeType":"YulFunctionCall","src":"10311:12:16"},"nodeType":"YulExpressionStatement","src":"10311:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10278:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10300:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"10285:14:16"},"nodeType":"YulFunctionCall","src":"10285:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10275:2:16"},"nodeType":"YulFunctionCall","src":"10275:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10268:6:16"},"nodeType":"YulFunctionCall","src":"10268:40:16"},"nodeType":"YulIf","src":"10265:60:16"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10248:5:16","type":""}],"src":"10215:116:16"},{"body":{"nodeType":"YulBlock","src":"10386:84:16","statements":[{"nodeType":"YulAssignment","src":"10396:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10418:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10405:12:16"},"nodeType":"YulFunctionCall","src":"10405:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10396:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10458:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10434:23:16"},"nodeType":"YulFunctionCall","src":"10434:30:16"},"nodeType":"YulExpressionStatement","src":"10434:30:16"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10364:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"10372:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10380:5:16","type":""}],"src":"10337:133:16"},{"body":{"nodeType":"YulBlock","src":"10556:388:16","statements":[{"body":{"nodeType":"YulBlock","src":"10602:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10604:77:16"},"nodeType":"YulFunctionCall","src":"10604:79:16"},"nodeType":"YulExpressionStatement","src":"10604:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10577:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10586:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10573:3:16"},"nodeType":"YulFunctionCall","src":"10573:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10598:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10569:3:16"},"nodeType":"YulFunctionCall","src":"10569:32:16"},"nodeType":"YulIf","src":"10566:119:16"},{"nodeType":"YulBlock","src":"10695:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10710:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10724:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10714:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10739:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10774:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10785:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10770:3:16"},"nodeType":"YulFunctionCall","src":"10770:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10794:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10749:20:16"},"nodeType":"YulFunctionCall","src":"10749:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10739:6:16"}]}]},{"nodeType":"YulBlock","src":"10822:115:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10837:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10851:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10841:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10867:60:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10899:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10910:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10895:3:16"},"nodeType":"YulFunctionCall","src":"10895:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10919:7:16"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10877:17:16"},"nodeType":"YulFunctionCall","src":"10877:50:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10867:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10518:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10529:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10541:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10549:6:16","type":""}],"src":"10476:468:16"},{"body":{"nodeType":"YulBlock","src":"11039:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11056:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11059:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11049:6:16"},"nodeType":"YulFunctionCall","src":"11049:12:16"},"nodeType":"YulExpressionStatement","src":"11049:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10950:117:16"},{"body":{"nodeType":"YulBlock","src":"11139:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"11244:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11246:16:16"},"nodeType":"YulFunctionCall","src":"11246:18:16"},"nodeType":"YulExpressionStatement","src":"11246:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11216:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11224:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11213:2:16"},"nodeType":"YulFunctionCall","src":"11213:30:16"},"nodeType":"YulIf","src":"11210:56:16"},{"nodeType":"YulAssignment","src":"11276:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11306:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11284:21:16"},"nodeType":"YulFunctionCall","src":"11284:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11276:4:16"}]},{"nodeType":"YulAssignment","src":"11350:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11362:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"11368:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11358:3:16"},"nodeType":"YulFunctionCall","src":"11358:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11350:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"11123:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11134:4:16","type":""}],"src":"11073:307:16"},{"body":{"nodeType":"YulBlock","src":"11437:103:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11460:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"11465:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11470:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"11447:12:16"},"nodeType":"YulFunctionCall","src":"11447:30:16"},"nodeType":"YulExpressionStatement","src":"11447:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11518:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11523:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11514:3:16"},"nodeType":"YulFunctionCall","src":"11514:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"11532:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11507:6:16"},"nodeType":"YulFunctionCall","src":"11507:27:16"},"nodeType":"YulExpressionStatement","src":"11507:27:16"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11419:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11424:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"11429:6:16","type":""}],"src":"11386:154:16"},{"body":{"nodeType":"YulBlock","src":"11629:327:16","statements":[{"nodeType":"YulAssignment","src":"11639:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11705:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11664:40:16"},"nodeType":"YulFunctionCall","src":"11664:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11648:15:16"},"nodeType":"YulFunctionCall","src":"11648:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11639:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11729:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"11736:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11722:6:16"},"nodeType":"YulFunctionCall","src":"11722:21:16"},"nodeType":"YulExpressionStatement","src":"11722:21:16"},{"nodeType":"YulVariableDeclaration","src":"11752:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11767:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"11774:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11763:3:16"},"nodeType":"YulFunctionCall","src":"11763:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11756:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11817:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11819:77:16"},"nodeType":"YulFunctionCall","src":"11819:79:16"},"nodeType":"YulExpressionStatement","src":"11819:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11798:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11803:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11794:3:16"},"nodeType":"YulFunctionCall","src":"11794:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"11812:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11791:2:16"},"nodeType":"YulFunctionCall","src":"11791:25:16"},"nodeType":"YulIf","src":"11788:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11933:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"11938:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"11943:6:16"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"11909:23:16"},"nodeType":"YulFunctionCall","src":"11909:41:16"},"nodeType":"YulExpressionStatement","src":"11909:41:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11602:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"11607:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"11615:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11623:5:16","type":""}],"src":"11546:410:16"},{"body":{"nodeType":"YulBlock","src":"12036:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"12085:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12087:77:16"},"nodeType":"YulFunctionCall","src":"12087:79:16"},"nodeType":"YulExpressionStatement","src":"12087:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12064:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12072:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12060:3:16"},"nodeType":"YulFunctionCall","src":"12060:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"12079:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12056:3:16"},"nodeType":"YulFunctionCall","src":"12056:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12049:6:16"},"nodeType":"YulFunctionCall","src":"12049:35:16"},"nodeType":"YulIf","src":"12046:122:16"},{"nodeType":"YulVariableDeclaration","src":"12177:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12204:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12191:12:16"},"nodeType":"YulFunctionCall","src":"12191:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12181:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12220:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12280:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12288:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12276:3:16"},"nodeType":"YulFunctionCall","src":"12276:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"12295:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"12303:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12229:46:16"},"nodeType":"YulFunctionCall","src":"12229:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12220:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12014:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"12022:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12030:5:16","type":""}],"src":"11975:338:16"},{"body":{"nodeType":"YulBlock","src":"12445:817:16","statements":[{"body":{"nodeType":"YulBlock","src":"12492:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12494:77:16"},"nodeType":"YulFunctionCall","src":"12494:79:16"},"nodeType":"YulExpressionStatement","src":"12494:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12466:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12475:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12462:3:16"},"nodeType":"YulFunctionCall","src":"12462:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"12487:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12458:3:16"},"nodeType":"YulFunctionCall","src":"12458:33:16"},"nodeType":"YulIf","src":"12455:120:16"},{"nodeType":"YulBlock","src":"12585:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12600:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12614:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12604:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12629:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12675:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12660:3:16"},"nodeType":"YulFunctionCall","src":"12660:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12684:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12639:20:16"},"nodeType":"YulFunctionCall","src":"12639:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12629:6:16"}]}]},{"nodeType":"YulBlock","src":"12712:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12727:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12741:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12731:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12757:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12792:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12803:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12788:3:16"},"nodeType":"YulFunctionCall","src":"12788:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12812:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12767:20:16"},"nodeType":"YulFunctionCall","src":"12767:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12757:6:16"}]}]},{"nodeType":"YulBlock","src":"12840:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12855:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12869:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12859:6:16","type":""}]},{"nodeType":"YulAssignment","src":"12885:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12920:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"12931:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12916:3:16"},"nodeType":"YulFunctionCall","src":"12916:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12940:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12895:20:16"},"nodeType":"YulFunctionCall","src":"12895:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12885:6:16"}]}]},{"nodeType":"YulBlock","src":"12968:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12983:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13014:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13025:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13010:3:16"},"nodeType":"YulFunctionCall","src":"13010:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12997:12:16"},"nodeType":"YulFunctionCall","src":"12997:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12987:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13076:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13078:77:16"},"nodeType":"YulFunctionCall","src":"13078:79:16"},"nodeType":"YulExpressionStatement","src":"13078:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13048:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13056:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13045:2:16"},"nodeType":"YulFunctionCall","src":"13045:30:16"},"nodeType":"YulIf","src":"13042:117:16"},{"nodeType":"YulAssignment","src":"13173:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13217:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"13228:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13213:3:16"},"nodeType":"YulFunctionCall","src":"13213:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13237:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13183:29:16"},"nodeType":"YulFunctionCall","src":"13183:62:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"13173:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12391:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12402:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12414:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12422:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12430:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12438:6:16","type":""}],"src":"12319:943:16"},{"body":{"nodeType":"YulBlock","src":"13340:32:16","statements":[{"nodeType":"YulAssignment","src":"13351:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"13361:4:16","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13351:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13323:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13333:6:16","type":""}],"src":"13268:104:16"},{"body":{"nodeType":"YulBlock","src":"13487:34:16","statements":[{"nodeType":"YulAssignment","src":"13497:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"13512:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13497:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13459:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"13464:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13475:11:16","type":""}],"src":"13378:143:16"},{"body":{"nodeType":"YulBlock","src":"13597:28:16","statements":[{"nodeType":"YulAssignment","src":"13607:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13615:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13607:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13584:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13592:4:16","type":""}],"src":"13527:98:16"},{"body":{"nodeType":"YulBlock","src":"13686:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13703:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13726:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13708:17:16"},"nodeType":"YulFunctionCall","src":"13708:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13696:6:16"},"nodeType":"YulFunctionCall","src":"13696:37:16"},"nodeType":"YulExpressionStatement","src":"13696:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13674:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13681:3:16","type":""}],"src":"13631:108:16"},{"body":{"nodeType":"YulBlock","src":"13825:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13869:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"13877:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13835:33:16"},"nodeType":"YulFunctionCall","src":"13835:46:16"},"nodeType":"YulExpressionStatement","src":"13835:46:16"},{"nodeType":"YulAssignment","src":"13890:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13908:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13913:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13904:3:16"},"nodeType":"YulFunctionCall","src":"13904:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13890:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13798:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13806:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13814:10:16","type":""}],"src":"13745:179:16"},{"body":{"nodeType":"YulBlock","src":"14003:38:16","statements":[{"nodeType":"YulAssignment","src":"14013:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14025:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14030:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14021:3:16"},"nodeType":"YulFunctionCall","src":"14021:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14013:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13990:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"13998:4:16","type":""}],"src":"13930:111:16"},{"body":{"nodeType":"YulBlock","src":"14191:582:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14201:66:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14261:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"14215:45:16"},"nodeType":"YulFunctionCall","src":"14215:52:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14205:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14276:91:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14355:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"14360:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14283:71:16"},"nodeType":"YulFunctionCall","src":"14283:84:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14276:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"14376:69:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14439:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"14391:47:16"},"nodeType":"YulFunctionCall","src":"14391:54:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14380:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14454:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14468:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14458:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14544:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14558:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14585:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14579:5:16"},"nodeType":"YulFunctionCall","src":"14579:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14562:13:16","type":""}]},{"nodeType":"YulAssignment","src":"14605:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"14656:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"14671:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14612:43:16"},"nodeType":"YulFunctionCall","src":"14612:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14605:3:16"}]},{"nodeType":"YulAssignment","src":"14688:68:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14749:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"14698:50:16"},"nodeType":"YulFunctionCall","src":"14698:58:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14688:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14506:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"14509:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14503:2:16"},"nodeType":"YulFunctionCall","src":"14503:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14517:18:16","statements":[{"nodeType":"YulAssignment","src":"14519:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14528:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"14531:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14524:3:16"},"nodeType":"YulFunctionCall","src":"14524:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14519:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"14488:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14490:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14499:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14494:1:16","type":""}]}]},"src":"14484:282:16"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14178:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14185:3:16","type":""}],"src":"14079:694:16"},{"body":{"nodeType":"YulBlock","src":"14923:170:16","statements":[{"nodeType":"YulAssignment","src":"14933:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14945:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14956:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14941:3:16"},"nodeType":"YulFunctionCall","src":"14941:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14933:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15059:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15072:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15083:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15068:3:16"},"nodeType":"YulFunctionCall","src":"15068:17:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14969:89:16"},"nodeType":"YulFunctionCall","src":"14969:117:16"},"nodeType":"YulExpressionStatement","src":"14969:117:16"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14895:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14907:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14918:4:16","type":""}],"src":"14779:314:16"},{"body":{"nodeType":"YulBlock","src":"15182:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"15228:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15230:77:16"},"nodeType":"YulFunctionCall","src":"15230:79:16"},"nodeType":"YulExpressionStatement","src":"15230:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15203:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15199:3:16"},"nodeType":"YulFunctionCall","src":"15199:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"15224:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15195:3:16"},"nodeType":"YulFunctionCall","src":"15195:32:16"},"nodeType":"YulIf","src":"15192:119:16"},{"nodeType":"YulBlock","src":"15321:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15336:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15350:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15340:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15365:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15400:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15411:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15396:3:16"},"nodeType":"YulFunctionCall","src":"15396:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15420:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15375:20:16"},"nodeType":"YulFunctionCall","src":"15375:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15365:6:16"}]}]},{"nodeType":"YulBlock","src":"15448:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15463:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15477:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15467:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15493:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15539:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:16"},"nodeType":"YulFunctionCall","src":"15524:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15548:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15503:20:16"},"nodeType":"YulFunctionCall","src":"15503:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15493:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15144:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15155:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15167:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15175:6:16","type":""}],"src":"15099:474:16"},{"body":{"nodeType":"YulBlock","src":"15607:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15624:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15627:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15617:6:16"},"nodeType":"YulFunctionCall","src":"15617:88:16"},"nodeType":"YulExpressionStatement","src":"15617:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15721:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15724:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:16"},"nodeType":"YulFunctionCall","src":"15714:15:16"},"nodeType":"YulExpressionStatement","src":"15714:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15745:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15748:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15738:6:16"},"nodeType":"YulFunctionCall","src":"15738:15:16"},"nodeType":"YulExpressionStatement","src":"15738:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15579:180:16"},{"body":{"nodeType":"YulBlock","src":"15816:269:16","statements":[{"nodeType":"YulAssignment","src":"15826:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15840:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"15846:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15836:3:16"},"nodeType":"YulFunctionCall","src":"15836:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15826:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"15857:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15887:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"15893:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15883:3:16"},"nodeType":"YulFunctionCall","src":"15883:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15861:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15934:51:16","statements":[{"nodeType":"YulAssignment","src":"15948:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15962:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15970:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15958:3:16"},"nodeType":"YulFunctionCall","src":"15958:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15948:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15914:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15907:6:16"},"nodeType":"YulFunctionCall","src":"15907:26:16"},"nodeType":"YulIf","src":"15904:81:16"},{"body":{"nodeType":"YulBlock","src":"16037:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16051:16:16"},"nodeType":"YulFunctionCall","src":"16051:18:16"},"nodeType":"YulExpressionStatement","src":"16051:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16001:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16024:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16032:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16021:2:16"},"nodeType":"YulFunctionCall","src":"16021:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15998:2:16"},"nodeType":"YulFunctionCall","src":"15998:38:16"},"nodeType":"YulIf","src":"15995:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15800:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15809:6:16","type":""}],"src":"15765:320:16"},{"body":{"nodeType":"YulBlock","src":"16197:114:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16219:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16227:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16215:3:16"},"nodeType":"YulFunctionCall","src":"16215:14:16"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16231:34:16","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16208:6:16"},"nodeType":"YulFunctionCall","src":"16208:58:16"},"nodeType":"YulExpressionStatement","src":"16208:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16287:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16295:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16283:3:16"},"nodeType":"YulFunctionCall","src":"16283:15:16"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16300:3:16","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16276:6:16"},"nodeType":"YulFunctionCall","src":"16276:28:16"},"nodeType":"YulExpressionStatement","src":"16276:28:16"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16189:6:16","type":""}],"src":"16091:220:16"},{"body":{"nodeType":"YulBlock","src":"16463:220:16","statements":[{"nodeType":"YulAssignment","src":"16473:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16539:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16544:2:16","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16480:58:16"},"nodeType":"YulFunctionCall","src":"16480:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16473:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16645:3:16"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"16556:88:16"},"nodeType":"YulFunctionCall","src":"16556:93:16"},"nodeType":"YulExpressionStatement","src":"16556:93:16"},{"nodeType":"YulAssignment","src":"16658:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16669:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16674:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16665:3:16"},"nodeType":"YulFunctionCall","src":"16665:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16658:3:16"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16451:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16459:3:16","type":""}],"src":"16317:366:16"},{"body":{"nodeType":"YulBlock","src":"16860:248:16","statements":[{"nodeType":"YulAssignment","src":"16870:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16882:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16893:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16878:3:16"},"nodeType":"YulFunctionCall","src":"16878:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16870:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16917:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16928:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16913:3:16"},"nodeType":"YulFunctionCall","src":"16913:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16936:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16942:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16932:3:16"},"nodeType":"YulFunctionCall","src":"16932:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16906:6:16"},"nodeType":"YulFunctionCall","src":"16906:47:16"},"nodeType":"YulExpressionStatement","src":"16906:47:16"},{"nodeType":"YulAssignment","src":"16962:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17096:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16970:124:16"},"nodeType":"YulFunctionCall","src":"16970:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16840:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16855:4:16","type":""}],"src":"16689:419:16"},{"body":{"nodeType":"YulBlock","src":"17220:142:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17242:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17250:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17238:3:16"},"nodeType":"YulFunctionCall","src":"17238:14:16"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17254:34:16","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17231:6:16"},"nodeType":"YulFunctionCall","src":"17231:58:16"},"nodeType":"YulExpressionStatement","src":"17231:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17310:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:16"},"nodeType":"YulFunctionCall","src":"17306:15:16"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17323:31:16","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:16"},"nodeType":"YulFunctionCall","src":"17299:56:16"},"nodeType":"YulExpressionStatement","src":"17299:56:16"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17212:6:16","type":""}],"src":"17114:248:16"},{"body":{"nodeType":"YulBlock","src":"17514:220:16","statements":[{"nodeType":"YulAssignment","src":"17524:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17590:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17595:2:16","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17531:58:16"},"nodeType":"YulFunctionCall","src":"17531:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17524:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17696:3:16"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"17607:88:16"},"nodeType":"YulFunctionCall","src":"17607:93:16"},"nodeType":"YulExpressionStatement","src":"17607:93:16"},{"nodeType":"YulAssignment","src":"17709:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17720:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17725:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17716:3:16"},"nodeType":"YulFunctionCall","src":"17716:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17709:3:16"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17502:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17510:3:16","type":""}],"src":"17368:366:16"},{"body":{"nodeType":"YulBlock","src":"17911:248:16","statements":[{"nodeType":"YulAssignment","src":"17921:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17933:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17944:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17929:3:16"},"nodeType":"YulFunctionCall","src":"17929:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17921:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17979:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17964:3:16"},"nodeType":"YulFunctionCall","src":"17964:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17987:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17993:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17983:3:16"},"nodeType":"YulFunctionCall","src":"17983:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17957:6:16"},"nodeType":"YulFunctionCall","src":"17957:47:16"},"nodeType":"YulExpressionStatement","src":"17957:47:16"},{"nodeType":"YulAssignment","src":"18013:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18147:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18021:124:16"},"nodeType":"YulFunctionCall","src":"18021:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18013:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17891:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17906:4:16","type":""}],"src":"17740:419:16"},{"body":{"nodeType":"YulBlock","src":"18291:206:16","statements":[{"nodeType":"YulAssignment","src":"18301:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18313:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18324:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18309:3:16"},"nodeType":"YulFunctionCall","src":"18309:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18301:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18381:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18394:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18405:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18390:3:16"},"nodeType":"YulFunctionCall","src":"18390:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18337:43:16"},"nodeType":"YulFunctionCall","src":"18337:71:16"},"nodeType":"YulExpressionStatement","src":"18337:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18462:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18475:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18486:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18471:3:16"},"nodeType":"YulFunctionCall","src":"18471:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18418:43:16"},"nodeType":"YulFunctionCall","src":"18418:72:16"},"nodeType":"YulExpressionStatement","src":"18418:72:16"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18255:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18267:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18275:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18286:4:16","type":""}],"src":"18165:332:16"},{"body":{"nodeType":"YulBlock","src":"18609:126:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18631:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18639:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18627:3:16"},"nodeType":"YulFunctionCall","src":"18627:14:16"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"18643:34:16","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18620:6:16"},"nodeType":"YulFunctionCall","src":"18620:58:16"},"nodeType":"YulExpressionStatement","src":"18620:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18699:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18707:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18695:3:16"},"nodeType":"YulFunctionCall","src":"18695:15:16"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18712:15:16","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18688:6:16"},"nodeType":"YulFunctionCall","src":"18688:40:16"},"nodeType":"YulExpressionStatement","src":"18688:40:16"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18601:6:16","type":""}],"src":"18503:232:16"},{"body":{"nodeType":"YulBlock","src":"18887:220:16","statements":[{"nodeType":"YulAssignment","src":"18897:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18963:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18968:2:16","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18904:58:16"},"nodeType":"YulFunctionCall","src":"18904:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18897:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19069:3:16"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"18980:88:16"},"nodeType":"YulFunctionCall","src":"18980:93:16"},"nodeType":"YulExpressionStatement","src":"18980:93:16"},{"nodeType":"YulAssignment","src":"19082:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19093:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19098:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19089:3:16"},"nodeType":"YulFunctionCall","src":"19089:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19082:3:16"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18875:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18883:3:16","type":""}],"src":"18741:366:16"},{"body":{"nodeType":"YulBlock","src":"19284:248:16","statements":[{"nodeType":"YulAssignment","src":"19294:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19306:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19317:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19302:3:16"},"nodeType":"YulFunctionCall","src":"19302:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19294:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19341:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19352:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19337:3:16"},"nodeType":"YulFunctionCall","src":"19337:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19360:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19366:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19356:3:16"},"nodeType":"YulFunctionCall","src":"19356:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19330:6:16"},"nodeType":"YulFunctionCall","src":"19330:47:16"},"nodeType":"YulExpressionStatement","src":"19330:47:16"},{"nodeType":"YulAssignment","src":"19386:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19520:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19394:124:16"},"nodeType":"YulFunctionCall","src":"19394:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19386:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19264:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19279:4:16","type":""}],"src":"19113:419:16"},{"body":{"nodeType":"YulBlock","src":"19566:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19583:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19586:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19576:6:16"},"nodeType":"YulFunctionCall","src":"19576:88:16"},"nodeType":"YulExpressionStatement","src":"19576:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19680:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19683:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19673:6:16"},"nodeType":"YulFunctionCall","src":"19673:15:16"},"nodeType":"YulExpressionStatement","src":"19673:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19704:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19707:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19697:6:16"},"nodeType":"YulFunctionCall","src":"19697:15:16"},"nodeType":"YulExpressionStatement","src":"19697:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19538:180:16"},{"body":{"nodeType":"YulBlock","src":"19752:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19769:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19772:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19762:6:16"},"nodeType":"YulFunctionCall","src":"19762:88:16"},"nodeType":"YulExpressionStatement","src":"19762:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19866:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19869:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19859:6:16"},"nodeType":"YulFunctionCall","src":"19859:15:16"},"nodeType":"YulExpressionStatement","src":"19859:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19890:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19893:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19883:6:16"},"nodeType":"YulFunctionCall","src":"19883:15:16"},"nodeType":"YulExpressionStatement","src":"19883:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19724:180:16"},{"body":{"nodeType":"YulBlock","src":"19954:261:16","statements":[{"nodeType":"YulAssignment","src":"19964:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19987:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19969:17:16"},"nodeType":"YulFunctionCall","src":"19969:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19964:1:16"}]},{"nodeType":"YulAssignment","src":"19998:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20021:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20003:17:16"},"nodeType":"YulFunctionCall","src":"20003:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19998:1:16"}]},{"body":{"nodeType":"YulBlock","src":"20161:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20163:16:16"},"nodeType":"YulFunctionCall","src":"20163:18:16"},"nodeType":"YulExpressionStatement","src":"20163:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20082:1:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20089:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"20157:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20085:3:16"},"nodeType":"YulFunctionCall","src":"20085:74:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20079:2:16"},"nodeType":"YulFunctionCall","src":"20079:81:16"},"nodeType":"YulIf","src":"20076:107:16"},{"nodeType":"YulAssignment","src":"20193:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20204:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"20207:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20200:3:16"},"nodeType":"YulFunctionCall","src":"20200:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"20193:3:16"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19941:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"19944:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19950:3:16","type":""}],"src":"19910:305:16"},{"body":{"nodeType":"YulBlock","src":"20264:190:16","statements":[{"nodeType":"YulAssignment","src":"20274:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20301:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20283:17:16"},"nodeType":"YulFunctionCall","src":"20283:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20274:5:16"}]},{"body":{"nodeType":"YulBlock","src":"20397:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20399:16:16"},"nodeType":"YulFunctionCall","src":"20399:18:16"},"nodeType":"YulExpressionStatement","src":"20399:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20322:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"20329:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20319:2:16"},"nodeType":"YulFunctionCall","src":"20319:77:16"},"nodeType":"YulIf","src":"20316:103:16"},{"nodeType":"YulAssignment","src":"20428:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20439:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"20446:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20435:3:16"},"nodeType":"YulFunctionCall","src":"20435:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20428:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20250:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20260:3:16","type":""}],"src":"20221:233:16"},{"body":{"nodeType":"YulBlock","src":"20573:34:16","statements":[{"nodeType":"YulAssignment","src":"20583:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"20598:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20583:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20545:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"20550:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20561:11:16","type":""}],"src":"20460:147:16"},{"body":{"nodeType":"YulBlock","src":"20719:8:16","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20711:6:16","type":""}],"src":"20613:114:16"},{"body":{"nodeType":"YulBlock","src":"20896:235:16","statements":[{"nodeType":"YulAssignment","src":"20906:90:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20989:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"20994:1:16","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20913:75:16"},"nodeType":"YulFunctionCall","src":"20913:83:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20906:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21094:3:16"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"21005:88:16"},"nodeType":"YulFunctionCall","src":"21005:93:16"},"nodeType":"YulExpressionStatement","src":"21005:93:16"},{"nodeType":"YulAssignment","src":"21107:18:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21118:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21123:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21114:3:16"},"nodeType":"YulFunctionCall","src":"21114:11:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21107:3:16"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20884:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20892:3:16","type":""}],"src":"20733:398:16"},{"body":{"nodeType":"YulBlock","src":"21325:191:16","statements":[{"nodeType":"YulAssignment","src":"21336:154:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21486:3:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21343:141:16"},"nodeType":"YulFunctionCall","src":"21343:147:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21336:3:16"}]},{"nodeType":"YulAssignment","src":"21500:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"21507:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21500:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21312:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21321:3:16","type":""}],"src":"21137:379:16"},{"body":{"nodeType":"YulBlock","src":"21628:68:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21650:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21658:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21646:3:16"},"nodeType":"YulFunctionCall","src":"21646:14:16"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"21662:26:16","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21639:6:16"},"nodeType":"YulFunctionCall","src":"21639:50:16"},"nodeType":"YulExpressionStatement","src":"21639:50:16"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21620:6:16","type":""}],"src":"21522:174:16"},{"body":{"nodeType":"YulBlock","src":"21848:220:16","statements":[{"nodeType":"YulAssignment","src":"21858:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21924:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21929:2:16","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21865:58:16"},"nodeType":"YulFunctionCall","src":"21865:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21858:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22030:3:16"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"21941:88:16"},"nodeType":"YulFunctionCall","src":"21941:93:16"},"nodeType":"YulExpressionStatement","src":"21941:93:16"},{"nodeType":"YulAssignment","src":"22043:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22054:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22059:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22050:3:16"},"nodeType":"YulFunctionCall","src":"22050:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22043:3:16"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21836:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21844:3:16","type":""}],"src":"21702:366:16"},{"body":{"nodeType":"YulBlock","src":"22245:248:16","statements":[{"nodeType":"YulAssignment","src":"22255:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22267:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22278:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22263:3:16"},"nodeType":"YulFunctionCall","src":"22263:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22255:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22302:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22313:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22298:3:16"},"nodeType":"YulFunctionCall","src":"22298:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22321:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22327:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22317:3:16"},"nodeType":"YulFunctionCall","src":"22317:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22291:6:16"},"nodeType":"YulFunctionCall","src":"22291:47:16"},"nodeType":"YulExpressionStatement","src":"22291:47:16"},{"nodeType":"YulAssignment","src":"22347:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22481:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22355:124:16"},"nodeType":"YulFunctionCall","src":"22355:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22347:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22225:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22240:4:16","type":""}],"src":"22074:419:16"},{"body":{"nodeType":"YulBlock","src":"22605:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22627:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22635:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22623:3:16"},"nodeType":"YulFunctionCall","src":"22623:14:16"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"22639:34:16","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22616:6:16"},"nodeType":"YulFunctionCall","src":"22616:58:16"},"nodeType":"YulExpressionStatement","src":"22616:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22695:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22703:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22691:3:16"},"nodeType":"YulFunctionCall","src":"22691:15:16"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22708:11:16","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22684:6:16"},"nodeType":"YulFunctionCall","src":"22684:36:16"},"nodeType":"YulExpressionStatement","src":"22684:36:16"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22597:6:16","type":""}],"src":"22499:228:16"},{"body":{"nodeType":"YulBlock","src":"22879:220:16","statements":[{"nodeType":"YulAssignment","src":"22889:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22955:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22960:2:16","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22896:58:16"},"nodeType":"YulFunctionCall","src":"22896:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22889:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23061:3:16"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"22972:88:16"},"nodeType":"YulFunctionCall","src":"22972:93:16"},"nodeType":"YulExpressionStatement","src":"22972:93:16"},{"nodeType":"YulAssignment","src":"23074:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23085:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"23090:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23081:3:16"},"nodeType":"YulFunctionCall","src":"23081:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23074:3:16"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22867:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22875:3:16","type":""}],"src":"22733:366:16"},{"body":{"nodeType":"YulBlock","src":"23276:248:16","statements":[{"nodeType":"YulAssignment","src":"23286:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23298:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23309:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23294:3:16"},"nodeType":"YulFunctionCall","src":"23294:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23286:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23333:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23344:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23329:3:16"},"nodeType":"YulFunctionCall","src":"23329:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23352:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"23358:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23348:3:16"},"nodeType":"YulFunctionCall","src":"23348:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23322:6:16"},"nodeType":"YulFunctionCall","src":"23322:47:16"},"nodeType":"YulExpressionStatement","src":"23322:47:16"},{"nodeType":"YulAssignment","src":"23378:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23512:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23386:124:16"},"nodeType":"YulFunctionCall","src":"23386:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23378:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23256:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23271:4:16","type":""}],"src":"23105:419:16"},{"body":{"nodeType":"YulBlock","src":"23575:32:16","statements":[{"nodeType":"YulAssignment","src":"23585:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"23596:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23585:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23557:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23567:7:16","type":""}],"src":"23530:77:16"},{"body":{"nodeType":"YulBlock","src":"23678:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23695:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23718:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23700:17:16"},"nodeType":"YulFunctionCall","src":"23700:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23688:6:16"},"nodeType":"YulFunctionCall","src":"23688:37:16"},"nodeType":"YulExpressionStatement","src":"23688:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23666:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23673:3:16","type":""}],"src":"23613:118:16"},{"body":{"nodeType":"YulBlock","src":"23781:57:16","statements":[{"nodeType":"YulAssignment","src":"23791:41:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23806:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"23813:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23802:3:16"},"nodeType":"YulFunctionCall","src":"23802:30:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23791:7:16"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23763:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23773:7:16","type":""}],"src":"23737:101:16"},{"body":{"nodeType":"YulBlock","src":"23907:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23924:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23946:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"23929:16:16"},"nodeType":"YulFunctionCall","src":"23929:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23917:6:16"},"nodeType":"YulFunctionCall","src":"23917:36:16"},"nodeType":"YulExpressionStatement","src":"23917:36:16"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23895:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23902:3:16","type":""}],"src":"23844:115:16"},{"body":{"nodeType":"YulBlock","src":"24009:45:16","statements":[{"nodeType":"YulAssignment","src":"24019:29:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24034:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"24041:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24030:3:16"},"nodeType":"YulFunctionCall","src":"24030:18:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24019:7:16"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23991:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24001:7:16","type":""}],"src":"23965:89:16"},{"body":{"nodeType":"YulBlock","src":"24123:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24140:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24162:5:16"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"24145:16:16"},"nodeType":"YulFunctionCall","src":"24145:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24133:6:16"},"nodeType":"YulFunctionCall","src":"24133:36:16"},"nodeType":"YulExpressionStatement","src":"24133:36:16"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24111:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24118:3:16","type":""}],"src":"24060:115:16"},{"body":{"nodeType":"YulBlock","src":"24225:49:16","statements":[{"nodeType":"YulAssignment","src":"24235:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24250:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"24257:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24246:3:16"},"nodeType":"YulFunctionCall","src":"24246:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24235:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24207:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24217:7:16","type":""}],"src":"24181:93:16"},{"body":{"nodeType":"YulBlock","src":"24343:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24360:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24382:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"24365:16:16"},"nodeType":"YulFunctionCall","src":"24365:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24353:6:16"},"nodeType":"YulFunctionCall","src":"24353:36:16"},"nodeType":"YulExpressionStatement","src":"24353:36:16"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24331:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24338:3:16","type":""}],"src":"24280:115:16"},{"body":{"nodeType":"YulBlock","src":"24603:446:16","statements":[{"nodeType":"YulAssignment","src":"24613:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24625:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24636:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24621:3:16"},"nodeType":"YulFunctionCall","src":"24621:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24613:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24694:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24707:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24718:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24703:3:16"},"nodeType":"YulFunctionCall","src":"24703:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24650:43:16"},"nodeType":"YulFunctionCall","src":"24650:71:16"},"nodeType":"YulExpressionStatement","src":"24650:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24773:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24786:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24797:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24782:3:16"},"nodeType":"YulFunctionCall","src":"24782:18:16"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24731:41:16"},"nodeType":"YulFunctionCall","src":"24731:70:16"},"nodeType":"YulExpressionStatement","src":"24731:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24853:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24866:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24877:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24862:3:16"},"nodeType":"YulFunctionCall","src":"24862:18:16"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"24811:41:16"},"nodeType":"YulFunctionCall","src":"24811:70:16"},"nodeType":"YulExpressionStatement","src":"24811:70:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24933:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24946:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24957:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24942:3:16"},"nodeType":"YulFunctionCall","src":"24942:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24891:41:16"},"nodeType":"YulFunctionCall","src":"24891:70:16"},"nodeType":"YulExpressionStatement","src":"24891:70:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25013:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25026:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25037:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25022:3:16"},"nodeType":"YulFunctionCall","src":"25022:19:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24971:41:16"},"nodeType":"YulFunctionCall","src":"24971:71:16"},"nodeType":"YulExpressionStatement","src":"24971:71:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24543:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24555:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24563:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24571:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24579:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24587:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24598:4:16","type":""}],"src":"24401:648:16"},{"body":{"nodeType":"YulBlock","src":"25118:80:16","statements":[{"nodeType":"YulAssignment","src":"25128:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25143:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25137:5:16"},"nodeType":"YulFunctionCall","src":"25137:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25128:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25186:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"25159:26:16"},"nodeType":"YulFunctionCall","src":"25159:33:16"},"nodeType":"YulExpressionStatement","src":"25159:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25096:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"25104:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25112:5:16","type":""}],"src":"25055:143:16"},{"body":{"nodeType":"YulBlock","src":"25281:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"25327:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25329:77:16"},"nodeType":"YulFunctionCall","src":"25329:79:16"},"nodeType":"YulExpressionStatement","src":"25329:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25302:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"25311:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25298:3:16"},"nodeType":"YulFunctionCall","src":"25298:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"25323:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25294:3:16"},"nodeType":"YulFunctionCall","src":"25294:32:16"},"nodeType":"YulIf","src":"25291:119:16"},{"nodeType":"YulBlock","src":"25420:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25435:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"25449:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25439:6:16","type":""}]},{"nodeType":"YulAssignment","src":"25464:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25510:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"25521:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25506:3:16"},"nodeType":"YulFunctionCall","src":"25506:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25530:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25474:31:16"},"nodeType":"YulFunctionCall","src":"25474:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25464:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25251:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25262:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25274:6:16","type":""}],"src":"25204:351:16"},{"body":{"nodeType":"YulBlock","src":"25675:34:16","statements":[{"nodeType":"YulAssignment","src":"25685:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"25700:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25685:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25647:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"25652:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25663:11:16","type":""}],"src":"25561:148:16"},{"body":{"nodeType":"YulBlock","src":"25825:267:16","statements":[{"nodeType":"YulVariableDeclaration","src":"25835:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25882:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25849:32:16"},"nodeType":"YulFunctionCall","src":"25849:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25839:6:16","type":""}]},{"nodeType":"YulAssignment","src":"25897:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25981:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"25986:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25904:76:16"},"nodeType":"YulFunctionCall","src":"25904:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25897:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26028:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26035:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26024:3:16"},"nodeType":"YulFunctionCall","src":"26024:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26042:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26047:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26002:21:16"},"nodeType":"YulFunctionCall","src":"26002:52:16"},"nodeType":"YulExpressionStatement","src":"26002:52:16"},{"nodeType":"YulAssignment","src":"26063:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26074:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26079:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26070:3:16"},"nodeType":"YulFunctionCall","src":"26070:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26063:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25806:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25813:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25821:3:16","type":""}],"src":"25715:377:16"},{"body":{"nodeType":"YulBlock","src":"26282:251:16","statements":[{"nodeType":"YulAssignment","src":"26293:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26382:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26391:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26300:81:16"},"nodeType":"YulFunctionCall","src":"26300:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26293:3:16"}]},{"nodeType":"YulAssignment","src":"26405:102:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26494:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26503:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26412:81:16"},"nodeType":"YulFunctionCall","src":"26412:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26405:3:16"}]},{"nodeType":"YulAssignment","src":"26517:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"26524:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26517:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26253:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26259:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26267:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26278:3:16","type":""}],"src":"26098:435:16"},{"body":{"nodeType":"YulBlock","src":"26567:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26584:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26587:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26577:6:16"},"nodeType":"YulFunctionCall","src":"26577:88:16"},"nodeType":"YulExpressionStatement","src":"26577:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26681:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26684:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26674:6:16"},"nodeType":"YulFunctionCall","src":"26674:15:16"},"nodeType":"YulExpressionStatement","src":"26674:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26705:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26708:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26698:6:16"},"nodeType":"YulFunctionCall","src":"26698:15:16"},"nodeType":"YulExpressionStatement","src":"26698:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"26539:180:16"},{"body":{"nodeType":"YulBlock","src":"26759:142:16","statements":[{"nodeType":"YulAssignment","src":"26769:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26792:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26774:17:16"},"nodeType":"YulFunctionCall","src":"26774:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26769:1:16"}]},{"nodeType":"YulAssignment","src":"26803:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26826:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26808:17:16"},"nodeType":"YulFunctionCall","src":"26808:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26803:1:16"}]},{"body":{"nodeType":"YulBlock","src":"26850:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26852:16:16"},"nodeType":"YulFunctionCall","src":"26852:18:16"},"nodeType":"YulExpressionStatement","src":"26852:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26847:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26840:6:16"},"nodeType":"YulFunctionCall","src":"26840:9:16"},"nodeType":"YulIf","src":"26837:35:16"},{"nodeType":"YulAssignment","src":"26881:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26890:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"26893:1:16"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"26886:3:16"},"nodeType":"YulFunctionCall","src":"26886:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26881:1:16"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26748:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"26751:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26757:1:16","type":""}],"src":"26725:176:16"},{"body":{"nodeType":"YulBlock","src":"27041:214:16","statements":[{"nodeType":"YulAssignment","src":"27051:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27063:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27074:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27059:3:16"},"nodeType":"YulFunctionCall","src":"27059:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27051:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27139:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27152:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27163:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27148:3:16"},"nodeType":"YulFunctionCall","src":"27148:17:16"}],"functionName":{"name":"abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"27087:51:16"},"nodeType":"YulFunctionCall","src":"27087:79:16"},"nodeType":"YulExpressionStatement","src":"27087:79:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27220:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27233:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27244:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27229:3:16"},"nodeType":"YulFunctionCall","src":"27229:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27176:43:16"},"nodeType":"YulFunctionCall","src":"27176:72:16"},"nodeType":"YulExpressionStatement","src":"27176:72:16"}]},"name":"abi_encode_tuple_t_enum$_breed_$3786_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27005:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27017:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27025:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27036:4:16","type":""}],"src":"26907:348:16"},{"body":{"nodeType":"YulBlock","src":"27367:118:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27389:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"27397:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27385:3:16"},"nodeType":"YulFunctionCall","src":"27385:14:16"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"27401:34:16","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27378:6:16"},"nodeType":"YulFunctionCall","src":"27378:58:16"},"nodeType":"YulExpressionStatement","src":"27378:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27457:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"27465:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27453:3:16"},"nodeType":"YulFunctionCall","src":"27453:15:16"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"27470:7:16","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27446:6:16"},"nodeType":"YulFunctionCall","src":"27446:32:16"},"nodeType":"YulExpressionStatement","src":"27446:32:16"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27359:6:16","type":""}],"src":"27261:224:16"},{"body":{"nodeType":"YulBlock","src":"27637:220:16","statements":[{"nodeType":"YulAssignment","src":"27647:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27713:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"27718:2:16","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27654:58:16"},"nodeType":"YulFunctionCall","src":"27654:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27647:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27819:3:16"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"27730:88:16"},"nodeType":"YulFunctionCall","src":"27730:93:16"},"nodeType":"YulExpressionStatement","src":"27730:93:16"},{"nodeType":"YulAssignment","src":"27832:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27843:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"27848:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27839:3:16"},"nodeType":"YulFunctionCall","src":"27839:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27832:3:16"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27625:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27633:3:16","type":""}],"src":"27491:366:16"},{"body":{"nodeType":"YulBlock","src":"28034:248:16","statements":[{"nodeType":"YulAssignment","src":"28044:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28056:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28067:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28052:3:16"},"nodeType":"YulFunctionCall","src":"28052:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28044:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28091:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"28102:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28087:3:16"},"nodeType":"YulFunctionCall","src":"28087:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28110:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"28116:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28106:3:16"},"nodeType":"YulFunctionCall","src":"28106:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28080:6:16"},"nodeType":"YulFunctionCall","src":"28080:47:16"},"nodeType":"YulExpressionStatement","src":"28080:47:16"},{"nodeType":"YulAssignment","src":"28136:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28270:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28144:124:16"},"nodeType":"YulFunctionCall","src":"28144:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28136:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28014:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28029:4:16","type":""}],"src":"27863:419:16"},{"body":{"nodeType":"YulBlock","src":"28394:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28416:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28424:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28412:3:16"},"nodeType":"YulFunctionCall","src":"28412:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"28428:34:16","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28405:6:16"},"nodeType":"YulFunctionCall","src":"28405:58:16"},"nodeType":"YulExpressionStatement","src":"28405:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28484:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28492:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28480:3:16"},"nodeType":"YulFunctionCall","src":"28480:15:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"28497:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28473:6:16"},"nodeType":"YulFunctionCall","src":"28473:31:16"},"nodeType":"YulExpressionStatement","src":"28473:31:16"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28386:6:16","type":""}],"src":"28288:223:16"},{"body":{"nodeType":"YulBlock","src":"28663:220:16","statements":[{"nodeType":"YulAssignment","src":"28673:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28739:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"28744:2:16","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28680:58:16"},"nodeType":"YulFunctionCall","src":"28680:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28673:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28845:3:16"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"28756:88:16"},"nodeType":"YulFunctionCall","src":"28756:93:16"},"nodeType":"YulExpressionStatement","src":"28756:93:16"},{"nodeType":"YulAssignment","src":"28858:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28869:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"28874:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28865:3:16"},"nodeType":"YulFunctionCall","src":"28865:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28858:3:16"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28651:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28659:3:16","type":""}],"src":"28517:366:16"},{"body":{"nodeType":"YulBlock","src":"29060:248:16","statements":[{"nodeType":"YulAssignment","src":"29070:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29082:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29093:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29078:3:16"},"nodeType":"YulFunctionCall","src":"29078:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29070:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29117:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29128:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29113:3:16"},"nodeType":"YulFunctionCall","src":"29113:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29136:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"29142:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29132:3:16"},"nodeType":"YulFunctionCall","src":"29132:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29106:6:16"},"nodeType":"YulFunctionCall","src":"29106:47:16"},"nodeType":"YulExpressionStatement","src":"29106:47:16"},{"nodeType":"YulAssignment","src":"29162:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29296:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29170:124:16"},"nodeType":"YulFunctionCall","src":"29170:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29162:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29040:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29055:4:16","type":""}],"src":"28889:419:16"},{"body":{"nodeType":"YulBlock","src":"29420:69:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29442:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"29450:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29438:3:16"},"nodeType":"YulFunctionCall","src":"29438:14:16"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"29454:27:16","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29431:6:16"},"nodeType":"YulFunctionCall","src":"29431:51:16"},"nodeType":"YulExpressionStatement","src":"29431:51:16"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29412:6:16","type":""}],"src":"29314:175:16"},{"body":{"nodeType":"YulBlock","src":"29641:220:16","statements":[{"nodeType":"YulAssignment","src":"29651:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29717:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"29722:2:16","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29658:58:16"},"nodeType":"YulFunctionCall","src":"29658:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29651:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29823:3:16"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"29734:88:16"},"nodeType":"YulFunctionCall","src":"29734:93:16"},"nodeType":"YulExpressionStatement","src":"29734:93:16"},{"nodeType":"YulAssignment","src":"29836:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29847:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"29852:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29843:3:16"},"nodeType":"YulFunctionCall","src":"29843:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29836:3:16"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29629:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29637:3:16","type":""}],"src":"29495:366:16"},{"body":{"nodeType":"YulBlock","src":"30038:248:16","statements":[{"nodeType":"YulAssignment","src":"30048:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30060:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"30071:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30056:3:16"},"nodeType":"YulFunctionCall","src":"30056:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30048:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30095:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"30106:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30091:3:16"},"nodeType":"YulFunctionCall","src":"30091:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30114:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"30120:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30110:3:16"},"nodeType":"YulFunctionCall","src":"30110:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30084:6:16"},"nodeType":"YulFunctionCall","src":"30084:47:16"},"nodeType":"YulExpressionStatement","src":"30084:47:16"},{"nodeType":"YulAssignment","src":"30140:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30274:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30148:124:16"},"nodeType":"YulFunctionCall","src":"30148:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30140:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30018:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30033:4:16","type":""}],"src":"29867:419:16"},{"body":{"nodeType":"YulBlock","src":"30398:131:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30420:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30428:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30416:3:16"},"nodeType":"YulFunctionCall","src":"30416:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"30432:34:16","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30409:6:16"},"nodeType":"YulFunctionCall","src":"30409:58:16"},"nodeType":"YulExpressionStatement","src":"30409:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30488:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"30496:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30484:3:16"},"nodeType":"YulFunctionCall","src":"30484:15:16"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"30501:20:16","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30477:6:16"},"nodeType":"YulFunctionCall","src":"30477:45:16"},"nodeType":"YulExpressionStatement","src":"30477:45:16"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30390:6:16","type":""}],"src":"30292:237:16"},{"body":{"nodeType":"YulBlock","src":"30681:220:16","statements":[{"nodeType":"YulAssignment","src":"30691:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30757:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"30762:2:16","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30698:58:16"},"nodeType":"YulFunctionCall","src":"30698:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30691:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30863:3:16"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"30774:88:16"},"nodeType":"YulFunctionCall","src":"30774:93:16"},"nodeType":"YulExpressionStatement","src":"30774:93:16"},{"nodeType":"YulAssignment","src":"30876:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30887:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"30892:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30883:3:16"},"nodeType":"YulFunctionCall","src":"30883:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30876:3:16"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30669:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30677:3:16","type":""}],"src":"30535:366:16"},{"body":{"nodeType":"YulBlock","src":"31078:248:16","statements":[{"nodeType":"YulAssignment","src":"31088:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31100:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"31111:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31096:3:16"},"nodeType":"YulFunctionCall","src":"31096:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31088:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31135:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"31146:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31131:3:16"},"nodeType":"YulFunctionCall","src":"31131:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31154:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"31160:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31150:3:16"},"nodeType":"YulFunctionCall","src":"31150:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31124:6:16"},"nodeType":"YulFunctionCall","src":"31124:47:16"},"nodeType":"YulExpressionStatement","src":"31124:47:16"},{"nodeType":"YulAssignment","src":"31180:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31314:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31188:124:16"},"nodeType":"YulFunctionCall","src":"31188:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31180:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31058:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31073:4:16","type":""}],"src":"30907:419:16"},{"body":{"nodeType":"YulBlock","src":"31438:127:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31460:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"31468:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31456:3:16"},"nodeType":"YulFunctionCall","src":"31456:14:16"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"31472:34:16","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31449:6:16"},"nodeType":"YulFunctionCall","src":"31449:58:16"},"nodeType":"YulExpressionStatement","src":"31449:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31528:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"31536:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31524:3:16"},"nodeType":"YulFunctionCall","src":"31524:15:16"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"31541:16:16","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31517:6:16"},"nodeType":"YulFunctionCall","src":"31517:41:16"},"nodeType":"YulExpressionStatement","src":"31517:41:16"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31430:6:16","type":""}],"src":"31332:233:16"},{"body":{"nodeType":"YulBlock","src":"31717:220:16","statements":[{"nodeType":"YulAssignment","src":"31727:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31793:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"31798:2:16","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31734:58:16"},"nodeType":"YulFunctionCall","src":"31734:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31727:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31899:3:16"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"31810:88:16"},"nodeType":"YulFunctionCall","src":"31810:93:16"},"nodeType":"YulExpressionStatement","src":"31810:93:16"},{"nodeType":"YulAssignment","src":"31912:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31923:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"31928:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31919:3:16"},"nodeType":"YulFunctionCall","src":"31919:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31912:3:16"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31705:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31713:3:16","type":""}],"src":"31571:366:16"},{"body":{"nodeType":"YulBlock","src":"32114:248:16","statements":[{"nodeType":"YulAssignment","src":"32124:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32136:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"32147:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32132:3:16"},"nodeType":"YulFunctionCall","src":"32132:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32124:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32171:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"32182:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32167:3:16"},"nodeType":"YulFunctionCall","src":"32167:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32190:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"32196:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32186:3:16"},"nodeType":"YulFunctionCall","src":"32186:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32160:6:16"},"nodeType":"YulFunctionCall","src":"32160:47:16"},"nodeType":"YulExpressionStatement","src":"32160:47:16"},{"nodeType":"YulAssignment","src":"32216:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32350:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32224:124:16"},"nodeType":"YulFunctionCall","src":"32224:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32216:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32094:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32109:4:16","type":""}],"src":"31943:419:16"},{"body":{"nodeType":"YulBlock","src":"32426:40:16","statements":[{"nodeType":"YulAssignment","src":"32437:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32453:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32447:5:16"},"nodeType":"YulFunctionCall","src":"32447:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32437:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32409:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"32419:6:16","type":""}],"src":"32368:98:16"},{"body":{"nodeType":"YulBlock","src":"32567:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32584:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"32589:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32577:6:16"},"nodeType":"YulFunctionCall","src":"32577:19:16"},"nodeType":"YulExpressionStatement","src":"32577:19:16"},{"nodeType":"YulAssignment","src":"32605:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32624:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"32629:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32620:3:16"},"nodeType":"YulFunctionCall","src":"32620:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32605:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32539:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"32544:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32555:11:16","type":""}],"src":"32472:168:16"},{"body":{"nodeType":"YulBlock","src":"32736:270:16","statements":[{"nodeType":"YulVariableDeclaration","src":"32746:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32792:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"32760:31:16"},"nodeType":"YulFunctionCall","src":"32760:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32750:6:16","type":""}]},{"nodeType":"YulAssignment","src":"32807:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32872:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"32877:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32814:57:16"},"nodeType":"YulFunctionCall","src":"32814:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32807:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32919:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"32926:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32915:3:16"},"nodeType":"YulFunctionCall","src":"32915:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"32933:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"32938:6:16"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"32893:21:16"},"nodeType":"YulFunctionCall","src":"32893:52:16"},"nodeType":"YulExpressionStatement","src":"32893:52:16"},{"nodeType":"YulAssignment","src":"32954:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32965:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32992:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"32970:21:16"},"nodeType":"YulFunctionCall","src":"32970:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32961:3:16"},"nodeType":"YulFunctionCall","src":"32961:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32954:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32717:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32724:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32732:3:16","type":""}],"src":"32646:360:16"},{"body":{"nodeType":"YulBlock","src":"33212:440:16","statements":[{"nodeType":"YulAssignment","src":"33222:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33234:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33245:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33230:3:16"},"nodeType":"YulFunctionCall","src":"33230:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33222:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33303:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33316:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33327:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33312:3:16"},"nodeType":"YulFunctionCall","src":"33312:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33259:43:16"},"nodeType":"YulFunctionCall","src":"33259:71:16"},"nodeType":"YulExpressionStatement","src":"33259:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33384:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33397:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33408:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33393:3:16"},"nodeType":"YulFunctionCall","src":"33393:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33340:43:16"},"nodeType":"YulFunctionCall","src":"33340:72:16"},"nodeType":"YulExpressionStatement","src":"33340:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33466:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33479:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33490:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33475:3:16"},"nodeType":"YulFunctionCall","src":"33475:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33422:43:16"},"nodeType":"YulFunctionCall","src":"33422:72:16"},"nodeType":"YulExpressionStatement","src":"33422:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33515:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33526:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33511:3:16"},"nodeType":"YulFunctionCall","src":"33511:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33535:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"33541:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33531:3:16"},"nodeType":"YulFunctionCall","src":"33531:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33504:6:16"},"nodeType":"YulFunctionCall","src":"33504:48:16"},"nodeType":"YulExpressionStatement","src":"33504:48:16"},{"nodeType":"YulAssignment","src":"33561:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33631:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"33640:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33569:61:16"},"nodeType":"YulFunctionCall","src":"33569:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33561:4:16"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33160:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33172:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33180:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33188:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33196:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33207:4:16","type":""}],"src":"33012:640:16"},{"body":{"nodeType":"YulBlock","src":"33720:79:16","statements":[{"nodeType":"YulAssignment","src":"33730:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33745:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33739:5:16"},"nodeType":"YulFunctionCall","src":"33739:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33730:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33787:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"33761:25:16"},"nodeType":"YulFunctionCall","src":"33761:32:16"},"nodeType":"YulExpressionStatement","src":"33761:32:16"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"33698:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"33706:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"33714:5:16","type":""}],"src":"33658:141:16"},{"body":{"nodeType":"YulBlock","src":"33881:273:16","statements":[{"body":{"nodeType":"YulBlock","src":"33927:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33929:77:16"},"nodeType":"YulFunctionCall","src":"33929:79:16"},"nodeType":"YulExpressionStatement","src":"33929:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33902:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"33911:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33898:3:16"},"nodeType":"YulFunctionCall","src":"33898:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"33923:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33894:3:16"},"nodeType":"YulFunctionCall","src":"33894:32:16"},"nodeType":"YulIf","src":"33891:119:16"},{"nodeType":"YulBlock","src":"34020:127:16","statements":[{"nodeType":"YulVariableDeclaration","src":"34035:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"34049:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34039:6:16","type":""}]},{"nodeType":"YulAssignment","src":"34064:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34109:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"34120:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34105:3:16"},"nodeType":"YulFunctionCall","src":"34105:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34129:7:16"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"34074:30:16"},"nodeType":"YulFunctionCall","src":"34074:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34064:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33851:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33862:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33874:6:16","type":""}],"src":"33805:349:16"},{"body":{"nodeType":"YulBlock","src":"34266:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34288:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"34296:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34284:3:16"},"nodeType":"YulFunctionCall","src":"34284:14:16"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"34300:34:16","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34277:6:16"},"nodeType":"YulFunctionCall","src":"34277:58:16"},"nodeType":"YulExpressionStatement","src":"34277:58:16"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34258:6:16","type":""}],"src":"34160:182:16"},{"body":{"nodeType":"YulBlock","src":"34494:220:16","statements":[{"nodeType":"YulAssignment","src":"34504:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34570:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"34575:2:16","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34511:58:16"},"nodeType":"YulFunctionCall","src":"34511:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34504:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34676:3:16"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"34587:88:16"},"nodeType":"YulFunctionCall","src":"34587:93:16"},"nodeType":"YulExpressionStatement","src":"34587:93:16"},{"nodeType":"YulAssignment","src":"34689:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34700:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"34705:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34696:3:16"},"nodeType":"YulFunctionCall","src":"34696:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34689:3:16"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34482:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34490:3:16","type":""}],"src":"34348:366:16"},{"body":{"nodeType":"YulBlock","src":"34891:248:16","statements":[{"nodeType":"YulAssignment","src":"34901:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34913:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"34924:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34909:3:16"},"nodeType":"YulFunctionCall","src":"34909:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34901:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34948:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"34959:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34944:3:16"},"nodeType":"YulFunctionCall","src":"34944:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34967:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"34973:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34963:3:16"},"nodeType":"YulFunctionCall","src":"34963:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34937:6:16"},"nodeType":"YulFunctionCall","src":"34937:47:16"},"nodeType":"YulExpressionStatement","src":"34937:47:16"},{"nodeType":"YulAssignment","src":"34993:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35127:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35001:124:16"},"nodeType":"YulFunctionCall","src":"35001:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34993:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34871:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34886:4:16","type":""}],"src":"34720:419:16"},{"body":{"nodeType":"YulBlock","src":"35251:72:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35273:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"35281:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35269:3:16"},"nodeType":"YulFunctionCall","src":"35269:14:16"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"35285:30:16","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35262:6:16"},"nodeType":"YulFunctionCall","src":"35262:54:16"},"nodeType":"YulExpressionStatement","src":"35262:54:16"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35243:6:16","type":""}],"src":"35145:178:16"},{"body":{"nodeType":"YulBlock","src":"35475:220:16","statements":[{"nodeType":"YulAssignment","src":"35485:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35551:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"35556:2:16","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35492:58:16"},"nodeType":"YulFunctionCall","src":"35492:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35485:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35657:3:16"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"35568:88:16"},"nodeType":"YulFunctionCall","src":"35568:93:16"},"nodeType":"YulExpressionStatement","src":"35568:93:16"},{"nodeType":"YulAssignment","src":"35670:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35681:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"35686:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35677:3:16"},"nodeType":"YulFunctionCall","src":"35677:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35670:3:16"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35463:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35471:3:16","type":""}],"src":"35329:366:16"},{"body":{"nodeType":"YulBlock","src":"35872:248:16","statements":[{"nodeType":"YulAssignment","src":"35882:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35894:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"35905:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35890:3:16"},"nodeType":"YulFunctionCall","src":"35890:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35882:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35929:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"35940:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35925:3:16"},"nodeType":"YulFunctionCall","src":"35925:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35948:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"35954:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35944:3:16"},"nodeType":"YulFunctionCall","src":"35944:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35918:6:16"},"nodeType":"YulFunctionCall","src":"35918:47:16"},"nodeType":"YulExpressionStatement","src":"35918:47:16"},{"nodeType":"YulAssignment","src":"35974:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36108:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35982:124:16"},"nodeType":"YulFunctionCall","src":"35982:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35974:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35852:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35867:4:16","type":""}],"src":"35701:419:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_breed_$3786(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_breed_$3786(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_breed_$3786(value)\n    }\n\n    function convert_t_enum$_breed_$3786_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_breed_$3786(value)\n    }\n\n    function abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_breed_$3786_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_breed_$3786__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_enum$_breed_$3786_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_breed_$3786_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":2148},{"length":32,"start":2232}],"3789":[{"length":32,"start":3839}],"3791":[{"length":32,"start":3932}],"3793":[{"length":32,"start":3899}],"3795":[{"length":32,"start":3967}],"3809":[{"length":32,"start":2837}],"3811":[{"length":32,"start":3505},{"length":32,"start":3749}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x4E5 JUMPI DUP1 PUSH4 0xDB169C69 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x54D JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x8796BA8C EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x44A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FE543E3 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x30D6B0F1 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x314 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x213 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x2452 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x265B JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x280D JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x922 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH2 0xB13 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0xCF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x434 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0xDD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A6 PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B3 SWAP2 SWAP1 PUSH2 0x26AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x2A9C JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x507 SWAP2 SWAP1 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x537 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x2BCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x2BE5 JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x655 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x665 JUMPI POP PUSH2 0x664 DUP3 PUSH2 0x12D5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x67B SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A7 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x709 DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74F DUP3 PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B7 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7DF PUSH2 0x138A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x80E JUMPI POP PUSH2 0x80D DUP2 PUSH2 0x808 PUSH2 0x138A JUMP JUMPDEST PUSH2 0x1241 JUMP JUMPDEST JUMPDEST PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x844 SWAP1 PUSH2 0x2D8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x857 DUP4 DUP4 PUSH2 0x1392 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x914 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90B SWAP3 SWAP2 SWAP1 PUSH2 0x2DAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91E DUP3 DUP3 PUSH2 0x144B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x933 PUSH2 0x92D PUSH2 0x138A JUMP JUMPDEST DUP3 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x972 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x969 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97D DUP4 DUP4 DUP4 PUSH2 0x1665 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x993 PUSH2 0x1216 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA2B JUMPI DUP3 DUP6 GT DUP1 ISZERO PUSH2 0x9D1 JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x2EC3 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x9F3 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x9E9 JUMPI PUSH2 0x9E8 PUSH2 0x28BC JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xA5E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA05 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xA16 SWAP2 SWAP1 PUSH2 0x2EC3 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xA23 SWAP1 PUSH2 0x2F19 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x998 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4C87E2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA79 JUMPI PUSH2 0xA78 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA8E SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABA SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x21E0F6F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xBC3 SWAP1 PUSH2 0x2F93 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23E477E700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC5F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC70 DUP4 PUSH2 0x195F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD9 SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP1 PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xE08 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE34 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE81 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE56 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE81 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE64 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE9D PUSH2 0xE96 PUSH2 0x138A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x199C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x73B53B9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x311E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0x3B07F8D4BB79CDF471A71ADC46FE8A07EC6DD5242AD9D8018D09303F41EF524 CALLER PUSH1 0x40 MLOAD PUSH2 0x1096 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x10B2 PUSH2 0x10AC PUSH2 0x138A JUMP JUMPDEST DUP4 PUSH2 0x15D0 JUMP JUMPDEST PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E8 SWAP1 PUSH2 0x2E45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10FD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1B09 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x110E DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x112E SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x115A SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x117C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x118A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x11B8 PUSH2 0x1B65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x11CE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1211 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1203 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11EB SWAP3 SWAP2 SWAP1 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1211 JUMP JUMPDEST PUSH2 0x120C DUP5 PUSH2 0x1B7C JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121E PUSH2 0x2321 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1387 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137E SWAP1 PUSH2 0x2FF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1405 DUP4 PUSH2 0xC64 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14A2 JUMPI PUSH2 0x14A1 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14B4 SWAP2 SWAP1 PUSH2 0x3242 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14C1 DUP3 PUSH2 0x982 JUMP JUMPDEST SWAP1 POP PUSH2 0x14CD DUP5 DUP5 PUSH2 0x1C25 JUMP JUMPDEST PUSH2 0x158F DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x14E6 JUMPI PUSH2 0x14E5 PUSH2 0x28BC JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14F7 JUMPI PUSH2 0x14F6 PUSH2 0x2E65 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x150C SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1538 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1585 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x155A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1585 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1568 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1C43 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15C0 SWAP3 SWAP2 SWAP1 PUSH2 0x3273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15DC DUP4 PUSH2 0xC64 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x161E JUMPI POP PUSH2 0x161D DUP2 DUP6 PUSH2 0x1241 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x165C JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1644 DUP5 PUSH2 0x6FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1685 DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D2 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x174B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1742 SWAP1 PUSH2 0x33A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1758 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CB7 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1778 DUP3 PUSH2 0xC64 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C5 SWAP1 PUSH2 0x330E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x195A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A02 SWAP1 PUSH2 0x340C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1AFC SWAP2 SWAP1 PUSH2 0x249A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1B14 DUP5 DUP5 DUP5 PUSH2 0x1665 JUMP JUMPDEST PUSH2 0x1B20 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B56 SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B87 DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B91 PUSH2 0x1B65 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1BB1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BDC JUMP JUMPDEST DUP1 PUSH2 0x1BBB DUP5 PUSH2 0x1E5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BCC SWAP3 SWAP2 SWAP1 PUSH2 0x31EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C06 DUP4 PUSH2 0x195F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C3F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C4C DUP3 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1C8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C82 SWAP1 PUSH2 0x3530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1CB2 SWAP3 SWAP2 SWAP1 PUSH2 0x2343 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F8D JUMP JUMPDEST ISZERO PUSH2 0x1E4D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1D0D PUSH2 0x138A JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D2F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D7A JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DFD JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DAA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEC SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1E69 DUP5 PUSH2 0x1FB0 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E88 JUMPI PUSH2 0x1E87 PUSH2 0x26CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EBA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1F27 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F27 JUMP JUMPDEST PUSH2 0x1EC8 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3C DUP4 DUP4 PUSH2 0x2103 JUMP JUMPDEST PUSH2 0x1F49 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1CC3 JUMP JUMPDEST PUSH2 0x1F88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7F SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x200E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x204B JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x2041 JUMPI PUSH2 0x2040 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x207A JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x2070 JUMPI PUSH2 0x206F PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x20A3 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x2099 JUMPI PUSH2 0x2098 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x20C8 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x20BE JUMPI PUSH2 0x20BD PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x20EB JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x20E1 JUMPI PUSH2 0x20E0 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x20FA JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2173 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216A SWAP1 PUSH2 0x367F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217C DUP2 PUSH2 0x1BE4 JUMP JUMPDEST ISZERO PUSH2 0x21BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21B3 SWAP1 PUSH2 0x36EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x21CA PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x21D3 DUP2 PUSH2 0x1BE4 JUMP JUMPDEST ISZERO PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220A SWAP1 PUSH2 0x36EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x231D PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1CBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x234F SWAP1 PUSH2 0x2C54 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2371 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x23B8 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x238A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23B8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23B8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23B7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x239C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x23C5 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23E2 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x23CA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242F DUP2 PUSH2 0x23FA JUMP JUMPDEST DUP2 EQ PUSH2 0x243A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244C DUP2 PUSH2 0x2426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2476 DUP5 DUP3 DUP6 ADD PUSH2 0x243D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2494 DUP2 PUSH2 0x247F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x248B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24EF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24D4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x24FE JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2520 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x252A DUP2 DUP6 PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x253A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x2543 DUP2 PUSH2 0x2504 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2568 DUP2 DUP5 PUSH2 0x2515 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2583 DUP2 PUSH2 0x2570 JUMP JUMPDEST DUP2 EQ PUSH2 0x258E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25A0 DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25BC JUMPI PUSH2 0x25BB PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25CA DUP5 DUP3 DUP6 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FE DUP3 PUSH2 0x25D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260E DUP2 PUSH2 0x25F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2629 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2605 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2638 DUP2 PUSH2 0x25F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2655 DUP2 PUSH2 0x262F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2672 JUMPI PUSH2 0x2671 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2680 DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2691 DUP6 DUP3 DUP7 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A4 DUP2 PUSH2 0x2570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x269B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2702 DUP3 PUSH2 0x2504 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2721 JUMPI PUSH2 0x2720 PUSH2 0x26CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2734 PUSH2 0x23E6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2740 DUP3 DUP3 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2760 JUMPI PUSH2 0x275F PUSH2 0x26CA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2789 PUSH2 0x2784 DUP5 PUSH2 0x2745 JUMP JUMPDEST PUSH2 0x272A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x27AC JUMPI PUSH2 0x27AB PUSH2 0x2771 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27D5 JUMPI DUP1 PUSH2 0x27C1 DUP9 DUP3 PUSH2 0x2591 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27AE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27F4 JUMPI PUSH2 0x27F3 PUSH2 0x26C5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2804 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2776 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2832 DUP6 DUP3 DUP7 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2853 JUMPI PUSH2 0x2852 PUSH2 0x23F5 JUMP JUMPDEST JUMPDEST PUSH2 0x285F DUP6 DUP3 DUP7 ADD PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2882 JUMPI PUSH2 0x2881 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2890 DUP7 DUP3 DUP8 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28A1 DUP7 DUP3 DUP8 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28B2 DUP7 DUP3 DUP8 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x28FC JUMPI PUSH2 0x28FB PUSH2 0x28BC JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x290D DUP3 PUSH2 0x28EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x291D DUP3 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292D DUP2 PUSH2 0x2912 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2948 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2924 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2964 JUMPI PUSH2 0x2963 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP5 DUP3 DUP6 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2984 DUP2 PUSH2 0x247F JUMP JUMPDEST DUP2 EQ PUSH2 0x298F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29A1 DUP2 PUSH2 0x297B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BE JUMPI PUSH2 0x29BD PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29CC DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x29DD DUP6 DUP3 DUP7 ADD PUSH2 0x2992 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A07 JUMPI PUSH2 0x2A06 PUSH2 0x26CA JUMP JUMPDEST JUMPDEST PUSH2 0x2A10 DUP3 PUSH2 0x2504 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A3F PUSH2 0x2A3A DUP5 PUSH2 0x29EC JUMP JUMPDEST PUSH2 0x272A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A5B JUMPI PUSH2 0x2A5A PUSH2 0x29E7 JUMP JUMPDEST JUMPDEST PUSH2 0x2A66 DUP5 DUP3 DUP6 PUSH2 0x2A1D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A83 JUMPI PUSH2 0x2A82 PUSH2 0x26C5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A93 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AB6 JUMPI PUSH2 0x2AB5 PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AC4 DUP8 DUP3 DUP9 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2AD5 DUP8 DUP3 DUP9 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AE6 DUP8 DUP3 DUP9 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B07 JUMPI PUSH2 0x2B06 PUSH2 0x23F5 JUMP JUMPDEST JUMPDEST PUSH2 0x2B13 DUP8 DUP3 DUP9 ADD PUSH2 0x2A6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B48 DUP2 PUSH2 0x2570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5A DUP4 DUP4 PUSH2 0x2B3F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B7C DUP2 PUSH2 0x2B1F JUMP JUMPDEST PUSH2 0x2B86 DUP2 DUP5 PUSH2 0x2B2A JUMP JUMPDEST SWAP3 POP PUSH2 0x2B91 DUP3 PUSH2 0x2B35 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BC2 JUMPI DUP2 MLOAD PUSH2 0x2BA9 DUP8 DUP3 PUSH2 0x2B4E JUMP JUMPDEST SWAP7 POP PUSH2 0x2BB4 DUP4 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B95 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B73 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BFC JUMPI PUSH2 0x2BFB PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0A DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C1B DUP6 DUP3 DUP7 ADD PUSH2 0x2646 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C6C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x2C25 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE2 PUSH1 0x21 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CED DUP3 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D11 DUP2 PUSH2 0x2CD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D74 PUSH1 0x3D DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7F DUP3 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA3 DUP2 PUSH2 0x2D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DBF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x2DCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2605 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2F PUSH1 0x2D DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E3A DUP3 PUSH2 0x2DD3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E5E DUP2 PUSH2 0x2E22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2ECE DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ED9 DUP4 PUSH2 0x2570 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F0E JUMPI PUSH2 0x2F0D PUSH2 0x2E94 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F24 DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2F57 JUMPI PUSH2 0x2F56 PUSH2 0x2E94 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F7D PUSH1 0x0 DUP4 PUSH2 0x2F62 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F88 DUP3 PUSH2 0x2F6D JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F9E DUP3 PUSH2 0x2F70 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FDE PUSH1 0x18 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FE9 DUP3 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x300D DUP2 PUSH2 0x2FD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3070 PUSH1 0x29 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x307B DUP3 PUSH2 0x3014 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x309F DUP2 PUSH2 0x3063 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30B9 DUP2 PUSH2 0x30A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30DC DUP2 PUSH2 0x30BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30F9 DUP2 PUSH2 0x30E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3118 DUP2 PUSH2 0x30FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3133 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x30B0 JUMP JUMPDEST PUSH2 0x3140 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x30D3 JUMP JUMPDEST PUSH2 0x314D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x30F0 JUMP JUMPDEST PUSH2 0x315A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x310F JUMP JUMPDEST PUSH2 0x3167 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x310F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3180 DUP2 PUSH2 0x257A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x319C JUMPI PUSH2 0x319B PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31AA DUP5 DUP3 DUP6 ADD PUSH2 0x3171 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C9 DUP3 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x31D3 DUP2 DUP6 PUSH2 0x31B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x31E3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24D1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31FB DUP3 DUP6 PUSH2 0x31BE JUMP JUMPDEST SWAP2 POP PUSH2 0x3207 DUP3 DUP5 PUSH2 0x31BE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x324D DUP3 PUSH2 0x2570 JUMP JUMPDEST SWAP2 POP PUSH2 0x3258 DUP4 PUSH2 0x2570 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3268 JUMPI PUSH2 0x3267 PUSH2 0x3213 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3288 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2924 JUMP JUMPDEST PUSH2 0x3295 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2605 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32F8 PUSH1 0x25 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3303 DUP3 PUSH2 0x329C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3327 DUP2 PUSH2 0x32EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338A PUSH1 0x24 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3395 DUP3 PUSH2 0x332E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33B9 DUP2 PUSH2 0x337D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F6 PUSH1 0x19 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3401 DUP3 PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3425 DUP2 PUSH2 0x33E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3488 PUSH1 0x32 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3493 DUP3 PUSH2 0x342C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34B7 DUP2 PUSH2 0x347B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351A PUSH1 0x2E DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3525 DUP3 PUSH2 0x34BE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3549 DUP2 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3577 DUP3 PUSH2 0x3550 JUMP JUMPDEST PUSH2 0x3581 DUP2 DUP6 PUSH2 0x355B JUMP JUMPDEST SWAP4 POP PUSH2 0x3591 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24D1 JUMP JUMPDEST PUSH2 0x359A DUP2 PUSH2 0x2504 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x35BA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x35C7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2605 JUMP JUMPDEST PUSH2 0x35D4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x269B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x35E6 DUP2 DUP5 PUSH2 0x356C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3600 DUP2 PUSH2 0x2426 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x361C JUMPI PUSH2 0x361B PUSH2 0x23F0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x362A DUP5 DUP3 DUP6 ADD PUSH2 0x35F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3669 PUSH1 0x20 DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3674 DUP3 PUSH2 0x3633 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3698 DUP2 PUSH2 0x365C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D5 PUSH1 0x1C DUP4 PUSH2 0x24C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x36E0 DUP3 PUSH2 0x369F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3704 DUP2 PUSH2 0x36C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x55DEB95FF85B6FC9D66C21189E8981699A6683DAA40ED13466A570 PUSH30 0x47917864736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"279:3774:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:29:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2764:455:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3802:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3447:245;;;:::i;:::-;;5004:179:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:101:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3702:91:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1154:27;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1814:454:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5249:314:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3227:111:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;1036:29:15:-;;;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:326:4:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;2764:455:15:-;2832:5;2848:18;2869:1;2848:22;;2880:26;2909:16;:14;:16::i;:::-;2880:45;;2939:6;2935:239;2956:18;2952:1;:22;2935:239;;;3011:13;2999:9;:25;:71;;;;;3056:11;3068:1;3056:14;;;;;;;:::i;:::-;;;;;;3040:13;:30;;;;:::i;:::-;3028:9;:42;2999:71;2996:123;;;3102:1;3096:8;;;;;;;;:::i;:::-;;3089:15;;;;;;;2996:123;3149:11;3161:1;3149:14;;;;;;;:::i;:::-;;;;;;3132:31;;;;;:::i;:::-;;;2977:3;;;;;:::i;:::-;;;;2935:239;;;;3190:22;;;;;;;;;;;;;;2764:455;;;;:::o;3802:124::-;3859:13;3894:14;3909:5;3894:21;;;;;;;;:::i;:::-;;;;;;;;;3887:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:124;;;:::o;3447:245::-;3391:7;3377:21;;:10;:21;;;3374:49;;3407:16;;;;;;;;;;;;;;3374:49;3502:14:::1;3519:21;3502:38;;3551:12;3576:10;3568:24;;3600:6;3568:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3550:61;;;3625:7;3621:65;;3654:21;;;;;;;;;;;;;;3621:65;3492:200;;3447:245::o:0;5004:179:4:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;3935:101:15:-;3982:7;4011:14;;4004:21;;3935:101;:::o;1929:204:4:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;3702:91:15:-;3744:7;3773:9;3766:16;;3702:91;:::o;1154:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2633:102:4:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;1814:454:15:-;1859:17;1902:9;1890;:21;1887:79;;;1933:22;;;;;;;;;;;;;;1887:79;1987:18;:37;;;2025:9;2044:16;928:1;2105:18;971:1;1987:160;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1975:172;;2194:10;2162:18;:29;2181:9;2162:29;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;2237:9;2224:36;2248:10;2224:36;;;;;;:::i;:::-;;;;;;;;1814:454;:::o;5249:314:4:-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:7:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;3227:111:15:-;3273:14;;:::i;:::-;3298:33;;;;;;;;3306:2;3298:33;;;;3310:2;3298:33;;;;1229:3;3298:33;;;;;3227:111;:::o;4388:162:4:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:4:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;12768:171:4:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;2273:481:15:-;2378:16;2397:18;:29;2416:9;2397:29;;;;;;;;;;;;;;;;;;;;;2378:48;;2436:12;2451:14;;2436:29;;2486:17;1229:3;2506:11;2518:1;2506:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2486:53;;2550:14;2567:30;2587:9;2567:19;:30::i;:::-;2550:47;;2607:28;2617:8;2627:7;2607:9;:28::i;:::-;2645:56;2658:7;2667:14;2690:8;2682:17;;;;;;;;:::i;:::-;;2667:33;;;;;;;;:::i;:::-;;;;;;;;;2645:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:56::i;:::-;2717:29;2727:8;2737;2717:29;;;;;;;:::i;:::-;;;;;;;;2367:387;;;;2273:481;;:::o;7540:261:4:-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;1237:214:7:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;15698:154:4:-;;;;;:::o;16558:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;415:696:11:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;8460:309:4:-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;1175:320:9:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9889:890:14:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;9091:920:4:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:117::-;5399:1;5396;5389:12;5413:180;5461:77;5458:1;5451:88;5558:4;5555:1;5548:15;5582:4;5579:1;5572:15;5599:281;5682:27;5704:4;5682:27;:::i;:::-;5674:6;5670:40;5812:6;5800:10;5797:22;5776:18;5764:10;5761:34;5758:62;5755:88;;;5823:18;;:::i;:::-;5755:88;5863:10;5859:2;5852:22;5642:238;5599:281;;:::o;5886:129::-;5920:6;5947:20;;:::i;:::-;5937:30;;5976:33;6004:4;5996:6;5976:33;:::i;:::-;5886:129;;;:::o;6021:311::-;6098:4;6188:18;6180:6;6177:30;6174:56;;;6210:18;;:::i;:::-;6174:56;6260:4;6252:6;6248:17;6240:25;;6320:4;6314;6310:15;6302:23;;6021:311;;;:::o;6338:117::-;6447:1;6444;6437:12;6478:710;6574:5;6599:81;6615:64;6672:6;6615:64;:::i;:::-;6599:81;:::i;:::-;6590:90;;6700:5;6729:6;6722:5;6715:21;6763:4;6756:5;6752:16;6745:23;;6816:4;6808:6;6804:17;6796:6;6792:30;6845:3;6837:6;6834:15;6831:122;;;6864:79;;:::i;:::-;6831:122;6979:6;6962:220;6996:6;6991:3;6988:15;6962:220;;;7071:3;7100:37;7133:3;7121:10;7100:37;:::i;:::-;7095:3;7088:50;7167:4;7162:3;7158:14;7151:21;;7038:144;7022:4;7017:3;7013:14;7006:21;;6962:220;;;6966:21;6580:608;;6478:710;;;;;:::o;7211:370::-;7282:5;7331:3;7324:4;7316:6;7312:17;7308:27;7298:122;;7339:79;;:::i;:::-;7298:122;7456:6;7443:20;7481:94;7571:3;7563:6;7556:4;7548:6;7544:17;7481:94;:::i;:::-;7472:103;;7288:293;7211:370;;;;:::o;7587:684::-;7680:6;7688;7737:2;7725:9;7716:7;7712:23;7708:32;7705:119;;;7743:79;;:::i;:::-;7705:119;7863:1;7888:53;7933:7;7924:6;7913:9;7909:22;7888:53;:::i;:::-;7878:63;;7834:117;8018:2;8007:9;8003:18;7990:32;8049:18;8041:6;8038:30;8035:117;;;8071:79;;:::i;:::-;8035:117;8176:78;8246:7;8237:6;8226:9;8222:22;8176:78;:::i;:::-;8166:88;;7961:303;7587:684;;;;;:::o;8277:619::-;8354:6;8362;8370;8419:2;8407:9;8398:7;8394:23;8390:32;8387:119;;;8425:79;;:::i;:::-;8387:119;8545:1;8570:53;8615:7;8606:6;8595:9;8591:22;8570:53;:::i;:::-;8560:63;;8516:117;8672:2;8698:53;8743:7;8734:6;8723:9;8719:22;8698:53;:::i;:::-;8688:63;;8643:118;8800:2;8826:53;8871:7;8862:6;8851:9;8847:22;8826:53;:::i;:::-;8816:63;;8771:118;8277:619;;;;;:::o;8902:180::-;8950:77;8947:1;8940:88;9047:4;9044:1;9037:15;9071:4;9068:1;9061:15;9088:115;9171:1;9164:5;9161:12;9151:46;;9177:18;;:::i;:::-;9151:46;9088:115;:::o;9209:131::-;9256:7;9285:5;9274:16;;9291:43;9328:5;9291:43;:::i;:::-;9209:131;;;:::o;9346:::-;9404:9;9437:34;9465:5;9437:34;:::i;:::-;9424:47;;9346:131;;;:::o;9483:147::-;9578:45;9617:5;9578:45;:::i;:::-;9573:3;9566:58;9483:147;;:::o;9636:238::-;9737:4;9775:2;9764:9;9760:18;9752:26;;9788:79;9864:1;9853:9;9849:17;9840:6;9788:79;:::i;:::-;9636:238;;;;:::o;9880:329::-;9939:6;9988:2;9976:9;9967:7;9963:23;9959:32;9956:119;;;9994:79;;:::i;:::-;9956:119;10114:1;10139:53;10184:7;10175:6;10164:9;10160:22;10139:53;:::i;:::-;10129:63;;10085:117;9880:329;;;;:::o;10215:116::-;10285:21;10300:5;10285:21;:::i;:::-;10278:5;10275:32;10265:60;;10321:1;10318;10311:12;10265:60;10215:116;:::o;10337:133::-;10380:5;10418:6;10405:20;10396:29;;10434:30;10458:5;10434:30;:::i;:::-;10337:133;;;;:::o;10476:468::-;10541:6;10549;10598:2;10586:9;10577:7;10573:23;10569:32;10566:119;;;10604:79;;:::i;:::-;10566:119;10724:1;10749:53;10794:7;10785:6;10774:9;10770:22;10749:53;:::i;:::-;10739:63;;10695:117;10851:2;10877:50;10919:7;10910:6;10899:9;10895:22;10877:50;:::i;:::-;10867:60;;10822:115;10476:468;;;;;:::o;10950:117::-;11059:1;11056;11049:12;11073:307;11134:4;11224:18;11216:6;11213:30;11210:56;;;11246:18;;:::i;:::-;11210:56;11284:29;11306:6;11284:29;:::i;:::-;11276:37;;11368:4;11362;11358:15;11350:23;;11073:307;;;:::o;11386:154::-;11470:6;11465:3;11460;11447:30;11532:1;11523:6;11518:3;11514:16;11507:27;11386:154;;;:::o;11546:410::-;11623:5;11648:65;11664:48;11705:6;11664:48;:::i;:::-;11648:65;:::i;:::-;11639:74;;11736:6;11729:5;11722:21;11774:4;11767:5;11763:16;11812:3;11803:6;11798:3;11794:16;11791:25;11788:112;;;11819:79;;:::i;:::-;11788:112;11909:41;11943:6;11938:3;11933;11909:41;:::i;:::-;11629:327;11546:410;;;;;:::o;11975:338::-;12030:5;12079:3;12072:4;12064:6;12060:17;12056:27;12046:122;;12087:79;;:::i;:::-;12046:122;12204:6;12191:20;12229:78;12303:3;12295:6;12288:4;12280:6;12276:17;12229:78;:::i;:::-;12220:87;;12036:277;11975:338;;;;:::o;12319:943::-;12414:6;12422;12430;12438;12487:3;12475:9;12466:7;12462:23;12458:33;12455:120;;;12494:79;;:::i;:::-;12455:120;12614:1;12639:53;12684:7;12675:6;12664:9;12660:22;12639:53;:::i;:::-;12629:63;;12585:117;12741:2;12767:53;12812:7;12803:6;12792:9;12788:22;12767:53;:::i;:::-;12757:63;;12712:118;12869:2;12895:53;12940:7;12931:6;12920:9;12916:22;12895:53;:::i;:::-;12885:63;;12840:118;13025:2;13014:9;13010:18;12997:32;13056:18;13048:6;13045:30;13042:117;;;13078:79;;:::i;:::-;13042:117;13183:62;13237:7;13228:6;13217:9;13213:22;13183:62;:::i;:::-;13173:72;;12968:287;12319:943;;;;;;;:::o;13268:104::-;13333:6;13361:4;13351:14;;13268:104;;;:::o;13378:143::-;13475:11;13512:3;13497:18;;13378:143;;;;:::o;13527:98::-;13592:4;13615:3;13607:11;;13527:98;;;:::o;13631:108::-;13708:24;13726:5;13708:24;:::i;:::-;13703:3;13696:37;13631:108;;:::o;13745:179::-;13814:10;13835:46;13877:3;13869:6;13835:46;:::i;:::-;13913:4;13908:3;13904:14;13890:28;;13745:179;;;;:::o;13930:111::-;13998:4;14030;14025:3;14021:14;14013:22;;13930:111;;;:::o;14079:694::-;14215:52;14261:5;14215:52;:::i;:::-;14283:84;14360:6;14355:3;14283:84;:::i;:::-;14276:91;;14391:54;14439:5;14391:54;:::i;:::-;14468:7;14499:1;14484:282;14509:6;14506:1;14503:13;14484:282;;;14585:6;14579:13;14612:63;14671:3;14656:13;14612:63;:::i;:::-;14605:70;;14698:58;14749:6;14698:58;:::i;:::-;14688:68;;14544:222;14531:1;14528;14524:9;14519:14;;14484:282;;;14488:14;14191:582;;;14079:694;;:::o;14779:314::-;14918:4;14956:2;14945:9;14941:18;14933:26;;14969:117;15083:1;15072:9;15068:17;15059:6;14969:117;:::i;:::-;14779:314;;;;:::o;15099:474::-;15167:6;15175;15224:2;15212:9;15203:7;15199:23;15195:32;15192:119;;;15230:79;;:::i;:::-;15192:119;15350:1;15375:53;15420:7;15411:6;15400:9;15396:22;15375:53;:::i;:::-;15365:63;;15321:117;15477:2;15503:53;15548:7;15539:6;15528:9;15524:22;15503:53;:::i;:::-;15493:63;;15448:118;15099:474;;;;;:::o;15579:180::-;15627:77;15624:1;15617:88;15724:4;15721:1;15714:15;15748:4;15745:1;15738:15;15765:320;15809:6;15846:1;15840:4;15836:12;15826:22;;15893:1;15887:4;15883:12;15914:18;15904:81;;15970:4;15962:6;15958:17;15948:27;;15904:81;16032:2;16024:6;16021:14;16001:18;15998:38;15995:84;;;16051:18;;:::i;:::-;15995:84;15816:269;15765:320;;;:::o;16091:220::-;16231:34;16227:1;16219:6;16215:14;16208:58;16300:3;16295:2;16287:6;16283:15;16276:28;16091:220;:::o;16317:366::-;16459:3;16480:67;16544:2;16539:3;16480:67;:::i;:::-;16473:74;;16556:93;16645:3;16556:93;:::i;:::-;16674:2;16669:3;16665:12;16658:19;;16317:366;;;:::o;16689:419::-;16855:4;16893:2;16882:9;16878:18;16870:26;;16942:9;16936:4;16932:20;16928:1;16917:9;16913:17;16906:47;16970:131;17096:4;16970:131;:::i;:::-;16962:139;;16689:419;;;:::o;17114:248::-;17254:34;17250:1;17242:6;17238:14;17231:58;17323:31;17318:2;17310:6;17306:15;17299:56;17114:248;:::o;17368:366::-;17510:3;17531:67;17595:2;17590:3;17531:67;:::i;:::-;17524:74;;17607:93;17696:3;17607:93;:::i;:::-;17725:2;17720:3;17716:12;17709:19;;17368:366;;;:::o;17740:419::-;17906:4;17944:2;17933:9;17929:18;17921:26;;17993:9;17987:4;17983:20;17979:1;17968:9;17964:17;17957:47;18021:131;18147:4;18021:131;:::i;:::-;18013:139;;17740:419;;;:::o;18165:332::-;18286:4;18324:2;18313:9;18309:18;18301:26;;18337:71;18405:1;18394:9;18390:17;18381:6;18337:71;:::i;:::-;18418:72;18486:2;18475:9;18471:18;18462:6;18418:72;:::i;:::-;18165:332;;;;;:::o;18503:232::-;18643:34;18639:1;18631:6;18627:14;18620:58;18712:15;18707:2;18699:6;18695:15;18688:40;18503:232;:::o;18741:366::-;18883:3;18904:67;18968:2;18963:3;18904:67;:::i;:::-;18897:74;;18980:93;19069:3;18980:93;:::i;:::-;19098:2;19093:3;19089:12;19082:19;;18741:366;;;:::o;19113:419::-;19279:4;19317:2;19306:9;19302:18;19294:26;;19366:9;19360:4;19356:20;19352:1;19341:9;19337:17;19330:47;19394:131;19520:4;19394:131;:::i;:::-;19386:139;;19113:419;;;:::o;19538:180::-;19586:77;19583:1;19576:88;19683:4;19680:1;19673:15;19707:4;19704:1;19697:15;19724:180;19772:77;19769:1;19762:88;19869:4;19866:1;19859:15;19893:4;19890:1;19883:15;19910:305;19950:3;19969:20;19987:1;19969:20;:::i;:::-;19964:25;;20003:20;20021:1;20003:20;:::i;:::-;19998:25;;20157:1;20089:66;20085:74;20082:1;20079:81;20076:107;;;20163:18;;:::i;:::-;20076:107;20207:1;20204;20200:9;20193:16;;19910:305;;;;:::o;20221:233::-;20260:3;20283:24;20301:5;20283:24;:::i;:::-;20274:33;;20329:66;20322:5;20319:77;20316:103;;;20399:18;;:::i;:::-;20316:103;20446:1;20439:5;20435:13;20428:20;;20221:233;;;:::o;20460:147::-;20561:11;20598:3;20583:18;;20460:147;;;;:::o;20613:114::-;;:::o;20733:398::-;20892:3;20913:83;20994:1;20989:3;20913:83;:::i;:::-;20906:90;;21005:93;21094:3;21005:93;:::i;:::-;21123:1;21118:3;21114:11;21107:18;;20733:398;;;:::o;21137:379::-;21321:3;21343:147;21486:3;21343:147;:::i;:::-;21336:154;;21507:3;21500:10;;21137:379;;;:::o;21522:174::-;21662:26;21658:1;21650:6;21646:14;21639:50;21522:174;:::o;21702:366::-;21844:3;21865:67;21929:2;21924:3;21865:67;:::i;:::-;21858:74;;21941:93;22030:3;21941:93;:::i;:::-;22059:2;22054:3;22050:12;22043:19;;21702:366;;;:::o;22074:419::-;22240:4;22278:2;22267:9;22263:18;22255:26;;22327:9;22321:4;22317:20;22313:1;22302:9;22298:17;22291:47;22355:131;22481:4;22355:131;:::i;:::-;22347:139;;22074:419;;;:::o;22499:228::-;22639:34;22635:1;22627:6;22623:14;22616:58;22708:11;22703:2;22695:6;22691:15;22684:36;22499:228;:::o;22733:366::-;22875:3;22896:67;22960:2;22955:3;22896:67;:::i;:::-;22889:74;;22972:93;23061:3;22972:93;:::i;:::-;23090:2;23085:3;23081:12;23074:19;;22733:366;;;:::o;23105:419::-;23271:4;23309:2;23298:9;23294:18;23286:26;;23358:9;23352:4;23348:20;23344:1;23333:9;23329:17;23322:47;23386:131;23512:4;23386:131;:::i;:::-;23378:139;;23105:419;;;:::o;23530:77::-;23567:7;23596:5;23585:16;;23530:77;;;:::o;23613:118::-;23700:24;23718:5;23700:24;:::i;:::-;23695:3;23688:37;23613:118;;:::o;23737:101::-;23773:7;23813:18;23806:5;23802:30;23791:41;;23737:101;;;:::o;23844:115::-;23929:23;23946:5;23929:23;:::i;:::-;23924:3;23917:36;23844:115;;:::o;23965:89::-;24001:7;24041:6;24034:5;24030:18;24019:29;;23965:89;;;:::o;24060:115::-;24145:23;24162:5;24145:23;:::i;:::-;24140:3;24133:36;24060:115;;:::o;24181:93::-;24217:7;24257:10;24250:5;24246:22;24235:33;;24181:93;;;:::o;24280:115::-;24365:23;24382:5;24365:23;:::i;:::-;24360:3;24353:36;24280:115;;:::o;24401:648::-;24598:4;24636:3;24625:9;24621:19;24613:27;;24650:71;24718:1;24707:9;24703:17;24694:6;24650:71;:::i;:::-;24731:70;24797:2;24786:9;24782:18;24773:6;24731:70;:::i;:::-;24811;24877:2;24866:9;24862:18;24853:6;24811:70;:::i;:::-;24891;24957:2;24946:9;24942:18;24933:6;24891:70;:::i;:::-;24971:71;25037:3;25026:9;25022:19;25013:6;24971:71;:::i;:::-;24401:648;;;;;;;;:::o;25055:143::-;25112:5;25143:6;25137:13;25128:22;;25159:33;25186:5;25159:33;:::i;:::-;25055:143;;;;:::o;25204:351::-;25274:6;25323:2;25311:9;25302:7;25298:23;25294:32;25291:119;;;25329:79;;:::i;:::-;25291:119;25449:1;25474:64;25530:7;25521:6;25510:9;25506:22;25474:64;:::i;:::-;25464:74;;25420:128;25204:351;;;;:::o;25561:148::-;25663:11;25700:3;25685:18;;25561:148;;;;:::o;25715:377::-;25821:3;25849:39;25882:5;25849:39;:::i;:::-;25904:89;25986:6;25981:3;25904:89;:::i;:::-;25897:96;;26002:52;26047:6;26042:3;26035:4;26028:5;26024:16;26002:52;:::i;:::-;26079:6;26074:3;26070:16;26063:23;;25825:267;25715:377;;;;:::o;26098:435::-;26278:3;26300:95;26391:3;26382:6;26300:95;:::i;:::-;26293:102;;26412:95;26503:3;26494:6;26412:95;:::i;:::-;26405:102;;26524:3;26517:10;;26098:435;;;;;:::o;26539:180::-;26587:77;26584:1;26577:88;26684:4;26681:1;26674:15;26708:4;26705:1;26698:15;26725:176;26757:1;26774:20;26792:1;26774:20;:::i;:::-;26769:25;;26808:20;26826:1;26808:20;:::i;:::-;26803:25;;26847:1;26837:35;;26852:18;;:::i;:::-;26837:35;26893:1;26890;26886:9;26881:14;;26725:176;;;;:::o;26907:348::-;27036:4;27074:2;27063:9;27059:18;27051:26;;27087:79;27163:1;27152:9;27148:17;27139:6;27087:79;:::i;:::-;27176:72;27244:2;27233:9;27229:18;27220:6;27176:72;:::i;:::-;26907:348;;;;;:::o;27261:224::-;27401:34;27397:1;27389:6;27385:14;27378:58;27470:7;27465:2;27457:6;27453:15;27446:32;27261:224;:::o;27491:366::-;27633:3;27654:67;27718:2;27713:3;27654:67;:::i;:::-;27647:74;;27730:93;27819:3;27730:93;:::i;:::-;27848:2;27843:3;27839:12;27832:19;;27491:366;;;:::o;27863:419::-;28029:4;28067:2;28056:9;28052:18;28044:26;;28116:9;28110:4;28106:20;28102:1;28091:9;28087:17;28080:47;28144:131;28270:4;28144:131;:::i;:::-;28136:139;;27863:419;;;:::o;28288:223::-;28428:34;28424:1;28416:6;28412:14;28405:58;28497:6;28492:2;28484:6;28480:15;28473:31;28288:223;:::o;28517:366::-;28659:3;28680:67;28744:2;28739:3;28680:67;:::i;:::-;28673:74;;28756:93;28845:3;28756:93;:::i;:::-;28874:2;28869:3;28865:12;28858:19;;28517:366;;;:::o;28889:419::-;29055:4;29093:2;29082:9;29078:18;29070:26;;29142:9;29136:4;29132:20;29128:1;29117:9;29113:17;29106:47;29170:131;29296:4;29170:131;:::i;:::-;29162:139;;28889:419;;;:::o;29314:175::-;29454:27;29450:1;29442:6;29438:14;29431:51;29314:175;:::o;29495:366::-;29637:3;29658:67;29722:2;29717:3;29658:67;:::i;:::-;29651:74;;29734:93;29823:3;29734:93;:::i;:::-;29852:2;29847:3;29843:12;29836:19;;29495:366;;;:::o;29867:419::-;30033:4;30071:2;30060:9;30056:18;30048:26;;30120:9;30114:4;30110:20;30106:1;30095:9;30091:17;30084:47;30148:131;30274:4;30148:131;:::i;:::-;30140:139;;29867:419;;;:::o;30292:237::-;30432:34;30428:1;30420:6;30416:14;30409:58;30501:20;30496:2;30488:6;30484:15;30477:45;30292:237;:::o;30535:366::-;30677:3;30698:67;30762:2;30757:3;30698:67;:::i;:::-;30691:74;;30774:93;30863:3;30774:93;:::i;:::-;30892:2;30887:3;30883:12;30876:19;;30535:366;;;:::o;30907:419::-;31073:4;31111:2;31100:9;31096:18;31088:26;;31160:9;31154:4;31150:20;31146:1;31135:9;31131:17;31124:47;31188:131;31314:4;31188:131;:::i;:::-;31180:139;;30907:419;;;:::o;31332:233::-;31472:34;31468:1;31460:6;31456:14;31449:58;31541:16;31536:2;31528:6;31524:15;31517:41;31332:233;:::o;31571:366::-;31713:3;31734:67;31798:2;31793:3;31734:67;:::i;:::-;31727:74;;31810:93;31899:3;31810:93;:::i;:::-;31928:2;31923:3;31919:12;31912:19;;31571:366;;;:::o;31943:419::-;32109:4;32147:2;32136:9;32132:18;32124:26;;32196:9;32190:4;32186:20;32182:1;32171:9;32167:17;32160:47;32224:131;32350:4;32224:131;:::i;:::-;32216:139;;31943:419;;;:::o;32368:98::-;32419:6;32453:5;32447:12;32437:22;;32368:98;;;:::o;32472:168::-;32555:11;32589:6;32584:3;32577:19;32629:4;32624:3;32620:14;32605:29;;32472:168;;;;:::o;32646:360::-;32732:3;32760:38;32792:5;32760:38;:::i;:::-;32814:70;32877:6;32872:3;32814:70;:::i;:::-;32807:77;;32893:52;32938:6;32933:3;32926:4;32919:5;32915:16;32893:52;:::i;:::-;32970:29;32992:6;32970:29;:::i;:::-;32965:3;32961:39;32954:46;;32736:270;32646:360;;;;:::o;33012:640::-;33207:4;33245:3;33234:9;33230:19;33222:27;;33259:71;33327:1;33316:9;33312:17;33303:6;33259:71;:::i;:::-;33340:72;33408:2;33397:9;33393:18;33384:6;33340:72;:::i;:::-;33422;33490:2;33479:9;33475:18;33466:6;33422:72;:::i;:::-;33541:9;33535:4;33531:20;33526:2;33515:9;33511:18;33504:48;33569:76;33640:4;33631:6;33569:76;:::i;:::-;33561:84;;33012:640;;;;;;;:::o;33658:141::-;33714:5;33745:6;33739:13;33730:22;;33761:32;33787:5;33761:32;:::i;:::-;33658:141;;;;:::o;33805:349::-;33874:6;33923:2;33911:9;33902:7;33898:23;33894:32;33891:119;;;33929:79;;:::i;:::-;33891:119;34049:1;34074:63;34129:7;34120:6;34109:9;34105:22;34074:63;:::i;:::-;34064:73;;34020:127;33805:349;;;;:::o;34160:182::-;34300:34;34296:1;34288:6;34284:14;34277:58;34160:182;:::o;34348:366::-;34490:3;34511:67;34575:2;34570:3;34511:67;:::i;:::-;34504:74;;34587:93;34676:3;34587:93;:::i;:::-;34705:2;34700:3;34696:12;34689:19;;34348:366;;;:::o;34720:419::-;34886:4;34924:2;34913:9;34909:18;34901:26;;34973:9;34967:4;34963:20;34959:1;34948:9;34944:17;34937:47;35001:131;35127:4;35001:131;:::i;:::-;34993:139;;34720:419;;;:::o;35145:178::-;35285:30;35281:1;35273:6;35269:14;35262:54;35145:178;:::o;35329:366::-;35471:3;35492:67;35556:2;35551:3;35492:67;:::i;:::-;35485:74;;35568:93;35657:3;35568:93;:::i;:::-;35686:2;35681:3;35677:12;35670:19;;35329:366;;;:::o;35701:419::-;35867:4;35905:2;35894:9;35890:18;35882:26;;35954:9;35948:4;35944:20;35940:1;35929:9;35925:17;35918:47;35982:131;36108:4;35982:131;:::i;:::-;35974:139;;35701:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2829000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2946","getApproved(uint256)":"5300","getArrayChance()":"infinite","getBreedByModdedRng(uint256)":"infinite","getDogTokenUris(uint256)":"infinite","getMintFee()":"infinite","getTokenCounter()":"2482","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","rawFulfillRandomWords(uint256,uint256[])":"infinite","requestIds(uint256)":"infinite","requestNft()":"infinite","s_tokenCounter()":"2541","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getArrayChance()":"db169c69","getBreedByModdedRng(uint256)":"30d6b0f1","getDogTokenUris(uint256)":"3af25975","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestIds(uint256)":"8796ba8c","requestNft()":"aa152491","s_tokenCounter()":"0b21a83b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"dogTokenUris\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Ipfs_NotEnoughToMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ipfs_Not_Owner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ipfs_RangeOutOfBound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ipfs_TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"requestedNft\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getArrayChance\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedByModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenUris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomIpfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/RandomIpfsNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\n\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage{\\n\\n    error Ipfs_NotEnoughToMint();\\n    error ipfs_Not_Owner();\\n    error ipfs_RangeOutOfBound();\\n    error ipfs_TransferFailed();\\n\\n    event requestedNft(uint256 indexed requestId, address requester);\\n    event NftMinted(breed dogBreed, address minter);\\n\\n\\n    enum breed{\\n        pug,\\n        shibaInu,\\n        St_bernard\\n    }\\n\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinatorv2;\\n    uint64 private immutable i_subscriptionId;\\n    bytes32 private immutable i_gasLane;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    mapping(uint=> address) private s_requestIdToOwner;\\n\\n    uint256 public s_tokenCounter;\\n    address private immutable i_owner;\\n    uint256 private immutable i_mintFee;\\n\\n\\n\\n    uint256[] public requestIds;\\n    uint internal constant MAX_CHANCE_VALUE = 100;\\n    string[] internal s_dogTokenUris;\\n\\n\\n    constructor(address vrfCoordinatorV2, uint64 subscriptionId, bytes32 gasLane, uint32 callbackGasLimit,    \\n    string[3] memory dogTokenUris, uint256 mintFee) VRFConsumerBaseV2(vrfCoordinatorV2) \\n    ERC721(\\\"RandomIpfsNft\\\", \\\"RIN\\\") {\\n        i_vrfCoordinatorv2 = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_subscriptionId = subscriptionId;\\n        i_gasLane = gasLane;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_dogTokenUris = dogTokenUris;\\n        i_mintFee = mintFee;\\n        i_owner = msg.sender;\\n\\n    }\\n\\n    function requestNft() payable public returns(uint256 requestId){\\n        if(msg.value < i_mintFee){\\n            revert Ipfs_NotEnoughToMint();\\n        }\\n        requestId = i_vrfCoordinatorv2.requestRandomWords(i_gasLane,\\n        i_subscriptionId,\\n        REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS);\\n\\n            s_requestIdToOwner[requestId] = msg.sender;\\n\\n            emit requestedNft(requestId, msg.sender );\\n\\n    }\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override{\\n\\n        address dogOwner = s_requestIdToOwner[requestId];\\n        uint tokenId = s_tokenCounter;\\n\\n        \\n\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n\\n        breed dogBreed = getBreedByModdedRng(moddedRng);\\n        _safeMint(dogOwner, tokenId);\\n        _setTokenURI(tokenId, s_dogTokenUris[uint256(dogBreed)]);\\n\\n        emit NftMinted(dogBreed, dogOwner);\\n\\n    }\\n    \\n    function getBreedByModdedRng(uint256 moddedRng) public pure returns(breed){\\n        uint cumilativeSum = 0;\\n        uint[3] memory chanceArray = getArrayChance();\\n        for(uint i = 0 ; i < chanceArray.length ; i++ ){\\n            if(moddedRng > cumilativeSum && moddedRng < cumilativeSum + chanceArray[i]){\\n                return breed(i);\\n            }\\n            cumilativeSum += chanceArray[i];\\n        }\\n        revert ipfs_RangeOutOfBound();\\n    }\\n\\n\\n\\n    function getArrayChance() public pure returns(uint[3] memory){\\n        return [10, 30, MAX_CHANCE_VALUE];\\n    }\\n     modifier onlyOwner(){\\n        if(msg.sender != i_owner) revert ipfs_Not_Owner();\\n        _;\\n    }\\n\\n    function withdraw() onlyOwner payable public {\\n        uint256 amount = address(this).balance;\\n        (bool success,) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if(!success){\\n            revert ipfs_TransferFailed();\\n        }\\n    }\\n\\n        function getMintFee() public view returns(uint256){\\n            return i_mintFee;\\n        }\\n        function getDogTokenUris(uint index) public view returns(string memory){\\n            return s_dogTokenUris[index];\\n        }\\n        function getTokenCounter() public view returns(uint256){\\n            return s_tokenCounter;\\n        }\\n        \\n\\n   \\n\\n}\\n\",\"keccak256\":\"0xbfd54da75d520d2318532789c33cf56e77d18dafc9a8b847c8e6f3242df6054e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1137,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1139,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1143,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1147,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1151,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1157,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2185,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":3805,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_requestIdToOwner","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_address)"},{"astId":3807,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"8","type":"t_uint256"},{"astId":3814,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"requestIds","offset":0,"slot":"9","type":"t_array(t_uint256)dyn_storage"},{"astId":3820,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_dogTokenUris","offset":0,"slot":"10","type":"t_array(t_string_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}